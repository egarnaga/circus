!function(i){var r={};function a(n){if(r[n])return r[n].exports;var e=r[n]={i:n,l:!1,exports:{}};return i[n].call(e.exports,e,e.exports,a),e.l=!0,e.exports}a.m=i,a.c=r,a.d=function(n,e,i){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(i,r,function(n){return e[n]}.bind(null,r));return i},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="",a(a.s="./js/vendor.js")}({"../node_modules/webpack/buildin/amd-options.js":function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))\n\n//# sourceURL=webpack:///../node_modules/webpack/buildin/amd-options.js?")},"../node_modules/webpack/buildin/harmony-module.js":function(module,exports){eval('module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "exports", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///../node_modules/webpack/buildin/harmony-module.js?')},"./js/vendor.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vendor_swiper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/swiper */ "./js/vendor/swiper.js");\n/* harmony import */ var _vendor_jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vendor/jquery */ "./js/vendor/jquery.js");\n\n\n\n//# sourceURL=webpack:///./js/vendor.js?')},"./js/vendor/jquery.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {var _this = undefined;\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nvar jquery = function jquery() {\n  /*! jQuery v2.2.4 | (c) jQuery Foundation | jquery.org/license */\n  !function (a, b) {\n    "object" == ( false ? undefined : _typeof(module)) && "object" == _typeof(module.exports) ? module.exports = a.document ? b(a, !0) : function (a) {\n      if (!a.document) throw new Error("jQuery requires a window with a document");\n      return b(a);\n    } : b(a);\n  }("undefined" != typeof window ? window : _this, function (a, b) {\n    var c = [],\n        d = a.document,\n        e = c.slice,\n        f = c.concat,\n        g = c.push,\n        h = c.indexOf,\n        i = {},\n        j = i.toString,\n        k = i.hasOwnProperty,\n        l = {},\n        m = "2.2.4",\n        n = function n(a, b) {\n      return new n.fn.init(a, b);\n    },\n        o = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n        p = /^-ms-/,\n        q = /-([\\da-z])/gi,\n        r = function r(a, b) {\n      return b.toUpperCase();\n    };\n\n    n.fn = n.prototype = {\n      jquery: m,\n      constructor: n,\n      selector: "",\n      length: 0,\n      toArray: function toArray() {\n        return e.call(this);\n      },\n      get: function get(a) {\n        return null != a ? 0 > a ? this[a + this.length] : this[a] : e.call(this);\n      },\n      pushStack: function pushStack(a) {\n        var b = n.merge(this.constructor(), a);\n        return b.prevObject = this, b.context = this.context, b;\n      },\n      each: function each(a) {\n        return n.each(this, a);\n      },\n      map: function map(a) {\n        return this.pushStack(n.map(this, function (b, c) {\n          return a.call(b, c, b);\n        }));\n      },\n      slice: function slice() {\n        return this.pushStack(e.apply(this, arguments));\n      },\n      first: function first() {\n        return this.eq(0);\n      },\n      last: function last() {\n        return this.eq(-1);\n      },\n      eq: function eq(a) {\n        var b = this.length,\n            c = +a + (0 > a ? b : 0);\n        return this.pushStack(c >= 0 && b > c ? [this[c]] : []);\n      },\n      end: function end() {\n        return this.prevObject || this.constructor();\n      },\n      push: g,\n      sort: c.sort,\n      splice: c.splice\n    }, n.extend = n.fn.extend = function () {\n      var a,\n          b,\n          c,\n          d,\n          e,\n          f,\n          g = arguments[0] || {},\n          h = 1,\n          i = arguments.length,\n          j = !1;\n\n      for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == _typeof(g) || n.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++) {\n        if (null != (a = arguments[h])) for (b in a) {\n          c = g[b], d = a[b], g !== d && (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? (e = !1, f = c && n.isArray(c) ? c : []) : f = c && n.isPlainObject(c) ? c : {}, g[b] = n.extend(j, f, d)) : void 0 !== d && (g[b] = d));\n        }\n      }\n\n      return g;\n    }, n.extend({\n      expando: "jQuery" + (m + Math.random()).replace(/\\D/g, ""),\n      isReady: !0,\n      error: function error(a) {\n        throw new Error(a);\n      },\n      noop: function noop() {},\n      isFunction: function isFunction(a) {\n        return "function" === n.type(a);\n      },\n      isArray: Array.isArray,\n      isWindow: function isWindow(a) {\n        return null != a && a === a.window;\n      },\n      isNumeric: function isNumeric(a) {\n        var b = a && a.toString();\n        return !n.isArray(a) && b - parseFloat(b) + 1 >= 0;\n      },\n      isPlainObject: function isPlainObject(a) {\n        var b;\n        if ("object" !== n.type(a) || a.nodeType || n.isWindow(a)) return !1;\n        if (a.constructor && !k.call(a, "constructor") && !k.call(a.constructor.prototype || {}, "isPrototypeOf")) return !1;\n\n        for (b in a) {\n          ;\n        }\n\n        return void 0 === b || k.call(a, b);\n      },\n      isEmptyObject: function isEmptyObject(a) {\n        var b;\n\n        for (b in a) {\n          return !1;\n        }\n\n        return !0;\n      },\n      type: function type(a) {\n        return null == a ? a + "" : "object" == _typeof(a) || "function" == typeof a ? i[j.call(a)] || "object" : _typeof(a);\n      },\n      globalEval: function globalEval(a) {\n        var b,\n            c = eval;\n        a = n.trim(a), a && (1 === a.indexOf("use strict") ? (b = d.createElement("script"), b.text = a, d.head.appendChild(b).parentNode.removeChild(b)) : c(a));\n      },\n      camelCase: function camelCase(a) {\n        return a.replace(p, "ms-").replace(q, r);\n      },\n      nodeName: function nodeName(a, b) {\n        return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();\n      },\n      each: function each(a, b) {\n        var c,\n            d = 0;\n\n        if (s(a)) {\n          for (c = a.length; c > d; d++) {\n            if (b.call(a[d], d, a[d]) === !1) break;\n          }\n        } else for (d in a) {\n          if (b.call(a[d], d, a[d]) === !1) break;\n        }\n\n        return a;\n      },\n      trim: function trim(a) {\n        return null == a ? "" : (a + "").replace(o, "");\n      },\n      makeArray: function makeArray(a, b) {\n        var c = b || [];\n        return null != a && (s(Object(a)) ? n.merge(c, "string" == typeof a ? [a] : a) : g.call(c, a)), c;\n      },\n      inArray: function inArray(a, b, c) {\n        return null == b ? -1 : h.call(b, a, c);\n      },\n      merge: function merge(a, b) {\n        for (var c = +b.length, d = 0, e = a.length; c > d; d++) {\n          a[e++] = b[d];\n        }\n\n        return a.length = e, a;\n      },\n      grep: function grep(a, b, c) {\n        for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) {\n          d = !b(a[f], f), d !== h && e.push(a[f]);\n        }\n\n        return e;\n      },\n      map: function map(a, b, c) {\n        var d,\n            e,\n            g = 0,\n            h = [];\n        if (s(a)) for (d = a.length; d > g; g++) {\n          e = b(a[g], g, c), null != e && h.push(e);\n        } else for (g in a) {\n          e = b(a[g], g, c), null != e && h.push(e);\n        }\n        return f.apply([], h);\n      },\n      guid: 1,\n      proxy: function proxy(a, b) {\n        var c, d, f;\n        return "string" == typeof b && (c = a[b], b = a, a = c), n.isFunction(a) ? (d = e.call(arguments, 2), f = function f() {\n          return a.apply(b || this, d.concat(e.call(arguments)));\n        }, f.guid = a.guid = a.guid || n.guid++, f) : void 0;\n      },\n      now: Date.now,\n      support: l\n    }), "function" == typeof Symbol && (n.fn[Symbol.iterator] = c[Symbol.iterator]), n.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (a, b) {\n      i["[object " + b + "]"] = b.toLowerCase();\n    });\n\n    function s(a) {\n      var b = !!a && "length" in a && a.length,\n          c = n.type(a);\n      return "function" === c || n.isWindow(a) ? !1 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a;\n    }\n\n    var t = function (a) {\n      var b,\n          c,\n          d,\n          e,\n          f,\n          g,\n          h,\n          i,\n          j,\n          k,\n          l,\n          m,\n          n,\n          o,\n          p,\n          q,\n          r,\n          s,\n          t,\n          u = "sizzle" + 1 * new Date(),\n          v = a.document,\n          w = 0,\n          x = 0,\n          y = ga(),\n          z = ga(),\n          A = ga(),\n          B = function B(a, b) {\n        return a === b && (l = !0), 0;\n      },\n          C = 1 << 31,\n          D = {}.hasOwnProperty,\n          E = [],\n          F = E.pop,\n          G = E.push,\n          H = E.push,\n          I = E.slice,\n          J = function J(a, b) {\n        for (var c = 0, d = a.length; d > c; c++) {\n          if (a[c] === b) return c;\n        }\n\n        return -1;\n      },\n          K = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",\n          L = "[\\\\x20\\\\t\\\\r\\\\n\\\\f]",\n          M = "(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+",\n          N = "\\\\[" + L + "*(" + M + ")(?:" + L + "*([*^$|!~]?=)" + L + "*(?:\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\"((?:\\\\\\\\.|[^\\\\\\\\\\"])*)\\"|(" + M + "))|)" + L + "*\\\\]",\n          O = ":(" + M + ")(?:\\\\(((\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\"((?:\\\\\\\\.|[^\\\\\\\\\\"])*)\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|" + N + ")*)|.*)\\\\)|)",\n          P = new RegExp(L + "+", "g"),\n          Q = new RegExp("^" + L + "+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)" + L + "+$", "g"),\n          R = new RegExp("^" + L + "*," + L + "*"),\n          S = new RegExp("^" + L + "*([>+~]|" + L + ")" + L + "*"),\n          T = new RegExp("=" + L + "*([^\\\\]\'\\"]*?)" + L + "*\\\\]", "g"),\n          U = new RegExp(O),\n          V = new RegExp("^" + M + "$"),\n          W = {\n        ID: new RegExp("^#(" + M + ")"),\n        CLASS: new RegExp("^\\\\.(" + M + ")"),\n        TAG: new RegExp("^(" + M + "|[*])"),\n        ATTR: new RegExp("^" + N),\n        PSEUDO: new RegExp("^" + O),\n        CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(" + L + "*(even|odd|(([+-]|)(\\\\d*)n|)" + L + "*(?:([+-]|)" + L + "*(\\\\d+)|))" + L + "*\\\\)|)", "i"),\n        bool: new RegExp("^(?:" + K + ")$", "i"),\n        needsContext: new RegExp("^" + L + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(" + L + "*((?:-\\\\d)?\\\\d*)" + L + "*\\\\)|)(?=[^-]|$)", "i")\n      },\n          X = /^(?:input|select|textarea|button)$/i,\n          Y = /^h\\d$/i,\n          Z = /^[^{]+\\{\\s*\\[native \\w/,\n          $ = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n          _ = /[+~]/,\n          aa = /\'|\\\\/g,\n          ba = new RegExp("\\\\\\\\([\\\\da-f]{1,6}" + L + "?|(" + L + ")|.)", "ig"),\n          ca = function ca(a, b, c) {\n        var d = "0x" + b - 65536;\n        return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320);\n      },\n          da = function da() {\n        m();\n      };\n\n      try {\n        H.apply(E = I.call(v.childNodes), v.childNodes), E[v.childNodes.length].nodeType;\n      } catch (ea) {\n        H = {\n          apply: E.length ? function (a, b) {\n            G.apply(a, I.call(b));\n          } : function (a, b) {\n            var c = a.length,\n                d = 0;\n\n            while (a[c++] = b[d++]) {\n              ;\n            }\n\n            a.length = c - 1;\n          }\n        };\n      }\n\n      function fa(a, b, d, e) {\n        var f,\n            h,\n            j,\n            k,\n            l,\n            o,\n            r,\n            s,\n            w = b && b.ownerDocument,\n            x = b ? b.nodeType : 9;\n        if (d = d || [], "string" != typeof a || !a || 1 !== x && 9 !== x && 11 !== x) return d;\n\n        if (!e && ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, p)) {\n          if (11 !== x && (o = $.exec(a))) if (f = o[1]) {\n            if (9 === x) {\n              if (!(j = b.getElementById(f))) return d;\n              if (j.id === f) return d.push(j), d;\n            } else if (w && (j = w.getElementById(f)) && t(b, j) && j.id === f) return d.push(j), d;\n          } else {\n            if (o[2]) return H.apply(d, b.getElementsByTagName(a)), d;\n            if ((f = o[3]) && c.getElementsByClassName && b.getElementsByClassName) return H.apply(d, b.getElementsByClassName(f)), d;\n          }\n\n          if (c.qsa && !A[a + " "] && (!q || !q.test(a))) {\n            if (1 !== x) w = b, s = a;else if ("object" !== b.nodeName.toLowerCase()) {\n              (k = b.getAttribute("id")) ? k = k.replace(aa, "\\\\$&") : b.setAttribute("id", k = u), r = g(a), h = r.length, l = V.test(k) ? "#" + k : "[id=\'" + k + "\']";\n\n              while (h--) {\n                r[h] = l + " " + qa(r[h]);\n              }\n\n              s = r.join(","), w = _.test(a) && oa(b.parentNode) || b;\n            }\n            if (s) try {\n              return H.apply(d, w.querySelectorAll(s)), d;\n            } catch (y) {} finally {\n              k === u && b.removeAttribute("id");\n            }\n          }\n        }\n\n        return i(a.replace(Q, "$1"), b, d, e);\n      }\n\n      function ga() {\n        var a = [];\n\n        function b(c, e) {\n          return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e;\n        }\n\n        return b;\n      }\n\n      function ha(a) {\n        return a[u] = !0, a;\n      }\n\n      function ia(a) {\n        var b = n.createElement("div");\n\n        try {\n          return !!a(b);\n        } catch (c) {\n          return !1;\n        } finally {\n          b.parentNode && b.parentNode.removeChild(b), b = null;\n        }\n      }\n\n      function ja(a, b) {\n        var c = a.split("|"),\n            e = c.length;\n\n        while (e--) {\n          d.attrHandle[c[e]] = b;\n        }\n      }\n\n      function ka(a, b) {\n        var c = b && a,\n            d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || C) - (~a.sourceIndex || C);\n        if (d) return d;\n        if (c) while (c = c.nextSibling) {\n          if (c === b) return -1;\n        }\n        return a ? 1 : -1;\n      }\n\n      function la(a) {\n        return function (b) {\n          var c = b.nodeName.toLowerCase();\n          return "input" === c && b.type === a;\n        };\n      }\n\n      function ma(a) {\n        return function (b) {\n          var c = b.nodeName.toLowerCase();\n          return ("input" === c || "button" === c) && b.type === a;\n        };\n      }\n\n      function na(a) {\n        return ha(function (b) {\n          return b = +b, ha(function (c, d) {\n            var e,\n                f = a([], c.length, b),\n                g = f.length;\n\n            while (g--) {\n              c[e = f[g]] && (c[e] = !(d[e] = c[e]));\n            }\n          });\n        });\n      }\n\n      function oa(a) {\n        return a && "undefined" != typeof a.getElementsByTagName && a;\n      }\n\n      c = fa.support = {}, f = fa.isXML = function (a) {\n        var b = a && (a.ownerDocument || a).documentElement;\n        return b ? "HTML" !== b.nodeName : !1;\n      }, m = fa.setDocument = function (a) {\n        var b,\n            e,\n            g = a ? a.ownerDocument || a : v;\n        return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = n.documentElement, p = !f(n), (e = n.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", da, !1) : e.attachEvent && e.attachEvent("onunload", da)), c.attributes = ia(function (a) {\n          return a.className = "i", !a.getAttribute("className");\n        }), c.getElementsByTagName = ia(function (a) {\n          return a.appendChild(n.createComment("")), !a.getElementsByTagName("*").length;\n        }), c.getElementsByClassName = Z.test(n.getElementsByClassName), c.getById = ia(function (a) {\n          return o.appendChild(a).id = u, !n.getElementsByName || !n.getElementsByName(u).length;\n        }), c.getById ? (d.find.ID = function (a, b) {\n          if ("undefined" != typeof b.getElementById && p) {\n            var c = b.getElementById(a);\n            return c ? [c] : [];\n          }\n        }, d.filter.ID = function (a) {\n          var b = a.replace(ba, ca);\n          return function (a) {\n            return a.getAttribute("id") === b;\n          };\n        }) : (delete d.find.ID, d.filter.ID = function (a) {\n          var b = a.replace(ba, ca);\n          return function (a) {\n            var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");\n            return c && c.value === b;\n          };\n        }), d.find.TAG = c.getElementsByTagName ? function (a, b) {\n          return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0;\n        } : function (a, b) {\n          var c,\n              d = [],\n              e = 0,\n              f = b.getElementsByTagName(a);\n\n          if ("*" === a) {\n            while (c = f[e++]) {\n              1 === c.nodeType && d.push(c);\n            }\n\n            return d;\n          }\n\n          return f;\n        }, d.find.CLASS = c.getElementsByClassName && function (a, b) {\n          return "undefined" != typeof b.getElementsByClassName && p ? b.getElementsByClassName(a) : void 0;\n        }, r = [], q = [], (c.qsa = Z.test(n.querySelectorAll)) && (ia(function (a) {\n          o.appendChild(a).innerHTML = "<a id=\'" + u + "\'></a><select id=\'" + u + "-\\r\\\\\' msallowcapture=\'\'><option selected=\'\'></option></select>", a.querySelectorAll("[msallowcapture^=\'\']").length && q.push("[*^$]=" + L + "*(?:\'\'|\\"\\")"), a.querySelectorAll("[selected]").length || q.push("\\\\[" + L + "*(?:value|" + K + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]");\n        }), ia(function (a) {\n          var b = n.createElement("input");\n          b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + L + "*[*^$|!~]?="), a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:");\n        })), (c.matchesSelector = Z.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ia(function (a) {\n          c.disconnectedMatch = s.call(a, "div"), s.call(a, "[s!=\'\']:x"), r.push("!=", O);\n        }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = Z.test(o.compareDocumentPosition), t = b || Z.test(o.contains) ? function (a, b) {\n          var c = 9 === a.nodeType ? a.documentElement : a,\n              d = b && b.parentNode;\n          return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));\n        } : function (a, b) {\n          if (b) while (b = b.parentNode) {\n            if (b === a) return !0;\n          }\n          return !1;\n        }, B = b ? function (a, b) {\n          if (a === b) return l = !0, 0;\n          var d = !a.compareDocumentPosition - !b.compareDocumentPosition;\n          return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === n || a.ownerDocument === v && t(v, a) ? -1 : b === n || b.ownerDocument === v && t(v, b) ? 1 : k ? J(k, a) - J(k, b) : 0 : 4 & d ? -1 : 1);\n        } : function (a, b) {\n          if (a === b) return l = !0, 0;\n          var c,\n              d = 0,\n              e = a.parentNode,\n              f = b.parentNode,\n              g = [a],\n              h = [b];\n          if (!e || !f) return a === n ? -1 : b === n ? 1 : e ? -1 : f ? 1 : k ? J(k, a) - J(k, b) : 0;\n          if (e === f) return ka(a, b);\n          c = a;\n\n          while (c = c.parentNode) {\n            g.unshift(c);\n          }\n\n          c = b;\n\n          while (c = c.parentNode) {\n            h.unshift(c);\n          }\n\n          while (g[d] === h[d]) {\n            d++;\n          }\n\n          return d ? ka(g[d], h[d]) : g[d] === v ? -1 : h[d] === v ? 1 : 0;\n        }, n) : n;\n      }, fa.matches = function (a, b) {\n        return fa(a, null, null, b);\n      }, fa.matchesSelector = function (a, b) {\n        if ((a.ownerDocument || a) !== n && m(a), b = b.replace(T, "=\'$1\']"), c.matchesSelector && p && !A[b + " "] && (!r || !r.test(b)) && (!q || !q.test(b))) try {\n          var d = s.call(a, b);\n          if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d;\n        } catch (e) {}\n        return fa(b, n, null, [a]).length > 0;\n      }, fa.contains = function (a, b) {\n        return (a.ownerDocument || a) !== n && m(a), t(a, b);\n      }, fa.attr = function (a, b) {\n        (a.ownerDocument || a) !== n && m(a);\n        var e = d.attrHandle[b.toLowerCase()],\n            f = e && D.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;\n        return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;\n      }, fa.error = function (a) {\n        throw new Error("Syntax error, unrecognized expression: " + a);\n      }, fa.uniqueSort = function (a) {\n        var b,\n            d = [],\n            e = 0,\n            f = 0;\n\n        if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {\n          while (b = a[f++]) {\n            b === a[f] && (e = d.push(f));\n          }\n\n          while (e--) {\n            a.splice(d[e], 1);\n          }\n        }\n\n        return k = null, a;\n      }, e = fa.getText = function (a) {\n        var b,\n            c = "",\n            d = 0,\n            f = a.nodeType;\n\n        if (f) {\n          if (1 === f || 9 === f || 11 === f) {\n            if ("string" == typeof a.textContent) return a.textContent;\n\n            for (a = a.firstChild; a; a = a.nextSibling) {\n              c += e(a);\n            }\n          } else if (3 === f || 4 === f) return a.nodeValue;\n        } else while (b = a[d++]) {\n          c += e(b);\n        }\n\n        return c;\n      }, d = fa.selectors = {\n        cacheLength: 50,\n        createPseudo: ha,\n        match: W,\n        attrHandle: {},\n        find: {},\n        relative: {\n          ">": {\n            dir: "parentNode",\n            first: !0\n          },\n          " ": {\n            dir: "parentNode"\n          },\n          "+": {\n            dir: "previousSibling",\n            first: !0\n          },\n          "~": {\n            dir: "previousSibling"\n          }\n        },\n        preFilter: {\n          ATTR: function ATTR(a) {\n            return a[1] = a[1].replace(ba, ca), a[3] = (a[3] || a[4] || a[5] || "").replace(ba, ca), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);\n          },\n          CHILD: function CHILD(a) {\n            return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || fa.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && fa.error(a[0]), a;\n          },\n          PSEUDO: function PSEUDO(a) {\n            var b,\n                c = !a[6] && a[2];\n            return W.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && U.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3));\n          }\n        },\n        filter: {\n          TAG: function TAG(a) {\n            var b = a.replace(ba, ca).toLowerCase();\n            return "*" === a ? function () {\n              return !0;\n            } : function (a) {\n              return a.nodeName && a.nodeName.toLowerCase() === b;\n            };\n          },\n          CLASS: function CLASS(a) {\n            var b = y[a + " "];\n            return b || (b = new RegExp("(^|" + L + ")" + a + "(" + L + "|$)")) && y(a, function (a) {\n              return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "");\n            });\n          },\n          ATTR: function ATTR(a, b, c) {\n            return function (d) {\n              var e = fa.attr(d, a);\n              return null == e ? "!=" === b : b ? (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(P, " ") + " ").indexOf(c) > -1 : "|=" === b ? e === c || e.slice(0, c.length + 1) === c + "-" : !1) : !0;\n            };\n          },\n          CHILD: function CHILD(a, b, c, d, e) {\n            var f = "nth" !== a.slice(0, 3),\n                g = "last" !== a.slice(-4),\n                h = "of-type" === b;\n            return 1 === d && 0 === e ? function (a) {\n              return !!a.parentNode;\n            } : function (b, c, i) {\n              var j,\n                  k,\n                  l,\n                  m,\n                  n,\n                  o,\n                  p = f !== g ? "nextSibling" : "previousSibling",\n                  q = b.parentNode,\n                  r = h && b.nodeName.toLowerCase(),\n                  s = !i && !h,\n                  t = !1;\n\n              if (q) {\n                if (f) {\n                  while (p) {\n                    m = b;\n\n                    while (m = m[p]) {\n                      if (h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) return !1;\n                    }\n\n                    o = p = "only" === a && !o && "nextSibling";\n                  }\n\n                  return !0;\n                }\n\n                if (o = [g ? q.firstChild : q.lastChild], g && s) {\n                  m = q, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n && j[2], m = n && q.childNodes[n];\n\n                  while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) {\n                    if (1 === m.nodeType && ++t && m === b) {\n                      k[a] = [w, n, t];\n                      break;\n                    }\n                  }\n                } else if (s && (m = b, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n), t === !1) while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) {\n                  if ((h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) && ++t && (s && (l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), k[a] = [w, t]), m === b)) break;\n                }\n\n                return t -= e, t === d || t % d === 0 && t / d >= 0;\n              }\n            };\n          },\n          PSEUDO: function PSEUDO(a, b) {\n            var c,\n                e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || fa.error("unsupported pseudo: " + a);\n            return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ha(function (a, c) {\n              var d,\n                  f = e(a, b),\n                  g = f.length;\n\n              while (g--) {\n                d = J(a, f[g]), a[d] = !(c[d] = f[g]);\n              }\n            }) : function (a) {\n              return e(a, 0, c);\n            }) : e;\n          }\n        },\n        pseudos: {\n          not: ha(function (a) {\n            var b = [],\n                c = [],\n                d = h(a.replace(Q, "$1"));\n            return d[u] ? ha(function (a, b, c, e) {\n              var f,\n                  g = d(a, null, e, []),\n                  h = a.length;\n\n              while (h--) {\n                (f = g[h]) && (a[h] = !(b[h] = f));\n              }\n            }) : function (a, e, f) {\n              return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop();\n            };\n          }),\n          has: ha(function (a) {\n            return function (b) {\n              return fa(a, b).length > 0;\n            };\n          }),\n          contains: ha(function (a) {\n            return a = a.replace(ba, ca), function (b) {\n              return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;\n            };\n          }),\n          lang: ha(function (a) {\n            return V.test(a || "") || fa.error("unsupported lang: " + a), a = a.replace(ba, ca).toLowerCase(), function (b) {\n              var c;\n\n              do {\n                if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-");\n              } while ((b = b.parentNode) && 1 === b.nodeType);\n\n              return !1;\n            };\n          }),\n          target: function target(b) {\n            var c = a.location && a.location.hash;\n            return c && c.slice(1) === b.id;\n          },\n          root: function root(a) {\n            return a === o;\n          },\n          focus: function focus(a) {\n            return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);\n          },\n          enabled: function enabled(a) {\n            return a.disabled === !1;\n          },\n          disabled: function disabled(a) {\n            return a.disabled === !0;\n          },\n          checked: function checked(a) {\n            var b = a.nodeName.toLowerCase();\n            return "input" === b && !!a.checked || "option" === b && !!a.selected;\n          },\n          selected: function selected(a) {\n            return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;\n          },\n          empty: function empty(a) {\n            for (a = a.firstChild; a; a = a.nextSibling) {\n              if (a.nodeType < 6) return !1;\n            }\n\n            return !0;\n          },\n          parent: function parent(a) {\n            return !d.pseudos.empty(a);\n          },\n          header: function header(a) {\n            return Y.test(a.nodeName);\n          },\n          input: function input(a) {\n            return X.test(a.nodeName);\n          },\n          button: function button(a) {\n            var b = a.nodeName.toLowerCase();\n            return "input" === b && "button" === a.type || "button" === b;\n          },\n          text: function text(a) {\n            var b;\n            return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());\n          },\n          first: na(function () {\n            return [0];\n          }),\n          last: na(function (a, b) {\n            return [b - 1];\n          }),\n          eq: na(function (a, b, c) {\n            return [0 > c ? c + b : c];\n          }),\n          even: na(function (a, b) {\n            for (var c = 0; b > c; c += 2) {\n              a.push(c);\n            }\n\n            return a;\n          }),\n          odd: na(function (a, b) {\n            for (var c = 1; b > c; c += 2) {\n              a.push(c);\n            }\n\n            return a;\n          }),\n          lt: na(function (a, b, c) {\n            for (var d = 0 > c ? c + b : c; --d >= 0;) {\n              a.push(d);\n            }\n\n            return a;\n          }),\n          gt: na(function (a, b, c) {\n            for (var d = 0 > c ? c + b : c; ++d < b;) {\n              a.push(d);\n            }\n\n            return a;\n          })\n        }\n      }, d.pseudos.nth = d.pseudos.eq;\n\n      for (b in {\n        radio: !0,\n        checkbox: !0,\n        file: !0,\n        password: !0,\n        image: !0\n      }) {\n        d.pseudos[b] = la(b);\n      }\n\n      for (b in {\n        submit: !0,\n        reset: !0\n      }) {\n        d.pseudos[b] = ma(b);\n      }\n\n      function pa() {}\n\n      pa.prototype = d.filters = d.pseudos, d.setFilters = new pa(), g = fa.tokenize = function (a, b) {\n        var c,\n            e,\n            f,\n            g,\n            h,\n            i,\n            j,\n            k = z[a + " "];\n        if (k) return b ? 0 : k.slice(0);\n        h = a, i = [], j = d.preFilter;\n\n        while (h) {\n          c && !(e = R.exec(h)) || (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = S.exec(h)) && (c = e.shift(), f.push({\n            value: c,\n            type: e[0].replace(Q, " ")\n          }), h = h.slice(c.length));\n\n          for (g in d.filter) {\n            !(e = W[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({\n              value: c,\n              type: g,\n              matches: e\n            }), h = h.slice(c.length));\n          }\n\n          if (!c) break;\n        }\n\n        return b ? h.length : h ? fa.error(a) : z(a, i).slice(0);\n      };\n\n      function qa(a) {\n        for (var b = 0, c = a.length, d = ""; c > b; b++) {\n          d += a[b].value;\n        }\n\n        return d;\n      }\n\n      function ra(a, b, c) {\n        var d = b.dir,\n            e = c && "parentNode" === d,\n            f = x++;\n        return b.first ? function (b, c, f) {\n          while (b = b[d]) {\n            if (1 === b.nodeType || e) return a(b, c, f);\n          }\n        } : function (b, c, g) {\n          var h,\n              i,\n              j,\n              k = [w, f];\n\n          if (g) {\n            while (b = b[d]) {\n              if ((1 === b.nodeType || e) && a(b, c, g)) return !0;\n            }\n          } else while (b = b[d]) {\n            if (1 === b.nodeType || e) {\n              if (j = b[u] || (b[u] = {}), i = j[b.uniqueID] || (j[b.uniqueID] = {}), (h = i[d]) && h[0] === w && h[1] === f) return k[2] = h[2];\n              if (i[d] = k, k[2] = a(b, c, g)) return !0;\n            }\n          }\n        };\n      }\n\n      function sa(a) {\n        return a.length > 1 ? function (b, c, d) {\n          var e = a.length;\n\n          while (e--) {\n            if (!a[e](b, c, d)) return !1;\n          }\n\n          return !0;\n        } : a[0];\n      }\n\n      function ta(a, b, c) {\n        for (var d = 0, e = b.length; e > d; d++) {\n          fa(a, b[d], c);\n        }\n\n        return c;\n      }\n\n      function ua(a, b, c, d, e) {\n        for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++) {\n          (f = a[h]) && (c && !c(f, d, e) || (g.push(f), j && b.push(h)));\n        }\n\n        return g;\n      }\n\n      function va(a, b, c, d, e, f) {\n        return d && !d[u] && (d = va(d)), e && !e[u] && (e = va(e, f)), ha(function (f, g, h, i) {\n          var j,\n              k,\n              l,\n              m = [],\n              n = [],\n              o = g.length,\n              p = f || ta(b || "*", h.nodeType ? [h] : h, []),\n              q = !a || !f && b ? p : ua(p, m, a, h, i),\n              r = c ? e || (f ? a : o || d) ? [] : g : q;\n\n          if (c && c(q, r, h, i), d) {\n            j = ua(r, n), d(j, [], h, i), k = j.length;\n\n            while (k--) {\n              (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));\n            }\n          }\n\n          if (f) {\n            if (e || a) {\n              if (e) {\n                j = [], k = r.length;\n\n                while (k--) {\n                  (l = r[k]) && j.push(q[k] = l);\n                }\n\n                e(null, r = [], j, i);\n              }\n\n              k = r.length;\n\n              while (k--) {\n                (l = r[k]) && (j = e ? J(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));\n              }\n            }\n          } else r = ua(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : H.apply(g, r);\n        });\n      }\n\n      function wa(a) {\n        for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = ra(function (a) {\n          return a === b;\n        }, h, !0), l = ra(function (a) {\n          return J(b, a) > -1;\n        }, h, !0), m = [function (a, c, d) {\n          var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));\n          return b = null, e;\n        }]; f > i; i++) {\n          if (c = d.relative[a[i].type]) m = [ra(sa(m), c)];else {\n            if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {\n              for (e = ++i; f > e; e++) {\n                if (d.relative[a[e].type]) break;\n              }\n\n              return va(i > 1 && sa(m), i > 1 && qa(a.slice(0, i - 1).concat({\n                value: " " === a[i - 2].type ? "*" : ""\n              })).replace(Q, "$1"), c, e > i && wa(a.slice(i, e)), f > e && wa(a = a.slice(e)), f > e && qa(a));\n            }\n\n            m.push(c);\n          }\n        }\n\n        return sa(m);\n      }\n\n      function xa(a, b) {\n        var c = b.length > 0,\n            e = a.length > 0,\n            f = function f(_f, g, h, i, k) {\n          var l,\n              o,\n              q,\n              r = 0,\n              s = "0",\n              t = _f && [],\n              u = [],\n              v = j,\n              x = _f || e && d.find.TAG("*", k),\n              y = w += null == v ? 1 : Math.random() || .1,\n              z = x.length;\n\n          for (k && (j = g === n || g || k); s !== z && null != (l = x[s]); s++) {\n            if (e && l) {\n              o = 0, g || l.ownerDocument === n || (m(l), h = !p);\n\n              while (q = a[o++]) {\n                if (q(l, g || n, h)) {\n                  i.push(l);\n                  break;\n                }\n              }\n\n              k && (w = y);\n            }\n\n            c && ((l = !q && l) && r--, _f && t.push(l));\n          }\n\n          if (r += s, c && s !== r) {\n            o = 0;\n\n            while (q = b[o++]) {\n              q(t, u, g, h);\n            }\n\n            if (_f) {\n              if (r > 0) while (s--) {\n                t[s] || u[s] || (u[s] = F.call(i));\n              }\n              u = ua(u);\n            }\n\n            H.apply(i, u), k && !_f && u.length > 0 && r + b.length > 1 && fa.uniqueSort(i);\n          }\n\n          return k && (w = y, j = v), t;\n        };\n\n        return c ? ha(f) : f;\n      }\n\n      return h = fa.compile = function (a, b) {\n        var c,\n            d = [],\n            e = [],\n            f = A[a + " "];\n\n        if (!f) {\n          b || (b = g(a)), c = b.length;\n\n          while (c--) {\n            f = wa(b[c]), f[u] ? d.push(f) : e.push(f);\n          }\n\n          f = A(a, xa(e, d)), f.selector = a;\n        }\n\n        return f;\n      }, i = fa.select = function (a, b, e, f) {\n        var i,\n            j,\n            k,\n            l,\n            m,\n            n = "function" == typeof a && a,\n            o = !f && g(a = n.selector || a);\n\n        if (e = e || [], 1 === o.length) {\n          if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) {\n            if (b = (d.find.ID(k.matches[0].replace(ba, ca), b) || [])[0], !b) return e;\n            n && (b = b.parentNode), a = a.slice(j.shift().value.length);\n          }\n\n          i = W.needsContext.test(a) ? 0 : j.length;\n\n          while (i--) {\n            if (k = j[i], d.relative[l = k.type]) break;\n\n            if ((m = d.find[l]) && (f = m(k.matches[0].replace(ba, ca), _.test(j[0].type) && oa(b.parentNode) || b))) {\n              if (j.splice(i, 1), a = f.length && qa(j), !a) return H.apply(e, f), e;\n              break;\n            }\n          }\n        }\n\n        return (n || h(a, o))(f, b, !p, e, !b || _.test(a) && oa(b.parentNode) || b), e;\n      }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ia(function (a) {\n        return 1 & a.compareDocumentPosition(n.createElement("div"));\n      }), ia(function (a) {\n        return a.innerHTML = "<a href=\'#\'></a>", "#" === a.firstChild.getAttribute("href");\n      }) || ja("type|href|height|width", function (a, b, c) {\n        return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);\n      }), c.attributes && ia(function (a) {\n        return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");\n      }) || ja("value", function (a, b, c) {\n        return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue;\n      }), ia(function (a) {\n        return null == a.getAttribute("disabled");\n      }) || ja(K, function (a, b, c) {\n        var d;\n        return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;\n      }), fa;\n    }(a);\n\n    n.find = t, n.expr = t.selectors, n.expr[":"] = n.expr.pseudos, n.uniqueSort = n.unique = t.uniqueSort, n.text = t.getText, n.isXMLDoc = t.isXML, n.contains = t.contains;\n\n    var u = function u(a, b, c) {\n      var d = [],\n          e = void 0 !== c;\n\n      while ((a = a[b]) && 9 !== a.nodeType) {\n        if (1 === a.nodeType) {\n          if (e && n(a).is(c)) break;\n          d.push(a);\n        }\n      }\n\n      return d;\n    },\n        v = function v(a, b) {\n      for (var c = []; a; a = a.nextSibling) {\n        1 === a.nodeType && a !== b && c.push(a);\n      }\n\n      return c;\n    },\n        w = n.expr.match.needsContext,\n        x = /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/,\n        y = /^.[^:#\\[\\.,]*$/;\n\n    function z(a, b, c) {\n      if (n.isFunction(b)) return n.grep(a, function (a, d) {\n        return !!b.call(a, d, a) !== c;\n      });\n      if (b.nodeType) return n.grep(a, function (a) {\n        return a === b !== c;\n      });\n\n      if ("string" == typeof b) {\n        if (y.test(b)) return n.filter(b, a, c);\n        b = n.filter(b, a);\n      }\n\n      return n.grep(a, function (a) {\n        return h.call(b, a) > -1 !== c;\n      });\n    }\n\n    n.filter = function (a, b, c) {\n      var d = b[0];\n      return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? n.find.matchesSelector(d, a) ? [d] : [] : n.find.matches(a, n.grep(b, function (a) {\n        return 1 === a.nodeType;\n      }));\n    }, n.fn.extend({\n      find: function find(a) {\n        var b,\n            c = this.length,\n            d = [],\n            e = this;\n        if ("string" != typeof a) return this.pushStack(n(a).filter(function () {\n          for (b = 0; c > b; b++) {\n            if (n.contains(e[b], this)) return !0;\n          }\n        }));\n\n        for (b = 0; c > b; b++) {\n          n.find(a, e[b], d);\n        }\n\n        return d = this.pushStack(c > 1 ? n.unique(d) : d), d.selector = this.selector ? this.selector + " " + a : a, d;\n      },\n      filter: function filter(a) {\n        return this.pushStack(z(this, a || [], !1));\n      },\n      not: function not(a) {\n        return this.pushStack(z(this, a || [], !0));\n      },\n      is: function is(a) {\n        return !!z(this, "string" == typeof a && w.test(a) ? n(a) : a || [], !1).length;\n      }\n    });\n\n    var A,\n        B = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n        C = n.fn.init = function (a, b, c) {\n      var e, f;\n      if (!a) return this;\n\n      if (c = c || A, "string" == typeof a) {\n        if (e = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : B.exec(a), !e || !e[1] && b) return !b || b.jquery ? (b || c).find(a) : this.constructor(b).find(a);\n\n        if (e[1]) {\n          if (b = b instanceof n ? b[0] : b, n.merge(this, n.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : d, !0)), x.test(e[1]) && n.isPlainObject(b)) for (e in b) {\n            n.isFunction(this[e]) ? this[e](b[e]) : this.attr(e, b[e]);\n          }\n          return this;\n        }\n\n        return f = d.getElementById(e[2]), f && f.parentNode && (this.length = 1, this[0] = f), this.context = d, this.selector = a, this;\n      }\n\n      return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : n.isFunction(a) ? void 0 !== c.ready ? c.ready(a) : a(n) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), n.makeArray(a, this));\n    };\n\n    C.prototype = n.fn, A = n(d);\n    var D = /^(?:parents|prev(?:Until|All))/,\n        E = {\n      children: !0,\n      contents: !0,\n      next: !0,\n      prev: !0\n    };\n    n.fn.extend({\n      has: function has(a) {\n        var b = n(a, this),\n            c = b.length;\n        return this.filter(function () {\n          for (var a = 0; c > a; a++) {\n            if (n.contains(this, b[a])) return !0;\n          }\n        });\n      },\n      closest: function closest(a, b) {\n        for (var c, d = 0, e = this.length, f = [], g = w.test(a) || "string" != typeof a ? n(a, b || this.context) : 0; e > d; d++) {\n          for (c = this[d]; c && c !== b; c = c.parentNode) {\n            if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && n.find.matchesSelector(c, a))) {\n              f.push(c);\n              break;\n            }\n          }\n        }\n\n        return this.pushStack(f.length > 1 ? n.uniqueSort(f) : f);\n      },\n      index: function index(a) {\n        return a ? "string" == typeof a ? h.call(n(a), this[0]) : h.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      },\n      add: function add(a, b) {\n        return this.pushStack(n.uniqueSort(n.merge(this.get(), n(a, b))));\n      },\n      addBack: function addBack(a) {\n        return this.add(null == a ? this.prevObject : this.prevObject.filter(a));\n      }\n    });\n\n    function F(a, b) {\n      while ((a = a[b]) && 1 !== a.nodeType) {\n        ;\n      }\n\n      return a;\n    }\n\n    n.each({\n      parent: function parent(a) {\n        var b = a.parentNode;\n        return b && 11 !== b.nodeType ? b : null;\n      },\n      parents: function parents(a) {\n        return u(a, "parentNode");\n      },\n      parentsUntil: function parentsUntil(a, b, c) {\n        return u(a, "parentNode", c);\n      },\n      next: function next(a) {\n        return F(a, "nextSibling");\n      },\n      prev: function prev(a) {\n        return F(a, "previousSibling");\n      },\n      nextAll: function nextAll(a) {\n        return u(a, "nextSibling");\n      },\n      prevAll: function prevAll(a) {\n        return u(a, "previousSibling");\n      },\n      nextUntil: function nextUntil(a, b, c) {\n        return u(a, "nextSibling", c);\n      },\n      prevUntil: function prevUntil(a, b, c) {\n        return u(a, "previousSibling", c);\n      },\n      siblings: function siblings(a) {\n        return v((a.parentNode || {}).firstChild, a);\n      },\n      children: function children(a) {\n        return v(a.firstChild);\n      },\n      contents: function contents(a) {\n        return a.contentDocument || n.merge([], a.childNodes);\n      }\n    }, function (a, b) {\n      n.fn[a] = function (c, d) {\n        var e = n.map(this, b, c);\n        return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = n.filter(d, e)), this.length > 1 && (E[a] || n.uniqueSort(e), D.test(a) && e.reverse()), this.pushStack(e);\n      };\n    });\n    var G = /\\S+/g;\n\n    function H(a) {\n      var b = {};\n      return n.each(a.match(G) || [], function (a, c) {\n        b[c] = !0;\n      }), b;\n    }\n\n    n.Callbacks = function (a) {\n      a = "string" == typeof a ? H(a) : n.extend({}, a);\n\n      var b,\n          c,\n          d,\n          e,\n          f = [],\n          g = [],\n          h = -1,\n          i = function i() {\n        for (e = a.once, d = b = !0; g.length; h = -1) {\n          c = g.shift();\n\n          while (++h < f.length) {\n            f[h].apply(c[0], c[1]) === !1 && a.stopOnFalse && (h = f.length, c = !1);\n          }\n        }\n\n        a.memory || (c = !1), b = !1, e && (f = c ? [] : "");\n      },\n          j = {\n        add: function add() {\n          return f && (c && !b && (h = f.length - 1, g.push(c)), function d(b) {\n            n.each(b, function (b, c) {\n              n.isFunction(c) ? a.unique && j.has(c) || f.push(c) : c && c.length && "string" !== n.type(c) && d(c);\n            });\n          }(arguments), c && !b && i()), this;\n        },\n        remove: function remove() {\n          return n.each(arguments, function (a, b) {\n            var c;\n\n            while ((c = n.inArray(b, f, c)) > -1) {\n              f.splice(c, 1), h >= c && h--;\n            }\n          }), this;\n        },\n        has: function has(a) {\n          return a ? n.inArray(a, f) > -1 : f.length > 0;\n        },\n        empty: function empty() {\n          return f && (f = []), this;\n        },\n        disable: function disable() {\n          return e = g = [], f = c = "", this;\n        },\n        disabled: function disabled() {\n          return !f;\n        },\n        lock: function lock() {\n          return e = g = [], c || (f = c = ""), this;\n        },\n        locked: function locked() {\n          return !!e;\n        },\n        fireWith: function fireWith(a, c) {\n          return e || (c = c || [], c = [a, c.slice ? c.slice() : c], g.push(c), b || i()), this;\n        },\n        fire: function fire() {\n          return j.fireWith(this, arguments), this;\n        },\n        fired: function fired() {\n          return !!d;\n        }\n      };\n\n      return j;\n    }, n.extend({\n      Deferred: function Deferred(a) {\n        var b = [["resolve", "done", n.Callbacks("once memory"), "resolved"], ["reject", "fail", n.Callbacks("once memory"), "rejected"], ["notify", "progress", n.Callbacks("memory")]],\n            c = "pending",\n            d = {\n          state: function state() {\n            return c;\n          },\n          always: function always() {\n            return e.done(arguments).fail(arguments), this;\n          },\n          then: function then() {\n            var a = arguments;\n            return n.Deferred(function (c) {\n              n.each(b, function (b, f) {\n                var g = n.isFunction(a[b]) && a[b];\n                e[f[1]](function () {\n                  var a = g && g.apply(this, arguments);\n                  a && n.isFunction(a.promise) ? a.promise().progress(c.notify).done(c.resolve).fail(c.reject) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments);\n                });\n              }), a = null;\n            }).promise();\n          },\n          promise: function promise(a) {\n            return null != a ? n.extend(a, d) : d;\n          }\n        },\n            e = {};\n        return d.pipe = d.then, n.each(b, function (a, f) {\n          var g = f[2],\n              h = f[3];\n          d[f[1]] = g.add, h && g.add(function () {\n            c = h;\n          }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function () {\n            return e[f[0] + "With"](this === e ? d : this, arguments), this;\n          }, e[f[0] + "With"] = g.fireWith;\n        }), d.promise(e), a && a.call(e, e), e;\n      },\n      when: function when(a) {\n        var b = 0,\n            c = e.call(arguments),\n            d = c.length,\n            f = 1 !== d || a && n.isFunction(a.promise) ? d : 0,\n            g = 1 === f ? a : n.Deferred(),\n            h = function h(a, b, c) {\n          return function (d) {\n            b[a] = this, c[a] = arguments.length > 1 ? e.call(arguments) : d, c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c);\n          };\n        },\n            i,\n            j,\n            k;\n\n        if (d > 1) for (i = new Array(d), j = new Array(d), k = new Array(d); d > b; b++) {\n          c[b] && n.isFunction(c[b].promise) ? c[b].promise().progress(h(b, j, i)).done(h(b, k, c)).fail(g.reject) : --f;\n        }\n        return f || g.resolveWith(k, c), g.promise();\n      }\n    });\n    var I;\n    n.fn.ready = function (a) {\n      return n.ready.promise().done(a), this;\n    }, n.extend({\n      isReady: !1,\n      readyWait: 1,\n      holdReady: function holdReady(a) {\n        a ? n.readyWait++ : n.ready(!0);\n      },\n      ready: function ready(a) {\n        (a === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0, a !== !0 && --n.readyWait > 0 || (I.resolveWith(d, [n]), n.fn.triggerHandler && (n(d).triggerHandler("ready"), n(d).off("ready"))));\n      }\n    });\n\n    function J() {\n      d.removeEventListener("DOMContentLoaded", J), a.removeEventListener("load", J), n.ready();\n    }\n\n    n.ready.promise = function (b) {\n      return I || (I = n.Deferred(), "complete" === d.readyState || "loading" !== d.readyState && !d.documentElement.doScroll ? a.setTimeout(n.ready) : (d.addEventListener("DOMContentLoaded", J), a.addEventListener("load", J))), I.promise(b);\n    }, n.ready.promise();\n\n    var K = function K(a, b, c, d, e, f, g) {\n      var h = 0,\n          i = a.length,\n          j = null == c;\n\n      if ("object" === n.type(c)) {\n        e = !0;\n\n        for (h in c) {\n          K(a, b, h, c[h], !0, f, g);\n        }\n      } else if (void 0 !== d && (e = !0, n.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function b(a, _b, c) {\n        return j.call(n(a), c);\n      })), b)) for (; i > h; h++) {\n        b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));\n      }\n\n      return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;\n    },\n        L = function L(a) {\n      return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;\n    };\n\n    function M() {\n      this.expando = n.expando + M.uid++;\n    }\n\n    M.uid = 1, M.prototype = {\n      register: function register(a, b) {\n        var c = b || {};\n        return a.nodeType ? a[this.expando] = c : Object.defineProperty(a, this.expando, {\n          value: c,\n          writable: !0,\n          configurable: !0\n        }), a[this.expando];\n      },\n      cache: function cache(a) {\n        if (!L(a)) return {};\n        var b = a[this.expando];\n        return b || (b = {}, L(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, {\n          value: b,\n          configurable: !0\n        }))), b;\n      },\n      set: function set(a, b, c) {\n        var d,\n            e = this.cache(a);\n        if ("string" == typeof b) e[b] = c;else for (d in b) {\n          e[d] = b[d];\n        }\n        return e;\n      },\n      get: function get(a, b) {\n        return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][b];\n      },\n      access: function access(a, b, c) {\n        var d;\n        return void 0 === b || b && "string" == typeof b && void 0 === c ? (d = this.get(a, b), void 0 !== d ? d : this.get(a, n.camelCase(b))) : (this.set(a, b, c), void 0 !== c ? c : b);\n      },\n      remove: function remove(a, b) {\n        var c,\n            d,\n            e,\n            f = a[this.expando];\n\n        if (void 0 !== f) {\n          if (void 0 === b) this.register(a);else {\n            n.isArray(b) ? d = b.concat(b.map(n.camelCase)) : (e = n.camelCase(b), b in f ? d = [b, e] : (d = e, d = d in f ? [d] : d.match(G) || [])), c = d.length;\n\n            while (c--) {\n              delete f[d[c]];\n            }\n          }\n          (void 0 === b || n.isEmptyObject(f)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando]);\n        }\n      },\n      hasData: function hasData(a) {\n        var b = a[this.expando];\n        return void 0 !== b && !n.isEmptyObject(b);\n      }\n    };\n    var N = new M(),\n        O = new M(),\n        P = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n        Q = /[A-Z]/g;\n\n    function R(a, b, c) {\n      var d;\n      if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(Q, "-$&").toLowerCase(), c = a.getAttribute(d), "string" == typeof c) {\n        try {\n          c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : P.test(c) ? n.parseJSON(c) : c;\n        } catch (e) {}\n\n        O.set(a, b, c);\n      } else c = void 0;\n      return c;\n    }\n\n    n.extend({\n      hasData: function hasData(a) {\n        return O.hasData(a) || N.hasData(a);\n      },\n      data: function data(a, b, c) {\n        return O.access(a, b, c);\n      },\n      removeData: function removeData(a, b) {\n        O.remove(a, b);\n      },\n      _data: function _data(a, b, c) {\n        return N.access(a, b, c);\n      },\n      _removeData: function _removeData(a, b) {\n        N.remove(a, b);\n      }\n    }), n.fn.extend({\n      data: function data(a, b) {\n        var c,\n            d,\n            e,\n            f = this[0],\n            g = f && f.attributes;\n\n        if (void 0 === a) {\n          if (this.length && (e = O.get(f), 1 === f.nodeType && !N.get(f, "hasDataAttrs"))) {\n            c = g.length;\n\n            while (c--) {\n              g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = n.camelCase(d.slice(5)), R(f, d, e[d])));\n            }\n\n            N.set(f, "hasDataAttrs", !0);\n          }\n\n          return e;\n        }\n\n        return "object" == _typeof(a) ? this.each(function () {\n          O.set(this, a);\n        }) : K(this, function (b) {\n          var c, d;\n\n          if (f && void 0 === b) {\n            if (c = O.get(f, a) || O.get(f, a.replace(Q, "-$&").toLowerCase()), void 0 !== c) return c;\n            if (d = n.camelCase(a), c = O.get(f, d), void 0 !== c) return c;\n            if (c = R(f, d, void 0), void 0 !== c) return c;\n          } else d = n.camelCase(a), this.each(function () {\n            var c = O.get(this, d);\n            O.set(this, d, b), a.indexOf("-") > -1 && void 0 !== c && O.set(this, a, b);\n          });\n        }, null, b, arguments.length > 1, null, !0);\n      },\n      removeData: function removeData(a) {\n        return this.each(function () {\n          O.remove(this, a);\n        });\n      }\n    }), n.extend({\n      queue: function queue(a, b, c) {\n        var d;\n        return a ? (b = (b || "fx") + "queue", d = N.get(a, b), c && (!d || n.isArray(c) ? d = N.access(a, b, n.makeArray(c)) : d.push(c)), d || []) : void 0;\n      },\n      dequeue: function dequeue(a, b) {\n        b = b || "fx";\n\n        var c = n.queue(a, b),\n            d = c.length,\n            e = c.shift(),\n            f = n._queueHooks(a, b),\n            g = function g() {\n          n.dequeue(a, b);\n        };\n\n        "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();\n      },\n      _queueHooks: function _queueHooks(a, b) {\n        var c = b + "queueHooks";\n        return N.get(a, c) || N.access(a, c, {\n          empty: n.Callbacks("once memory").add(function () {\n            N.remove(a, [b + "queue", c]);\n          })\n        });\n      }\n    }), n.fn.extend({\n      queue: function queue(a, b) {\n        var c = 2;\n        return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? n.queue(this[0], a) : void 0 === b ? this : this.each(function () {\n          var c = n.queue(this, a, b);\n          n._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && n.dequeue(this, a);\n        });\n      },\n      dequeue: function dequeue(a) {\n        return this.each(function () {\n          n.dequeue(this, a);\n        });\n      },\n      clearQueue: function clearQueue(a) {\n        return this.queue(a || "fx", []);\n      },\n      promise: function promise(a, b) {\n        var c,\n            d = 1,\n            e = n.Deferred(),\n            f = this,\n            g = this.length,\n            h = function h() {\n          --d || e.resolveWith(f, [f]);\n        };\n\n        "string" != typeof a && (b = a, a = void 0), a = a || "fx";\n\n        while (g--) {\n          c = N.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));\n        }\n\n        return h(), e.promise(b);\n      }\n    });\n\n    var S = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\n        T = new RegExp("^(?:([+-])=|)(" + S + ")([a-z%]*)$", "i"),\n        U = ["Top", "Right", "Bottom", "Left"],\n        V = function V(a, b) {\n      return a = b || a, "none" === n.css(a, "display") || !n.contains(a.ownerDocument, a);\n    };\n\n    function W(a, b, c, d) {\n      var e,\n          f = 1,\n          g = 20,\n          h = d ? function () {\n        return d.cur();\n      } : function () {\n        return n.css(a, b, "");\n      },\n          i = h(),\n          j = c && c[3] || (n.cssNumber[b] ? "" : "px"),\n          k = (n.cssNumber[b] || "px" !== j && +i) && T.exec(n.css(a, b));\n\n      if (k && k[3] !== j) {\n        j = j || k[3], c = c || [], k = +i || 1;\n\n        do {\n          f = f || ".5", k /= f, n.style(a, b, k + j);\n        } while (f !== (f = h() / i) && 1 !== f && --g);\n      }\n\n      return c && (k = +k || +i || 0, e = c[1] ? k + (c[1] + 1) * c[2] : +c[2], d && (d.unit = j, d.start = k, d.end = e)), e;\n    }\n\n    var X = /^(?:checkbox|radio)$/i,\n        Y = /<([\\w:-]+)/,\n        Z = /^$|\\/(?:java|ecma)script/i,\n        $ = {\n      option: [1, "<select multiple=\'multiple\'>", "</select>"],\n      thead: [1, "<table>", "</table>"],\n      col: [2, "<table><colgroup>", "</colgroup></table>"],\n      tr: [2, "<table><tbody>", "</tbody></table>"],\n      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],\n      _default: [0, "", ""]\n    };\n    $.optgroup = $.option, $.tbody = $.tfoot = $.colgroup = $.caption = $.thead, $.th = $.td;\n\n    function _(a, b) {\n      var c = "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName(b || "*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll(b || "*") : [];\n      return void 0 === b || b && n.nodeName(a, b) ? n.merge([a], c) : c;\n    }\n\n    function aa(a, b) {\n      for (var c = 0, d = a.length; d > c; c++) {\n        N.set(a[c], "globalEval", !b || N.get(b[c], "globalEval"));\n      }\n    }\n\n    var ba = /<|&#?\\w+;/;\n\n    function ca(a, b, c, d, e) {\n      for (var f, g, h, i, j, k, l = b.createDocumentFragment(), m = [], o = 0, p = a.length; p > o; o++) {\n        if (f = a[o], f || 0 === f) if ("object" === n.type(f)) n.merge(m, f.nodeType ? [f] : f);else if (ba.test(f)) {\n          g = g || l.appendChild(b.createElement("div")), h = (Y.exec(f) || ["", ""])[1].toLowerCase(), i = $[h] || $._default, g.innerHTML = i[1] + n.htmlPrefilter(f) + i[2], k = i[0];\n\n          while (k--) {\n            g = g.lastChild;\n          }\n\n          n.merge(m, g.childNodes), g = l.firstChild, g.textContent = "";\n        } else m.push(b.createTextNode(f));\n      }\n\n      l.textContent = "", o = 0;\n\n      while (f = m[o++]) {\n        if (d && n.inArray(f, d) > -1) e && e.push(f);else if (j = n.contains(f.ownerDocument, f), g = _(l.appendChild(f), "script"), j && aa(g), c) {\n          k = 0;\n\n          while (f = g[k++]) {\n            Z.test(f.type || "") && c.push(f);\n          }\n        }\n      }\n\n      return l;\n    }\n\n    !function () {\n      var a = d.createDocumentFragment(),\n          b = a.appendChild(d.createElement("div")),\n          c = d.createElement("input");\n      c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), l.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", l.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue;\n    }();\n    var da = /^key/,\n        ea = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n        fa = /^([^.]*)(?:\\.(.+)|)/;\n\n    function ga() {\n      return !0;\n    }\n\n    function ha() {\n      return !1;\n    }\n\n    function ia() {\n      try {\n        return d.activeElement;\n      } catch (a) {}\n    }\n\n    function ja(a, b, c, d, e, f) {\n      var g, h;\n\n      if ("object" == _typeof(b)) {\n        "string" != typeof c && (d = d || c, c = void 0);\n\n        for (h in b) {\n          ja(a, h, c, d, b[h], f);\n        }\n\n        return a;\n      }\n\n      if (null == d && null == e ? (e = c, d = c = void 0) : null == e && ("string" == typeof c ? (e = d, d = void 0) : (e = d, d = c, c = void 0)), e === !1) e = ha;else if (!e) return a;\n      return 1 === f && (g = e, e = function e(a) {\n        return n().off(a), g.apply(this, arguments);\n      }, e.guid = g.guid || (g.guid = n.guid++)), a.each(function () {\n        n.event.add(this, b, e, d, c);\n      });\n    }\n\n    n.event = {\n      global: {},\n      add: function add(a, b, c, d, e) {\n        var f,\n            g,\n            h,\n            i,\n            j,\n            k,\n            l,\n            m,\n            o,\n            p,\n            q,\n            r = N.get(a);\n\n        if (r) {\n          c.handler && (f = c, c = f.handler, e = f.selector), c.guid || (c.guid = n.guid++), (i = r.events) || (i = r.events = {}), (g = r.handle) || (g = r.handle = function (b) {\n            return "undefined" != typeof n && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0;\n          }), b = (b || "").match(G) || [""], j = b.length;\n\n          while (j--) {\n            h = fa.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o && (l = n.event.special[o] || {}, o = (e ? l.delegateType : l.bindType) || o, l = n.event.special[o] || {}, k = n.extend({\n              type: o,\n              origType: q,\n              data: d,\n              handler: c,\n              guid: c.guid,\n              selector: e,\n              needsContext: e && n.expr.match.needsContext.test(e),\n              namespace: p.join(".")\n            }, f), (m = i[o]) || (m = i[o] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, p, g) !== !1 || a.addEventListener && a.addEventListener(o, g)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), n.event.global[o] = !0);\n          }\n        }\n      },\n      remove: function remove(a, b, c, d, e) {\n        var f,\n            g,\n            h,\n            i,\n            j,\n            k,\n            l,\n            m,\n            o,\n            p,\n            q,\n            r = N.hasData(a) && N.get(a);\n\n        if (r && (i = r.events)) {\n          b = (b || "").match(G) || [""], j = b.length;\n\n          while (j--) {\n            if (h = fa.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o) {\n              l = n.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, m = i[o] || [], h = h[2] && new RegExp("(^|\\\\.)" + p.join("\\\\.(?:.*\\\\.|)") + "(\\\\.|$)"), g = f = m.length;\n\n              while (f--) {\n                k = m[f], !e && q !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));\n              }\n\n              g && !m.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || n.removeEvent(a, o, r.handle), delete i[o]);\n            } else for (o in i) {\n              n.event.remove(a, o + b[j], c, d, !0);\n            }\n          }\n\n          n.isEmptyObject(i) && N.remove(a, "handle events");\n        }\n      },\n      dispatch: function dispatch(a) {\n        a = n.event.fix(a);\n        var b,\n            c,\n            d,\n            f,\n            g,\n            h = [],\n            i = e.call(arguments),\n            j = (N.get(this, "events") || {})[a.type] || [],\n            k = n.event.special[a.type] || {};\n\n        if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) {\n          h = n.event.handlers.call(this, a, j), b = 0;\n\n          while ((f = h[b++]) && !a.isPropagationStopped()) {\n            a.currentTarget = f.elem, c = 0;\n\n            while ((g = f.handlers[c++]) && !a.isImmediatePropagationStopped()) {\n              a.rnamespace && !a.rnamespace.test(g.namespace) || (a.handleObj = g, a.data = g.data, d = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== d && (a.result = d) === !1 && (a.preventDefault(), a.stopPropagation()));\n            }\n          }\n\n          return k.postDispatch && k.postDispatch.call(this, a), a.result;\n        }\n      },\n      handlers: function handlers(a, b) {\n        var c,\n            d,\n            e,\n            f,\n            g = [],\n            h = b.delegateCount,\n            i = a.target;\n        if (h && i.nodeType && ("click" !== a.type || isNaN(a.button) || a.button < 1)) for (; i !== this; i = i.parentNode || this) {\n          if (1 === i.nodeType && (i.disabled !== !0 || "click" !== a.type)) {\n            for (d = [], c = 0; h > c; c++) {\n              f = b[c], e = f.selector + " ", void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) > -1 : n.find(e, this, null, [i]).length), d[e] && d.push(f);\n            }\n\n            d.length && g.push({\n              elem: i,\n              handlers: d\n            });\n          }\n        }\n        return h < b.length && g.push({\n          elem: this,\n          handlers: b.slice(h)\n        }), g;\n      },\n      props: "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),\n      fixHooks: {},\n      keyHooks: {\n        props: "char charCode key keyCode".split(" "),\n        filter: function filter(a, b) {\n          return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), a;\n        }\n      },\n      mouseHooks: {\n        props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),\n        filter: function filter(a, b) {\n          var c,\n              e,\n              f,\n              g = b.button;\n          return null == a.pageX && null != b.clientX && (c = a.target.ownerDocument || d, e = c.documentElement, f = c.body, a.pageX = b.clientX + (e && e.scrollLeft || f && f.scrollLeft || 0) - (e && e.clientLeft || f && f.clientLeft || 0), a.pageY = b.clientY + (e && e.scrollTop || f && f.scrollTop || 0) - (e && e.clientTop || f && f.clientTop || 0)), a.which || void 0 === g || (a.which = 1 & g ? 1 : 2 & g ? 3 : 4 & g ? 2 : 0), a;\n        }\n      },\n      fix: function fix(a) {\n        if (a[n.expando]) return a;\n        var b,\n            c,\n            e,\n            f = a.type,\n            g = a,\n            h = this.fixHooks[f];\n        h || (this.fixHooks[f] = h = ea.test(f) ? this.mouseHooks : da.test(f) ? this.keyHooks : {}), e = h.props ? this.props.concat(h.props) : this.props, a = new n.Event(g), b = e.length;\n\n        while (b--) {\n          c = e[b], a[c] = g[c];\n        }\n\n        return a.target || (a.target = d), 3 === a.target.nodeType && (a.target = a.target.parentNode), h.filter ? h.filter(a, g) : a;\n      },\n      special: {\n        load: {\n          noBubble: !0\n        },\n        focus: {\n          trigger: function trigger() {\n            return this !== ia() && this.focus ? (this.focus(), !1) : void 0;\n          },\n          delegateType: "focusin"\n        },\n        blur: {\n          trigger: function trigger() {\n            return this === ia() && this.blur ? (this.blur(), !1) : void 0;\n          },\n          delegateType: "focusout"\n        },\n        click: {\n          trigger: function trigger() {\n            return "checkbox" === this.type && this.click && n.nodeName(this, "input") ? (this.click(), !1) : void 0;\n          },\n          _default: function _default(a) {\n            return n.nodeName(a.target, "a");\n          }\n        },\n        beforeunload: {\n          postDispatch: function postDispatch(a) {\n            void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);\n          }\n        }\n      }\n    }, n.removeEvent = function (a, b, c) {\n      a.removeEventListener && a.removeEventListener(b, c);\n    }, n.Event = function (a, b) {\n      return this instanceof n.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? ga : ha) : this.type = a, b && n.extend(this, b), this.timeStamp = a && a.timeStamp || n.now(), void (this[n.expando] = !0)) : new n.Event(a, b);\n    }, n.Event.prototype = {\n      constructor: n.Event,\n      isDefaultPrevented: ha,\n      isPropagationStopped: ha,\n      isImmediatePropagationStopped: ha,\n      isSimulated: !1,\n      preventDefault: function preventDefault() {\n        var a = this.originalEvent;\n        this.isDefaultPrevented = ga, a && !this.isSimulated && a.preventDefault();\n      },\n      stopPropagation: function stopPropagation() {\n        var a = this.originalEvent;\n        this.isPropagationStopped = ga, a && !this.isSimulated && a.stopPropagation();\n      },\n      stopImmediatePropagation: function stopImmediatePropagation() {\n        var a = this.originalEvent;\n        this.isImmediatePropagationStopped = ga, a && !this.isSimulated && a.stopImmediatePropagation(), this.stopPropagation();\n      }\n    }, n.each({\n      mouseenter: "mouseover",\n      mouseleave: "mouseout",\n      pointerenter: "pointerover",\n      pointerleave: "pointerout"\n    }, function (a, b) {\n      n.event.special[a] = {\n        delegateType: b,\n        bindType: b,\n        handle: function handle(a) {\n          var c,\n              d = this,\n              e = a.relatedTarget,\n              f = a.handleObj;\n          return e && (e === d || n.contains(d, e)) || (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c;\n        }\n      };\n    }), n.fn.extend({\n      on: function on(a, b, c, d) {\n        return ja(this, a, b, c, d);\n      },\n      one: function one(a, b, c, d) {\n        return ja(this, a, b, c, d, 1);\n      },\n      off: function off(a, b, c) {\n        var d, e;\n        if (a && a.preventDefault && a.handleObj) return d = a.handleObj, n(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;\n\n        if ("object" == _typeof(a)) {\n          for (e in a) {\n            this.off(e, b, a[e]);\n          }\n\n          return this;\n        }\n\n        return b !== !1 && "function" != typeof b || (c = b, b = void 0), c === !1 && (c = ha), this.each(function () {\n          n.event.remove(this, a, c, b);\n        });\n      }\n    });\n    var ka = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n        la = /<script|<style|<link/i,\n        ma = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n        na = /^true\\/(.*)/,\n        oa = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n    function pa(a, b) {\n      return n.nodeName(a, "table") && n.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a;\n    }\n\n    function qa(a) {\n      return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a;\n    }\n\n    function ra(a) {\n      var b = na.exec(a.type);\n      return b ? a.type = b[1] : a.removeAttribute("type"), a;\n    }\n\n    function sa(a, b) {\n      var c, d, e, f, g, h, i, j;\n\n      if (1 === b.nodeType) {\n        if (N.hasData(a) && (f = N.access(a), g = N.set(b, f), j = f.events)) {\n          delete g.handle, g.events = {};\n\n          for (e in j) {\n            for (c = 0, d = j[e].length; d > c; c++) {\n              n.event.add(b, e, j[e][c]);\n            }\n          }\n        }\n\n        O.hasData(a) && (h = O.access(a), i = n.extend({}, h), O.set(b, i));\n      }\n    }\n\n    function ta(a, b) {\n      var c = b.nodeName.toLowerCase();\n      "input" === c && X.test(a.type) ? b.checked = a.checked : "input" !== c && "textarea" !== c || (b.defaultValue = a.defaultValue);\n    }\n\n    function ua(a, b, c, d) {\n      b = f.apply([], b);\n      var e,\n          g,\n          h,\n          i,\n          j,\n          k,\n          m = 0,\n          o = a.length,\n          p = o - 1,\n          q = b[0],\n          r = n.isFunction(q);\n      if (r || o > 1 && "string" == typeof q && !l.checkClone && ma.test(q)) return a.each(function (e) {\n        var f = a.eq(e);\n        r && (b[0] = q.call(this, e, f.html())), ua(f, b, c, d);\n      });\n\n      if (o && (e = ca(b, a[0].ownerDocument, !1, a, d), g = e.firstChild, 1 === e.childNodes.length && (e = g), g || d)) {\n        for (h = n.map(_(e, "script"), qa), i = h.length; o > m; m++) {\n          j = e, m !== p && (j = n.clone(j, !0, !0), i && n.merge(h, _(j, "script"))), c.call(a[m], j, m);\n        }\n\n        if (i) for (k = h[h.length - 1].ownerDocument, n.map(h, ra), m = 0; i > m; m++) {\n          j = h[m], Z.test(j.type || "") && !N.access(j, "globalEval") && n.contains(k, j) && (j.src ? n._evalUrl && n._evalUrl(j.src) : n.globalEval(j.textContent.replace(oa, "")));\n        }\n      }\n\n      return a;\n    }\n\n    function va(a, b, c) {\n      for (var d, e = b ? n.filter(b, a) : a, f = 0; null != (d = e[f]); f++) {\n        c || 1 !== d.nodeType || n.cleanData(_(d)), d.parentNode && (c && n.contains(d.ownerDocument, d) && aa(_(d, "script")), d.parentNode.removeChild(d));\n      }\n\n      return a;\n    }\n\n    n.extend({\n      htmlPrefilter: function htmlPrefilter(a) {\n        return a.replace(ka, "<$1></$2>");\n      },\n      clone: function clone(a, b, c) {\n        var d,\n            e,\n            f,\n            g,\n            h = a.cloneNode(!0),\n            i = n.contains(a.ownerDocument, a);\n        if (!(l.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || n.isXMLDoc(a))) for (g = _(h), f = _(a), d = 0, e = f.length; e > d; d++) {\n          ta(f[d], g[d]);\n        }\n        if (b) if (c) for (f = f || _(a), g = g || _(h), d = 0, e = f.length; e > d; d++) {\n          sa(f[d], g[d]);\n        } else sa(a, h);\n        return g = _(h, "script"), g.length > 0 && aa(g, !i && _(a, "script")), h;\n      },\n      cleanData: function cleanData(a) {\n        for (var b, c, d, e = n.event.special, f = 0; void 0 !== (c = a[f]); f++) {\n          if (L(c)) {\n            if (b = c[N.expando]) {\n              if (b.events) for (d in b.events) {\n                e[d] ? n.event.remove(c, d) : n.removeEvent(c, d, b.handle);\n              }\n              c[N.expando] = void 0;\n            }\n\n            c[O.expando] && (c[O.expando] = void 0);\n          }\n        }\n      }\n    }), n.fn.extend({\n      domManip: ua,\n      detach: function detach(a) {\n        return va(this, a, !0);\n      },\n      remove: function remove(a) {\n        return va(this, a);\n      },\n      text: function text(a) {\n        return K(this, function (a) {\n          return void 0 === a ? n.text(this) : this.empty().each(function () {\n            1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = a);\n          });\n        }, null, a, arguments.length);\n      },\n      append: function append() {\n        return ua(this, arguments, function (a) {\n          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {\n            var b = pa(this, a);\n            b.appendChild(a);\n          }\n        });\n      },\n      prepend: function prepend() {\n        return ua(this, arguments, function (a) {\n          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {\n            var b = pa(this, a);\n            b.insertBefore(a, b.firstChild);\n          }\n        });\n      },\n      before: function before() {\n        return ua(this, arguments, function (a) {\n          this.parentNode && this.parentNode.insertBefore(a, this);\n        });\n      },\n      after: function after() {\n        return ua(this, arguments, function (a) {\n          this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);\n        });\n      },\n      empty: function empty() {\n        for (var a, b = 0; null != (a = this[b]); b++) {\n          1 === a.nodeType && (n.cleanData(_(a, !1)), a.textContent = "");\n        }\n\n        return this;\n      },\n      clone: function clone(a, b) {\n        return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function () {\n          return n.clone(this, a, b);\n        });\n      },\n      html: function html(a) {\n        return K(this, function (a) {\n          var b = this[0] || {},\n              c = 0,\n              d = this.length;\n          if (void 0 === a && 1 === b.nodeType) return b.innerHTML;\n\n          if ("string" == typeof a && !la.test(a) && !$[(Y.exec(a) || ["", ""])[1].toLowerCase()]) {\n            a = n.htmlPrefilter(a);\n\n            try {\n              for (; d > c; c++) {\n                b = this[c] || {}, 1 === b.nodeType && (n.cleanData(_(b, !1)), b.innerHTML = a);\n              }\n\n              b = 0;\n            } catch (e) {}\n          }\n\n          b && this.empty().append(a);\n        }, null, a, arguments.length);\n      },\n      replaceWith: function replaceWith() {\n        var a = [];\n        return ua(this, arguments, function (b) {\n          var c = this.parentNode;\n          n.inArray(this, a) < 0 && (n.cleanData(_(this)), c && c.replaceChild(b, this));\n        }, a);\n      }\n    }), n.each({\n      appendTo: "append",\n      prependTo: "prepend",\n      insertBefore: "before",\n      insertAfter: "after",\n      replaceAll: "replaceWith"\n    }, function (a, b) {\n      n.fn[a] = function (a) {\n        for (var c, d = [], e = n(a), f = e.length - 1, h = 0; f >= h; h++) {\n          c = h === f ? this : this.clone(!0), n(e[h])[b](c), g.apply(d, c.get());\n        }\n\n        return this.pushStack(d);\n      };\n    });\n    var wa,\n        xa = {\n      HTML: "block",\n      BODY: "block"\n    };\n\n    function ya(a, b) {\n      var c = n(b.createElement(a)).appendTo(b.body),\n          d = n.css(c[0], "display");\n      return c.detach(), d;\n    }\n\n    function za(a) {\n      var b = d,\n          c = xa[a];\n      return c || (c = ya(a, b), "none" !== c && c || (wa = (wa || n("<iframe frameborder=\'0\' width=\'0\' height=\'0\'/>")).appendTo(b.documentElement), b = wa[0].contentDocument, b.write(), b.close(), c = ya(a, b), wa.detach()), xa[a] = c), c;\n    }\n\n    var Aa = /^margin/,\n        Ba = new RegExp("^(" + S + ")(?!px)[a-z%]+$", "i"),\n        Ca = function Ca(b) {\n      var c = b.ownerDocument.defaultView;\n      return c && c.opener || (c = a), c.getComputedStyle(b);\n    },\n        Da = function Da(a, b, c, d) {\n      var e,\n          f,\n          g = {};\n\n      for (f in b) {\n        g[f] = a.style[f], a.style[f] = b[f];\n      }\n\n      e = c.apply(a, d || []);\n\n      for (f in b) {\n        a.style[f] = g[f];\n      }\n\n      return e;\n    },\n        Ea = d.documentElement;\n\n    !function () {\n      var b,\n          c,\n          e,\n          f,\n          g = d.createElement("div"),\n          h = d.createElement("div");\n\n      if (h.style) {\n        var _i = function _i() {\n          h.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", h.innerHTML = "", Ea.appendChild(g);\n          var d = a.getComputedStyle(h);\n          b = "1%" !== d.top, f = "2px" === d.marginLeft, c = "4px" === d.width, h.style.marginRight = "50%", e = "4px" === d.marginRight, Ea.removeChild(g);\n        };\n\n        h.style.backgroundClip = "content-box", h.cloneNode(!0).style.backgroundClip = "", l.clearCloneStyle = "content-box" === h.style.backgroundClip, g.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", g.appendChild(h);\n        n.extend(l, {\n          pixelPosition: function pixelPosition() {\n            return _i(), b;\n          },\n          boxSizingReliable: function boxSizingReliable() {\n            return null == c && _i(), c;\n          },\n          pixelMarginRight: function pixelMarginRight() {\n            return null == c && _i(), e;\n          },\n          reliableMarginLeft: function reliableMarginLeft() {\n            return null == c && _i(), f;\n          },\n          reliableMarginRight: function reliableMarginRight() {\n            var b,\n                c = h.appendChild(d.createElement("div"));\n            return c.style.cssText = h.style.cssText = "-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", c.style.marginRight = c.style.width = "0", h.style.width = "1px", Ea.appendChild(g), b = !parseFloat(a.getComputedStyle(c).marginRight), Ea.removeChild(g), h.removeChild(c), b;\n          }\n        });\n      }\n    }();\n\n    function Fa(a, b, c) {\n      var d,\n          e,\n          f,\n          g,\n          h = a.style;\n      return c = c || Ca(a), g = c ? c.getPropertyValue(b) || c[b] : void 0, "" !== g && void 0 !== g || n.contains(a.ownerDocument, a) || (g = n.style(a, b)), c && !l.pixelMarginRight() && Ba.test(g) && Aa.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f), void 0 !== g ? g + "" : g;\n    }\n\n    function Ga(a, b) {\n      return {\n        get: function get() {\n          return a() ? void delete this.get : (this.get = b).apply(this, arguments);\n        }\n      };\n    }\n\n    var Ha = /^(none|table(?!-c[ea]).+)/,\n        Ia = {\n      position: "absolute",\n      visibility: "hidden",\n      display: "block"\n    },\n        Ja = {\n      letterSpacing: "0",\n      fontWeight: "400"\n    },\n        Ka = ["Webkit", "O", "Moz", "ms"],\n        La = d.createElement("div").style;\n\n    function Ma(a) {\n      if (a in La) return a;\n      var b = a[0].toUpperCase() + a.slice(1),\n          c = Ka.length;\n\n      while (c--) {\n        if (a = Ka[c] + b, a in La) return a;\n      }\n    }\n\n    function Na(a, b, c) {\n      var d = T.exec(b);\n      return d ? Math.max(0, d[2] - (c || 0)) + (d[3] || "px") : b;\n    }\n\n    function Oa(a, b, c, d, e) {\n      for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) {\n        "margin" === c && (g += n.css(a, c + U[f], !0, e)), d ? ("content" === c && (g -= n.css(a, "padding" + U[f], !0, e)), "margin" !== c && (g -= n.css(a, "border" + U[f] + "Width", !0, e))) : (g += n.css(a, "padding" + U[f], !0, e), "padding" !== c && (g += n.css(a, "border" + U[f] + "Width", !0, e)));\n      }\n\n      return g;\n    }\n\n    function Pa(a, b, c) {\n      var d = !0,\n          e = "width" === b ? a.offsetWidth : a.offsetHeight,\n          f = Ca(a),\n          g = "border-box" === n.css(a, "boxSizing", !1, f);\n\n      if (0 >= e || null == e) {\n        if (e = Fa(a, b, f), (0 > e || null == e) && (e = a.style[b]), Ba.test(e)) return e;\n        d = g && (l.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0;\n      }\n\n      return e + Oa(a, b, c || (g ? "border" : "content"), d, f) + "px";\n    }\n\n    function Qa(a, b) {\n      for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) {\n        d = a[g], d.style && (f[g] = N.get(d, "olddisplay"), c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && V(d) && (f[g] = N.access(d, "olddisplay", za(d.nodeName)))) : (e = V(d), "none" === c && e || N.set(d, "olddisplay", e ? c : n.css(d, "display"))));\n      }\n\n      for (g = 0; h > g; g++) {\n        d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"));\n      }\n\n      return a;\n    }\n\n    n.extend({\n      cssHooks: {\n        opacity: {\n          get: function get(a, b) {\n            if (b) {\n              var c = Fa(a, "opacity");\n              return "" === c ? "1" : c;\n            }\n          }\n        }\n      },\n      cssNumber: {\n        animationIterationCount: !0,\n        columnCount: !0,\n        fillOpacity: !0,\n        flexGrow: !0,\n        flexShrink: !0,\n        fontWeight: !0,\n        lineHeight: !0,\n        opacity: !0,\n        order: !0,\n        orphans: !0,\n        widows: !0,\n        zIndex: !0,\n        zoom: !0\n      },\n      cssProps: {\n        "float": "cssFloat"\n      },\n      style: function style(a, b, c, d) {\n        if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {\n          var e,\n              f,\n              g,\n              h = n.camelCase(b),\n              i = a.style;\n          return b = n.cssProps[h] || (n.cssProps[h] = Ma(h) || h), g = n.cssHooks[b] || n.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = _typeof(c), "string" === f && (e = T.exec(c)) && e[1] && (c = W(a, b, e), f = "number"), null != c && c === c && ("number" === f && (c += e && e[3] || (n.cssNumber[h] ? "" : "px")), l.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)), void 0);\n        }\n      },\n      css: function css(a, b, c, d) {\n        var e,\n            f,\n            g,\n            h = n.camelCase(b);\n        return b = n.cssProps[h] || (n.cssProps[h] = Ma(h) || h), g = n.cssHooks[b] || n.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = Fa(a, b, d)), "normal" === e && b in Ja && (e = Ja[b]), "" === c || c ? (f = parseFloat(e), c === !0 || isFinite(f) ? f || 0 : e) : e;\n      }\n    }), n.each(["height", "width"], function (a, b) {\n      n.cssHooks[b] = {\n        get: function get(a, c, d) {\n          return c ? Ha.test(n.css(a, "display")) && 0 === a.offsetWidth ? Da(a, Ia, function () {\n            return Pa(a, b, d);\n          }) : Pa(a, b, d) : void 0;\n        },\n        set: function set(a, c, d) {\n          var e,\n              f = d && Ca(a),\n              g = d && Oa(a, b, d, "border-box" === n.css(a, "boxSizing", !1, f), f);\n          return g && (e = T.exec(c)) && "px" !== (e[3] || "px") && (a.style[b] = c, c = n.css(a, b)), Na(a, c, g);\n        }\n      };\n    }), n.cssHooks.marginLeft = Ga(l.reliableMarginLeft, function (a, b) {\n      return b ? (parseFloat(Fa(a, "marginLeft")) || a.getBoundingClientRect().left - Da(a, {\n        marginLeft: 0\n      }, function () {\n        return a.getBoundingClientRect().left;\n      })) + "px" : void 0;\n    }), n.cssHooks.marginRight = Ga(l.reliableMarginRight, function (a, b) {\n      return b ? Da(a, {\n        display: "inline-block"\n      }, Fa, [a, "marginRight"]) : void 0;\n    }), n.each({\n      margin: "",\n      padding: "",\n      border: "Width"\n    }, function (a, b) {\n      n.cssHooks[a + b] = {\n        expand: function expand(c) {\n          for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++) {\n            e[a + U[d] + b] = f[d] || f[d - 2] || f[0];\n          }\n\n          return e;\n        }\n      }, Aa.test(a) || (n.cssHooks[a + b].set = Na);\n    }), n.fn.extend({\n      css: function css(a, b) {\n        return K(this, function (a, b, c) {\n          var d,\n              e,\n              f = {},\n              g = 0;\n\n          if (n.isArray(b)) {\n            for (d = Ca(a), e = b.length; e > g; g++) {\n              f[b[g]] = n.css(a, b[g], !1, d);\n            }\n\n            return f;\n          }\n\n          return void 0 !== c ? n.style(a, b, c) : n.css(a, b);\n        }, a, b, arguments.length > 1);\n      },\n      show: function show() {\n        return Qa(this, !0);\n      },\n      hide: function hide() {\n        return Qa(this);\n      },\n      toggle: function toggle(a) {\n        return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function () {\n          V(this) ? n(this).show() : n(this).hide();\n        });\n      }\n    });\n\n    function Ra(a, b, c, d, e) {\n      return new Ra.prototype.init(a, b, c, d, e);\n    }\n\n    n.Tween = Ra, Ra.prototype = {\n      constructor: Ra,\n      init: function init(a, b, c, d, e, f) {\n        this.elem = a, this.prop = c, this.easing = e || n.easing._default, this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (n.cssNumber[c] ? "" : "px");\n      },\n      cur: function cur() {\n        var a = Ra.propHooks[this.prop];\n        return a && a.get ? a.get(this) : Ra.propHooks._default.get(this);\n      },\n      run: function run(a) {\n        var b,\n            c = Ra.propHooks[this.prop];\n        return this.options.duration ? this.pos = b = n.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : Ra.propHooks._default.set(this), this;\n      }\n    }, Ra.prototype.init.prototype = Ra.prototype, Ra.propHooks = {\n      _default: {\n        get: function get(a) {\n          var b;\n          return 1 !== a.elem.nodeType || null != a.elem[a.prop] && null == a.elem.style[a.prop] ? a.elem[a.prop] : (b = n.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0);\n        },\n        set: function set(a) {\n          n.fx.step[a.prop] ? n.fx.step[a.prop](a) : 1 !== a.elem.nodeType || null == a.elem.style[n.cssProps[a.prop]] && !n.cssHooks[a.prop] ? a.elem[a.prop] = a.now : n.style(a.elem, a.prop, a.now + a.unit);\n        }\n      }\n    }, Ra.propHooks.scrollTop = Ra.propHooks.scrollLeft = {\n      set: function set(a) {\n        a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);\n      }\n    }, n.easing = {\n      linear: function linear(a) {\n        return a;\n      },\n      swing: function swing(a) {\n        return .5 - Math.cos(a * Math.PI) / 2;\n      },\n      _default: "swing"\n    }, n.fx = Ra.prototype.init, n.fx.step = {};\n    var Sa,\n        Ta,\n        Ua = /^(?:toggle|show|hide)$/,\n        Va = /queueHooks$/;\n\n    function Wa() {\n      return a.setTimeout(function () {\n        Sa = void 0;\n      }), Sa = n.now();\n    }\n\n    function Xa(a, b) {\n      var c,\n          d = 0,\n          e = {\n        height: a\n      };\n\n      for (b = b ? 1 : 0; 4 > d; d += 2 - b) {\n        c = U[d], e["margin" + c] = e["padding" + c] = a;\n      }\n\n      return b && (e.opacity = e.width = a), e;\n    }\n\n    function Ya(a, b, c) {\n      for (var d, e = (_a.tweeners[b] || []).concat(_a.tweeners["*"]), f = 0, g = e.length; g > f; f++) {\n        if (d = e[f].call(c, b, a)) return d;\n      }\n    }\n\n    function Za(a, b, c) {\n      var d,\n          e,\n          f,\n          g,\n          h,\n          i,\n          j,\n          k,\n          l = this,\n          m = {},\n          o = a.style,\n          p = a.nodeType && V(a),\n          q = N.get(a, "fxshow");\n      c.queue || (h = n._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, h.empty.fire = function () {\n        h.unqueued || i();\n      }), h.unqueued++, l.always(function () {\n        l.always(function () {\n          h.unqueued--, n.queue(a, "fx").length || h.empty.fire();\n        });\n      })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = n.css(a, "display"), k = "none" === j ? N.get(a, "olddisplay") || za(a.nodeName) : j, "inline" === k && "none" === n.css(a, "float") && (o.display = "inline-block")), c.overflow && (o.overflow = "hidden", l.always(function () {\n        o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2];\n      }));\n\n      for (d in b) {\n        if (e = b[d], Ua.exec(e)) {\n          if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {\n            if ("show" !== e || !q || void 0 === q[d]) continue;\n            p = !0;\n          }\n\n          m[d] = q && q[d] || n.style(a, d);\n        } else j = void 0;\n      }\n\n      if (n.isEmptyObject(m)) "inline" === ("none" === j ? za(a.nodeName) : j) && (o.display = j);else {\n        q ? "hidden" in q && (p = q.hidden) : q = N.access(a, "fxshow", {}), f && (q.hidden = !p), p ? n(a).show() : l.done(function () {\n          n(a).hide();\n        }), l.done(function () {\n          var b;\n          N.remove(a, "fxshow");\n\n          for (b in m) {\n            n.style(a, b, m[b]);\n          }\n        });\n\n        for (d in m) {\n          g = Ya(p ? q[d] : 0, d, l), d in q || (q[d] = g.start, p && (g.end = g.start, g.start = "width" === d || "height" === d ? 1 : 0));\n        }\n      }\n    }\n\n    function $a(a, b) {\n      var c, d, e, f, g;\n\n      for (c in a) {\n        if (d = n.camelCase(c), e = b[d], f = a[c], n.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = n.cssHooks[d], g && "expand" in g) {\n          f = g.expand(f), delete a[d];\n\n          for (c in f) {\n            c in a || (a[c] = f[c], b[c] = e);\n          }\n        } else b[d] = e;\n      }\n    }\n\n    function _a(a, b, c) {\n      var d,\n          e,\n          f = 0,\n          g = _a.prefilters.length,\n          h = n.Deferred().always(function () {\n        delete i.elem;\n      }),\n          i = function i() {\n        if (e) return !1;\n\n        for (var b = Sa || Wa(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) {\n          j.tweens[g].run(f);\n        }\n\n        return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(a, [j]), !1);\n      },\n          j = h.promise({\n        elem: a,\n        props: n.extend({}, b),\n        opts: n.extend(!0, {\n          specialEasing: {},\n          easing: n.easing._default\n        }, c),\n        originalProperties: b,\n        originalOptions: c,\n        startTime: Sa || Wa(),\n        duration: c.duration,\n        tweens: [],\n        createTween: function createTween(b, c) {\n          var d = n.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);\n          return j.tweens.push(d), d;\n        },\n        stop: function stop(b) {\n          var c = 0,\n              d = b ? j.tweens.length : 0;\n          if (e) return this;\n\n          for (e = !0; d > c; c++) {\n            j.tweens[c].run(1);\n          }\n\n          return b ? (h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j, b])) : h.rejectWith(a, [j, b]), this;\n        }\n      }),\n          k = j.props;\n\n      for ($a(k, j.opts.specialEasing); g > f; f++) {\n        if (d = _a.prefilters[f].call(j, a, k, j.opts)) return n.isFunction(d.stop) && (n._queueHooks(j.elem, j.opts.queue).stop = n.proxy(d.stop, d)), d;\n      }\n\n      return n.map(k, Ya, j), n.isFunction(j.opts.start) && j.opts.start.call(a, j), n.fx.timer(n.extend(i, {\n        elem: a,\n        anim: j,\n        queue: j.opts.queue\n      })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always);\n    }\n\n    n.Animation = n.extend(_a, {\n      tweeners: {\n        "*": [function (a, b) {\n          var c = this.createTween(a, b);\n          return W(c.elem, a, T.exec(b), c), c;\n        }]\n      },\n      tweener: function tweener(a, b) {\n        n.isFunction(a) ? (b = a, a = ["*"]) : a = a.match(G);\n\n        for (var c, d = 0, e = a.length; e > d; d++) {\n          c = a[d], _a.tweeners[c] = _a.tweeners[c] || [], _a.tweeners[c].unshift(b);\n        }\n      },\n      prefilters: [Za],\n      prefilter: function prefilter(a, b) {\n        b ? _a.prefilters.unshift(a) : _a.prefilters.push(a);\n      }\n    }), n.speed = function (a, b, c) {\n      var d = a && "object" == _typeof(a) ? n.extend({}, a) : {\n        complete: c || !c && b || n.isFunction(a) && a,\n        duration: a,\n        easing: c && b || b && !n.isFunction(b) && b\n      };\n      return d.duration = n.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in n.fx.speeds ? n.fx.speeds[d.duration] : n.fx.speeds._default, null != d.queue && d.queue !== !0 || (d.queue = "fx"), d.old = d.complete, d.complete = function () {\n        n.isFunction(d.old) && d.old.call(this), d.queue && n.dequeue(this, d.queue);\n      }, d;\n    }, n.fn.extend({\n      fadeTo: function fadeTo(a, b, c, d) {\n        return this.filter(V).css("opacity", 0).show().end().animate({\n          opacity: b\n        }, a, c, d);\n      },\n      animate: function animate(a, b, c, d) {\n        var e = n.isEmptyObject(a),\n            f = n.speed(b, c, d),\n            g = function g() {\n          var b = _a(this, n.extend({}, a), f);\n\n          (e || N.get(this, "finish")) && b.stop(!0);\n        };\n\n        return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);\n      },\n      stop: function stop(a, b, c) {\n        var d = function d(a) {\n          var b = a.stop;\n          delete a.stop, b(c);\n        };\n\n        return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function () {\n          var b = !0,\n              e = null != a && a + "queueHooks",\n              f = n.timers,\n              g = N.get(this);\n          if (e) g[e] && g[e].stop && d(g[e]);else for (e in g) {\n            g[e] && g[e].stop && Va.test(e) && d(g[e]);\n          }\n\n          for (e = f.length; e--;) {\n            f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));\n          }\n\n          !b && c || n.dequeue(this, a);\n        });\n      },\n      finish: function finish(a) {\n        return a !== !1 && (a = a || "fx"), this.each(function () {\n          var b,\n              c = N.get(this),\n              d = c[a + "queue"],\n              e = c[a + "queueHooks"],\n              f = n.timers,\n              g = d ? d.length : 0;\n\n          for (c.finish = !0, n.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) {\n            f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));\n          }\n\n          for (b = 0; g > b; b++) {\n            d[b] && d[b].finish && d[b].finish.call(this);\n          }\n\n          delete c.finish;\n        });\n      }\n    }), n.each(["toggle", "show", "hide"], function (a, b) {\n      var c = n.fn[b];\n\n      n.fn[b] = function (a, d, e) {\n        return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(Xa(b, !0), a, d, e);\n      };\n    }), n.each({\n      slideDown: Xa("show"),\n      slideUp: Xa("hide"),\n      slideToggle: Xa("toggle"),\n      fadeIn: {\n        opacity: "show"\n      },\n      fadeOut: {\n        opacity: "hide"\n      },\n      fadeToggle: {\n        opacity: "toggle"\n      }\n    }, function (a, b) {\n      n.fn[a] = function (a, c, d) {\n        return this.animate(b, a, c, d);\n      };\n    }), n.timers = [], n.fx.tick = function () {\n      var a,\n          b = 0,\n          c = n.timers;\n\n      for (Sa = n.now(); b < c.length; b++) {\n        a = c[b], a() || c[b] !== a || c.splice(b--, 1);\n      }\n\n      c.length || n.fx.stop(), Sa = void 0;\n    }, n.fx.timer = function (a) {\n      n.timers.push(a), a() ? n.fx.start() : n.timers.pop();\n    }, n.fx.interval = 13, n.fx.start = function () {\n      Ta || (Ta = a.setInterval(n.fx.tick, n.fx.interval));\n    }, n.fx.stop = function () {\n      a.clearInterval(Ta), Ta = null;\n    }, n.fx.speeds = {\n      slow: 600,\n      fast: 200,\n      _default: 400\n    }, n.fn.delay = function (b, c) {\n      return b = n.fx ? n.fx.speeds[b] || b : b, c = c || "fx", this.queue(c, function (c, d) {\n        var e = a.setTimeout(c, b);\n\n        d.stop = function () {\n          a.clearTimeout(e);\n        };\n      });\n    }, function () {\n      var a = d.createElement("input"),\n          b = d.createElement("select"),\n          c = b.appendChild(d.createElement("option"));\n      a.type = "checkbox", l.checkOn = "" !== a.value, l.optSelected = c.selected, b.disabled = !0, l.optDisabled = !c.disabled, a = d.createElement("input"), a.value = "t", a.type = "radio", l.radioValue = "t" === a.value;\n    }();\n    var ab,\n        bb = n.expr.attrHandle;\n    n.fn.extend({\n      attr: function attr(a, b) {\n        return K(this, n.attr, a, b, arguments.length > 1);\n      },\n      removeAttr: function removeAttr(a) {\n        return this.each(function () {\n          n.removeAttr(this, a);\n        });\n      }\n    }), n.extend({\n      attr: function attr(a, b, c) {\n        var d,\n            e,\n            f = a.nodeType;\n        if (3 !== f && 8 !== f && 2 !== f) return "undefined" == typeof a.getAttribute ? n.prop(a, b, c) : (1 === f && n.isXMLDoc(a) || (b = b.toLowerCase(), e = n.attrHooks[b] || (n.expr.match.bool.test(b) ? ab : void 0)), void 0 !== c ? null === c ? void n.removeAttr(a, b) : e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : (a.setAttribute(b, c + ""), c) : e && "get" in e && null !== (d = e.get(a, b)) ? d : (d = n.find.attr(a, b), null == d ? void 0 : d));\n      },\n      attrHooks: {\n        type: {\n          set: function set(a, b) {\n            if (!l.radioValue && "radio" === b && n.nodeName(a, "input")) {\n              var c = a.value;\n              return a.setAttribute("type", b), c && (a.value = c), b;\n            }\n          }\n        }\n      },\n      removeAttr: function removeAttr(a, b) {\n        var c,\n            d,\n            e = 0,\n            f = b && b.match(G);\n        if (f && 1 === a.nodeType) while (c = f[e++]) {\n          d = n.propFix[c] || c, n.expr.match.bool.test(c) && (a[d] = !1), a.removeAttribute(c);\n        }\n      }\n    }), ab = {\n      set: function set(a, b, c) {\n        return b === !1 ? n.removeAttr(a, c) : a.setAttribute(c, c), c;\n      }\n    }, n.each(n.expr.match.bool.source.match(/\\w+/g), function (a, b) {\n      var c = bb[b] || n.find.attr;\n\n      bb[b] = function (a, b, d) {\n        var e, f;\n        return d || (f = bb[b], bb[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, bb[b] = f), e;\n      };\n    });\n    var cb = /^(?:input|select|textarea|button)$/i,\n        db = /^(?:a|area)$/i;\n    n.fn.extend({\n      prop: function prop(a, b) {\n        return K(this, n.prop, a, b, arguments.length > 1);\n      },\n      removeProp: function removeProp(a) {\n        return this.each(function () {\n          delete this[n.propFix[a] || a];\n        });\n      }\n    }), n.extend({\n      prop: function prop(a, b, c) {\n        var d,\n            e,\n            f = a.nodeType;\n        if (3 !== f && 8 !== f && 2 !== f) return 1 === f && n.isXMLDoc(a) || (b = n.propFix[b] || b, e = n.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b];\n      },\n      propHooks: {\n        tabIndex: {\n          get: function get(a) {\n            var b = n.find.attr(a, "tabindex");\n            return b ? parseInt(b, 10) : cb.test(a.nodeName) || db.test(a.nodeName) && a.href ? 0 : -1;\n          }\n        }\n      },\n      propFix: {\n        "for": "htmlFor",\n        "class": "className"\n      }\n    }), l.optSelected || (n.propHooks.selected = {\n      get: function get(a) {\n        var b = a.parentNode;\n        return b && b.parentNode && b.parentNode.selectedIndex, null;\n      },\n      set: function set(a) {\n        var b = a.parentNode;\n        b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);\n      }\n    }), n.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {\n      n.propFix[this.toLowerCase()] = this;\n    });\n    var eb = /[\\t\\r\\n\\f]/g;\n\n    function fb(a) {\n      return a.getAttribute && a.getAttribute("class") || "";\n    }\n\n    n.fn.extend({\n      addClass: function addClass(a) {\n        var b,\n            c,\n            d,\n            e,\n            f,\n            g,\n            h,\n            i = 0;\n        if (n.isFunction(a)) return this.each(function (b) {\n          n(this).addClass(a.call(this, b, fb(this)));\n        });\n\n        if ("string" == typeof a && a) {\n          b = a.match(G) || [];\n\n          while (c = this[i++]) {\n            if (e = fb(c), d = 1 === c.nodeType && (" " + e + " ").replace(eb, " ")) {\n              g = 0;\n\n              while (f = b[g++]) {\n                d.indexOf(" " + f + " ") < 0 && (d += f + " ");\n              }\n\n              h = n.trim(d), e !== h && c.setAttribute("class", h);\n            }\n          }\n        }\n\n        return this;\n      },\n      removeClass: function removeClass(a) {\n        var b,\n            c,\n            d,\n            e,\n            f,\n            g,\n            h,\n            i = 0;\n        if (n.isFunction(a)) return this.each(function (b) {\n          n(this).removeClass(a.call(this, b, fb(this)));\n        });\n        if (!arguments.length) return this.attr("class", "");\n\n        if ("string" == typeof a && a) {\n          b = a.match(G) || [];\n\n          while (c = this[i++]) {\n            if (e = fb(c), d = 1 === c.nodeType && (" " + e + " ").replace(eb, " ")) {\n              g = 0;\n\n              while (f = b[g++]) {\n                while (d.indexOf(" " + f + " ") > -1) {\n                  d = d.replace(" " + f + " ", " ");\n                }\n              }\n\n              h = n.trim(d), e !== h && c.setAttribute("class", h);\n            }\n          }\n        }\n\n        return this;\n      },\n      toggleClass: function toggleClass(a, b) {\n        var c = _typeof(a);\n\n        return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : n.isFunction(a) ? this.each(function (c) {\n          n(this).toggleClass(a.call(this, c, fb(this), b), b);\n        }) : this.each(function () {\n          var b, d, e, f;\n\n          if ("string" === c) {\n            d = 0, e = n(this), f = a.match(G) || [];\n\n            while (b = f[d++]) {\n              e.hasClass(b) ? e.removeClass(b) : e.addClass(b);\n            }\n          } else void 0 !== a && "boolean" !== c || (b = fb(this), b && N.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || a === !1 ? "" : N.get(this, "__className__") || ""));\n        });\n      },\n      hasClass: function hasClass(a) {\n        var b,\n            c,\n            d = 0;\n        b = " " + a + " ";\n\n        while (c = this[d++]) {\n          if (1 === c.nodeType && (" " + fb(c) + " ").replace(eb, " ").indexOf(b) > -1) return !0;\n        }\n\n        return !1;\n      }\n    });\n    var gb = /\\r/g,\n        hb = /[\\x20\\t\\r\\n\\f]+/g;\n    n.fn.extend({\n      val: function val(a) {\n        var b,\n            c,\n            d,\n            e = this[0];\n        {\n          if (arguments.length) return d = n.isFunction(a), this.each(function (c) {\n            var e;\n            1 === this.nodeType && (e = d ? a.call(this, c, n(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : n.isArray(e) && (e = n.map(e, function (a) {\n              return null == a ? "" : a + "";\n            })), b = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e));\n          });\n          if (e) return b = n.valHooks[e.type] || n.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(gb, "") : null == c ? "" : c);\n        }\n      }\n    }), n.extend({\n      valHooks: {\n        option: {\n          get: function get(a) {\n            var b = n.find.attr(a, "value");\n            return null != b ? b : n.trim(n.text(a)).replace(hb, " ");\n          }\n        },\n        select: {\n          get: function get(a) {\n            for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++) {\n              if (c = d[i], (c.selected || i === e) && (l.optDisabled ? !c.disabled : null === c.getAttribute("disabled")) && (!c.parentNode.disabled || !n.nodeName(c.parentNode, "optgroup"))) {\n                if (b = n(c).val(), f) return b;\n                g.push(b);\n              }\n            }\n\n            return g;\n          },\n          set: function set(a, b) {\n            var c,\n                d,\n                e = a.options,\n                f = n.makeArray(b),\n                g = e.length;\n\n            while (g--) {\n              d = e[g], (d.selected = n.inArray(n.valHooks.option.get(d), f) > -1) && (c = !0);\n            }\n\n            return c || (a.selectedIndex = -1), f;\n          }\n        }\n      }\n    }), n.each(["radio", "checkbox"], function () {\n      n.valHooks[this] = {\n        set: function set(a, b) {\n          return n.isArray(b) ? a.checked = n.inArray(n(a).val(), b) > -1 : void 0;\n        }\n      }, l.checkOn || (n.valHooks[this].get = function (a) {\n        return null === a.getAttribute("value") ? "on" : a.value;\n      });\n    });\n    var ib = /^(?:focusinfocus|focusoutblur)$/;\n    n.extend(n.event, {\n      trigger: function trigger(b, c, e, f) {\n        var g,\n            h,\n            i,\n            j,\n            l,\n            m,\n            o,\n            p = [e || d],\n            q = k.call(b, "type") ? b.type : b,\n            r = k.call(b, "namespace") ? b.namespace.split(".") : [];\n\n        if (h = i = e = e || d, 3 !== e.nodeType && 8 !== e.nodeType && !ib.test(q + n.event.triggered) && (q.indexOf(".") > -1 && (r = q.split("."), q = r.shift(), r.sort()), l = q.indexOf(":") < 0 && "on" + q, b = b[n.expando] ? b : new n.Event(q, "object" == _typeof(b) && b), b.isTrigger = f ? 2 : 3, b.namespace = r.join("."), b.rnamespace = b.namespace ? new RegExp("(^|\\\\.)" + r.join("\\\\.(?:.*\\\\.|)") + "(\\\\.|$)") : null, b.result = void 0, b.target || (b.target = e), c = null == c ? [b] : n.makeArray(c, [b]), o = n.event.special[q] || {}, f || !o.trigger || o.trigger.apply(e, c) !== !1)) {\n          if (!f && !o.noBubble && !n.isWindow(e)) {\n            for (j = o.delegateType || q, ib.test(j + q) || (h = h.parentNode); h; h = h.parentNode) {\n              p.push(h), i = h;\n            }\n\n            i === (e.ownerDocument || d) && p.push(i.defaultView || i.parentWindow || a);\n          }\n\n          g = 0;\n\n          while ((h = p[g++]) && !b.isPropagationStopped()) {\n            b.type = g > 1 ? j : o.bindType || q, m = (N.get(h, "events") || {})[b.type] && N.get(h, "handle"), m && m.apply(h, c), m = l && h[l], m && m.apply && L(h) && (b.result = m.apply(h, c), b.result === !1 && b.preventDefault());\n          }\n\n          return b.type = q, f || b.isDefaultPrevented() || o._default && o._default.apply(p.pop(), c) !== !1 || !L(e) || l && n.isFunction(e[q]) && !n.isWindow(e) && (i = e[l], i && (e[l] = null), n.event.triggered = q, e[q](), n.event.triggered = void 0, i && (e[l] = i)), b.result;\n        }\n      },\n      simulate: function simulate(a, b, c) {\n        var d = n.extend(new n.Event(), c, {\n          type: a,\n          isSimulated: !0\n        });\n        n.event.trigger(d, null, b);\n      }\n    }), n.fn.extend({\n      trigger: function trigger(a, b) {\n        return this.each(function () {\n          n.event.trigger(a, b, this);\n        });\n      },\n      triggerHandler: function triggerHandler(a, b) {\n        var c = this[0];\n        return c ? n.event.trigger(a, b, c, !0) : void 0;\n      }\n    }), n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (a, b) {\n      n.fn[b] = function (a, c) {\n        return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);\n      };\n    }), n.fn.extend({\n      hover: function hover(a, b) {\n        return this.mouseenter(a).mouseleave(b || a);\n      }\n    }), l.focusin = "onfocusin" in a, l.focusin || n.each({\n      focus: "focusin",\n      blur: "focusout"\n    }, function (a, b) {\n      var c = function c(a) {\n        n.event.simulate(b, a.target, n.event.fix(a));\n      };\n\n      n.event.special[b] = {\n        setup: function setup() {\n          var d = this.ownerDocument || this,\n              e = N.access(d, b);\n          e || d.addEventListener(a, c, !0), N.access(d, b, (e || 0) + 1);\n        },\n        teardown: function teardown() {\n          var d = this.ownerDocument || this,\n              e = N.access(d, b) - 1;\n          e ? N.access(d, b, e) : (d.removeEventListener(a, c, !0), N.remove(d, b));\n        }\n      };\n    });\n    var jb = a.location,\n        kb = n.now(),\n        lb = /\\?/;\n    n.parseJSON = function (a) {\n      return JSON.parse(a + "");\n    }, n.parseXML = function (b) {\n      var c;\n      if (!b || "string" != typeof b) return null;\n\n      try {\n        c = new a.DOMParser().parseFromString(b, "text/xml");\n      } catch (d) {\n        c = void 0;\n      }\n\n      return c && !c.getElementsByTagName("parsererror").length || n.error("Invalid XML: " + b), c;\n    };\n    var mb = /#.*$/,\n        nb = /([?&])_=[^&]*/,\n        ob = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm,\n        pb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n        qb = /^(?:GET|HEAD)$/,\n        rb = /^\\/\\//,\n        sb = {},\n        tb = {},\n        ub = "*/".concat("*"),\n        vb = d.createElement("a");\n    vb.href = jb.href;\n\n    function wb(a) {\n      return function (b, c) {\n        "string" != typeof b && (c = b, b = "*");\n        var d,\n            e = 0,\n            f = b.toLowerCase().match(G) || [];\n        if (n.isFunction(c)) while (d = f[e++]) {\n          "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);\n        }\n      };\n    }\n\n    function xb(a, b, c, d) {\n      var e = {},\n          f = a === tb;\n\n      function g(h) {\n        var i;\n        return e[h] = !0, n.each(a[h] || [], function (a, h) {\n          var j = h(b, c, d);\n          return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1);\n        }), i;\n      }\n\n      return g(b.dataTypes[0]) || !e["*"] && g("*");\n    }\n\n    function yb(a, b) {\n      var c,\n          d,\n          e = n.ajaxSettings.flatOptions || {};\n\n      for (c in b) {\n        void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);\n      }\n\n      return d && n.extend(!0, a, d), a;\n    }\n\n    function zb(a, b, c) {\n      var d,\n          e,\n          f,\n          g,\n          h = a.contents,\n          i = a.dataTypes;\n\n      while ("*" === i[0]) {\n        i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));\n      }\n\n      if (d) for (e in h) {\n        if (h[e] && h[e].test(d)) {\n          i.unshift(e);\n          break;\n        }\n      }\n      if (i[0] in c) f = i[0];else {\n        for (e in c) {\n          if (!i[0] || a.converters[e + " " + i[0]]) {\n            f = e;\n            break;\n          }\n\n          g || (g = e);\n        }\n\n        f = f || g;\n      }\n      return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0;\n    }\n\n    function Ab(a, b, c, d) {\n      var e,\n          f,\n          g,\n          h,\n          i,\n          j = {},\n          k = a.dataTypes.slice();\n      if (k[1]) for (g in a.converters) {\n        j[g.toLowerCase()] = a.converters[g];\n      }\n      f = k.shift();\n\n      while (f) {\n        if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if ("*" === f) f = i;else if ("*" !== i && i !== f) {\n          if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) {\n            if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {\n              g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));\n              break;\n            }\n          }\n          if (g !== !0) if (g && a["throws"]) b = g(b);else try {\n            b = g(b);\n          } catch (l) {\n            return {\n              state: "parsererror",\n              error: g ? l : "No conversion from " + i + " to " + f\n            };\n          }\n        }\n      }\n\n      return {\n        state: "success",\n        data: b\n      };\n    }\n\n    n.extend({\n      active: 0,\n      lastModified: {},\n      etag: {},\n      ajaxSettings: {\n        url: jb.href,\n        type: "GET",\n        isLocal: pb.test(jb.protocol),\n        global: !0,\n        processData: !0,\n        async: !0,\n        contentType: "application/x-www-form-urlencoded; charset=UTF-8",\n        accepts: {\n          "*": ub,\n          text: "text/plain",\n          html: "text/html",\n          xml: "application/xml, text/xml",\n          json: "application/json, text/javascript"\n        },\n        contents: {\n          xml: /\\bxml\\b/,\n          html: /\\bhtml/,\n          json: /\\bjson\\b/\n        },\n        responseFields: {\n          xml: "responseXML",\n          text: "responseText",\n          json: "responseJSON"\n        },\n        converters: {\n          "* text": String,\n          "text html": !0,\n          "text json": n.parseJSON,\n          "text xml": n.parseXML\n        },\n        flatOptions: {\n          url: !0,\n          context: !0\n        }\n      },\n      ajaxSetup: function ajaxSetup(a, b) {\n        return b ? yb(yb(a, n.ajaxSettings), b) : yb(n.ajaxSettings, a);\n      },\n      ajaxPrefilter: wb(sb),\n      ajaxTransport: wb(tb),\n      ajax: function ajax(b, c) {\n        "object" == _typeof(b) && (c = b, b = void 0), c = c || {};\n        var e,\n            f,\n            g,\n            h,\n            i,\n            j,\n            k,\n            l,\n            m = n.ajaxSetup({}, c),\n            o = m.context || m,\n            p = m.context && (o.nodeType || o.jquery) ? n(o) : n.event,\n            q = n.Deferred(),\n            r = n.Callbacks("once memory"),\n            s = m.statusCode || {},\n            t = {},\n            u = {},\n            v = 0,\n            w = "canceled",\n            x = {\n          readyState: 0,\n          getResponseHeader: function getResponseHeader(a) {\n            var b;\n\n            if (2 === v) {\n              if (!h) {\n                h = {};\n\n                while (b = ob.exec(g)) {\n                  h[b[1].toLowerCase()] = b[2];\n                }\n              }\n\n              b = h[a.toLowerCase()];\n            }\n\n            return null == b ? null : b;\n          },\n          getAllResponseHeaders: function getAllResponseHeaders() {\n            return 2 === v ? g : null;\n          },\n          setRequestHeader: function setRequestHeader(a, b) {\n            var c = a.toLowerCase();\n            return v || (a = u[c] = u[c] || a, t[a] = b), this;\n          },\n          overrideMimeType: function overrideMimeType(a) {\n            return v || (m.mimeType = a), this;\n          },\n          statusCode: function statusCode(a) {\n            var b;\n            if (a) if (2 > v) for (b in a) {\n              s[b] = [s[b], a[b]];\n            } else x.always(a[x.status]);\n            return this;\n          },\n          abort: function abort(a) {\n            var b = a || w;\n            return e && e.abort(b), z(0, b), this;\n          }\n        };\n\n        if (q.promise(x).complete = r.add, x.success = x.done, x.error = x.fail, m.url = ((b || m.url || jb.href) + "").replace(mb, "").replace(rb, jb.protocol + "//"), m.type = c.method || c.type || m.method || m.type, m.dataTypes = n.trim(m.dataType || "*").toLowerCase().match(G) || [""], null == m.crossDomain) {\n          j = d.createElement("a");\n\n          try {\n            j.href = m.url, j.href = j.href, m.crossDomain = vb.protocol + "//" + vb.host != j.protocol + "//" + j.host;\n          } catch (y) {\n            m.crossDomain = !0;\n          }\n        }\n\n        if (m.data && m.processData && "string" != typeof m.data && (m.data = n.param(m.data, m.traditional)), xb(sb, m, c, x), 2 === v) return x;\n        k = n.event && m.global, k && 0 === n.active++ && n.event.trigger("ajaxStart"), m.type = m.type.toUpperCase(), m.hasContent = !qb.test(m.type), f = m.url, m.hasContent || (m.data && (f = m.url += (lb.test(f) ? "&" : "?") + m.data, delete m.data), m.cache === !1 && (m.url = nb.test(f) ? f.replace(nb, "$1_=" + kb++) : f + (lb.test(f) ? "&" : "?") + "_=" + kb++)), m.ifModified && (n.lastModified[f] && x.setRequestHeader("If-Modified-Since", n.lastModified[f]), n.etag[f] && x.setRequestHeader("If-None-Match", n.etag[f])), (m.data && m.hasContent && m.contentType !== !1 || c.contentType) && x.setRequestHeader("Content-Type", m.contentType), x.setRequestHeader("Accept", m.dataTypes[0] && m.accepts[m.dataTypes[0]] ? m.accepts[m.dataTypes[0]] + ("*" !== m.dataTypes[0] ? ", " + ub + "; q=0.01" : "") : m.accepts["*"]);\n\n        for (l in m.headers) {\n          x.setRequestHeader(l, m.headers[l]);\n        }\n\n        if (m.beforeSend && (m.beforeSend.call(o, x, m) === !1 || 2 === v)) return x.abort();\n        w = "abort";\n\n        for (l in {\n          success: 1,\n          error: 1,\n          complete: 1\n        }) {\n          x[l](m[l]);\n        }\n\n        if (e = xb(tb, m, c, x)) {\n          if (x.readyState = 1, k && p.trigger("ajaxSend", [x, m]), 2 === v) return x;\n          m.async && m.timeout > 0 && (i = a.setTimeout(function () {\n            x.abort("timeout");\n          }, m.timeout));\n\n          try {\n            v = 1, e.send(t, z);\n          } catch (y) {\n            if (!(2 > v)) throw y;\n            z(-1, y);\n          }\n        } else z(-1, "No Transport");\n\n        function z(b, c, d, h) {\n          var j,\n              l,\n              t,\n              u,\n              w,\n              y = c;\n          2 !== v && (v = 2, i && a.clearTimeout(i), e = void 0, g = h || "", x.readyState = b > 0 ? 4 : 0, j = b >= 200 && 300 > b || 304 === b, d && (u = zb(m, x, d)), u = Ab(m, u, x, j), j ? (m.ifModified && (w = x.getResponseHeader("Last-Modified"), w && (n.lastModified[f] = w), w = x.getResponseHeader("etag"), w && (n.etag[f] = w)), 204 === b || "HEAD" === m.type ? y = "nocontent" : 304 === b ? y = "notmodified" : (y = u.state, l = u.data, t = u.error, j = !t)) : (t = y, !b && y || (y = "error", 0 > b && (b = 0))), x.status = b, x.statusText = (c || y) + "", j ? q.resolveWith(o, [l, y, x]) : q.rejectWith(o, [x, y, t]), x.statusCode(s), s = void 0, k && p.trigger(j ? "ajaxSuccess" : "ajaxError", [x, m, j ? l : t]), r.fireWith(o, [x, y]), k && (p.trigger("ajaxComplete", [x, m]), --n.active || n.event.trigger("ajaxStop")));\n        }\n\n        return x;\n      },\n      getJSON: function getJSON(a, b, c) {\n        return n.get(a, b, c, "json");\n      },\n      getScript: function getScript(a, b) {\n        return n.get(a, void 0, b, "script");\n      }\n    }), n.each(["get", "post"], function (a, b) {\n      n[b] = function (a, c, d, e) {\n        return n.isFunction(c) && (e = e || d, d = c, c = void 0), n.ajax(n.extend({\n          url: a,\n          type: b,\n          dataType: e,\n          data: c,\n          success: d\n        }, n.isPlainObject(a) && a));\n      };\n    }), n._evalUrl = function (a) {\n      return n.ajax({\n        url: a,\n        type: "GET",\n        dataType: "script",\n        async: !1,\n        global: !1,\n        "throws": !0\n      });\n    }, n.fn.extend({\n      wrapAll: function wrapAll(a) {\n        var b;\n        return n.isFunction(a) ? this.each(function (b) {\n          n(this).wrapAll(a.call(this, b));\n        }) : (this[0] && (b = n(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function () {\n          var a = this;\n\n          while (a.firstElementChild) {\n            a = a.firstElementChild;\n          }\n\n          return a;\n        }).append(this)), this);\n      },\n      wrapInner: function wrapInner(a) {\n        return n.isFunction(a) ? this.each(function (b) {\n          n(this).wrapInner(a.call(this, b));\n        }) : this.each(function () {\n          var b = n(this),\n              c = b.contents();\n          c.length ? c.wrapAll(a) : b.append(a);\n        });\n      },\n      wrap: function wrap(a) {\n        var b = n.isFunction(a);\n        return this.each(function (c) {\n          n(this).wrapAll(b ? a.call(this, c) : a);\n        });\n      },\n      unwrap: function unwrap() {\n        return this.parent().each(function () {\n          n.nodeName(this, "body") || n(this).replaceWith(this.childNodes);\n        }).end();\n      }\n    }), n.expr.filters.hidden = function (a) {\n      return !n.expr.filters.visible(a);\n    }, n.expr.filters.visible = function (a) {\n      return a.offsetWidth > 0 || a.offsetHeight > 0 || a.getClientRects().length > 0;\n    };\n    var Bb = /%20/g,\n        Cb = /\\[\\]$/,\n        Db = /\\r?\\n/g,\n        Eb = /^(?:submit|button|image|reset|file)$/i,\n        Fb = /^(?:input|select|textarea|keygen)/i;\n\n    function Gb(a, b, c, d) {\n      var e;\n      if (n.isArray(b)) n.each(b, function (b, e) {\n        c || Cb.test(a) ? d(a, e) : Gb(a + "[" + ("object" == _typeof(e) && null != e ? b : "") + "]", e, c, d);\n      });else if (c || "object" !== n.type(b)) d(a, b);else for (e in b) {\n        Gb(a + "[" + e + "]", b[e], c, d);\n      }\n    }\n\n    n.param = function (a, b) {\n      var c,\n          d = [],\n          e = function e(a, b) {\n        b = n.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b);\n      };\n\n      if (void 0 === b && (b = n.ajaxSettings && n.ajaxSettings.traditional), n.isArray(a) || a.jquery && !n.isPlainObject(a)) n.each(a, function () {\n        e(this.name, this.value);\n      });else for (c in a) {\n        Gb(c, a[c], b, e);\n      }\n      return d.join("&").replace(Bb, "+");\n    }, n.fn.extend({\n      serialize: function serialize() {\n        return n.param(this.serializeArray());\n      },\n      serializeArray: function serializeArray() {\n        return this.map(function () {\n          var a = n.prop(this, "elements");\n          return a ? n.makeArray(a) : this;\n        }).filter(function () {\n          var a = this.type;\n          return this.name && !n(this).is(":disabled") && Fb.test(this.nodeName) && !Eb.test(a) && (this.checked || !X.test(a));\n        }).map(function (a, b) {\n          var c = n(this).val();\n          return null == c ? null : n.isArray(c) ? n.map(c, function (a) {\n            return {\n              name: b.name,\n              value: a.replace(Db, "\\r\\n")\n            };\n          }) : {\n            name: b.name,\n            value: c.replace(Db, "\\r\\n")\n          };\n        }).get();\n      }\n    }), n.ajaxSettings.xhr = function () {\n      try {\n        return new a.XMLHttpRequest();\n      } catch (b) {}\n    };\n    var Hb = {\n      0: 200,\n      1223: 204\n    },\n        Ib = n.ajaxSettings.xhr();\n    l.cors = !!Ib && "withCredentials" in Ib, l.ajax = Ib = !!Ib, n.ajaxTransport(function (b) {\n      var _c, d;\n\n      return l.cors || Ib && !b.crossDomain ? {\n        send: function send(e, f) {\n          var g,\n              h = b.xhr();\n          if (h.open(b.type, b.url, b.async, b.username, b.password), b.xhrFields) for (g in b.xhrFields) {\n            h[g] = b.xhrFields[g];\n          }\n          b.mimeType && h.overrideMimeType && h.overrideMimeType(b.mimeType), b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest");\n\n          for (g in e) {\n            h.setRequestHeader(g, e[g]);\n          }\n\n          _c = function c(a) {\n            return function () {\n              _c && (_c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a ? h.abort() : "error" === a ? "number" != typeof h.status ? f(0, "error") : f(h.status, h.statusText) : f(Hb[h.status] || h.status, h.statusText, "text" !== (h.responseType || "text") || "string" != typeof h.responseText ? {\n                binary: h.response\n              } : {\n                text: h.responseText\n              }, h.getAllResponseHeaders()));\n            };\n          }, h.onload = _c(), d = h.onerror = _c("error"), void 0 !== h.onabort ? h.onabort = d : h.onreadystatechange = function () {\n            4 === h.readyState && a.setTimeout(function () {\n              _c && d();\n            });\n          }, _c = _c("abort");\n\n          try {\n            h.send(b.hasContent && b.data || null);\n          } catch (i) {\n            if (_c) throw i;\n          }\n        },\n        abort: function abort() {\n          _c && _c();\n        }\n      } : void 0;\n    }), n.ajaxSetup({\n      accepts: {\n        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"\n      },\n      contents: {\n        script: /\\b(?:java|ecma)script\\b/\n      },\n      converters: {\n        "text script": function textScript(a) {\n          return n.globalEval(a), a;\n        }\n      }\n    }), n.ajaxPrefilter("script", function (a) {\n      void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");\n    }), n.ajaxTransport("script", function (a) {\n      if (a.crossDomain) {\n        var b, _c2;\n\n        return {\n          send: function send(e, f) {\n            b = n("<script>").prop({\n              charset: a.scriptCharset,\n              src: a.url\n            }).on("load error", _c2 = function c(a) {\n              b.remove(), _c2 = null, a && f("error" === a.type ? 404 : 200, a.type);\n            }), d.head.appendChild(b[0]);\n          },\n          abort: function abort() {\n            _c2 && _c2();\n          }\n        };\n      }\n    });\n    var Jb = [],\n        Kb = /(=)\\?(?=&|$)|\\?\\?/;\n    n.ajaxSetup({\n      jsonp: "callback",\n      jsonpCallback: function jsonpCallback() {\n        var a = Jb.pop() || n.expando + "_" + kb++;\n        return this[a] = !0, a;\n      }\n    }), n.ajaxPrefilter("json jsonp", function (b, c, d) {\n      var e,\n          f,\n          g,\n          h = b.jsonp !== !1 && (Kb.test(b.url) ? "url" : "string" == typeof b.data && 0 === (b.contentType || "").indexOf("application/x-www-form-urlencoded") && Kb.test(b.data) && "data");\n      return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = n.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Kb, "$1" + e) : b.jsonp !== !1 && (b.url += (lb.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function () {\n        return g || n.error(e + " was not called"), g[0];\n      }, b.dataTypes[0] = "json", f = a[e], a[e] = function () {\n        g = arguments;\n      }, d.always(function () {\n        void 0 === f ? n(a).removeProp(e) : a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Jb.push(e)), g && n.isFunction(f) && f(g[0]), g = f = void 0;\n      }), "script") : void 0;\n    }), n.parseHTML = function (a, b, c) {\n      if (!a || "string" != typeof a) return null;\n      "boolean" == typeof b && (c = b, b = !1), b = b || d;\n      var e = x.exec(a),\n          f = !c && [];\n      return e ? [b.createElement(e[1])] : (e = ca([a], b, f), f && f.length && n(f).remove(), n.merge([], e.childNodes));\n    };\n    var Lb = n.fn.load;\n    n.fn.load = function (a, b, c) {\n      if ("string" != typeof a && Lb) return Lb.apply(this, arguments);\n      var d,\n          e,\n          f,\n          g = this,\n          h = a.indexOf(" ");\n      return h > -1 && (d = n.trim(a.slice(h)), a = a.slice(0, h)), n.isFunction(b) ? (c = b, b = void 0) : b && "object" == _typeof(b) && (e = "POST"), g.length > 0 && n.ajax({\n        url: a,\n        type: e || "GET",\n        dataType: "html",\n        data: b\n      }).done(function (a) {\n        f = arguments, g.html(d ? n("<div>").append(n.parseHTML(a)).find(d) : a);\n      }).always(c && function (a, b) {\n        g.each(function () {\n          c.apply(this, f || [a.responseText, b, a]);\n        });\n      }), this;\n    }, n.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (a, b) {\n      n.fn[b] = function (a) {\n        return this.on(b, a);\n      };\n    }), n.expr.filters.animated = function (a) {\n      return n.grep(n.timers, function (b) {\n        return a === b.elem;\n      }).length;\n    };\n\n    function Mb(a) {\n      return n.isWindow(a) ? a : 9 === a.nodeType && a.defaultView;\n    }\n\n    n.offset = {\n      setOffset: function setOffset(a, b, c) {\n        var d,\n            e,\n            f,\n            g,\n            h,\n            i,\n            j,\n            k = n.css(a, "position"),\n            l = n(a),\n            m = {};\n        "static" === k && (a.style.position = "relative"), h = l.offset(), f = n.css(a, "top"), i = n.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), n.isFunction(b) && (b = b.call(a, c, n.extend({}, h))), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m);\n      }\n    }, n.fn.extend({\n      offset: function offset(a) {\n        if (arguments.length) return void 0 === a ? this : this.each(function (b) {\n          n.offset.setOffset(this, a, b);\n        });\n        var b,\n            c,\n            d = this[0],\n            e = {\n          top: 0,\n          left: 0\n        },\n            f = d && d.ownerDocument;\n        if (f) return b = f.documentElement, n.contains(b, d) ? (e = d.getBoundingClientRect(), c = Mb(f), {\n          top: e.top + c.pageYOffset - b.clientTop,\n          left: e.left + c.pageXOffset - b.clientLeft\n        }) : e;\n      },\n      position: function position() {\n        if (this[0]) {\n          var a,\n              b,\n              c = this[0],\n              d = {\n            top: 0,\n            left: 0\n          };\n          return "fixed" === n.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), n.nodeName(a[0], "html") || (d = a.offset()), d.top += n.css(a[0], "borderTopWidth", !0), d.left += n.css(a[0], "borderLeftWidth", !0)), {\n            top: b.top - d.top - n.css(c, "marginTop", !0),\n            left: b.left - d.left - n.css(c, "marginLeft", !0)\n          };\n        }\n      },\n      offsetParent: function offsetParent() {\n        return this.map(function () {\n          var a = this.offsetParent;\n\n          while (a && "static" === n.css(a, "position")) {\n            a = a.offsetParent;\n          }\n\n          return a || Ea;\n        });\n      }\n    }), n.each({\n      scrollLeft: "pageXOffset",\n      scrollTop: "pageYOffset"\n    }, function (a, b) {\n      var c = "pageYOffset" === b;\n\n      n.fn[a] = function (d) {\n        return K(this, function (a, d, e) {\n          var f = Mb(a);\n          return void 0 === e ? f ? f[b] : a[d] : void (f ? f.scrollTo(c ? f.pageXOffset : e, c ? e : f.pageYOffset) : a[d] = e);\n        }, a, d, arguments.length);\n      };\n    }), n.each(["top", "left"], function (a, b) {\n      n.cssHooks[b] = Ga(l.pixelPosition, function (a, c) {\n        return c ? (c = Fa(a, b), Ba.test(c) ? n(a).position()[b] + "px" : c) : void 0;\n      });\n    }), n.each({\n      Height: "height",\n      Width: "width"\n    }, function (a, b) {\n      n.each({\n        padding: "inner" + a,\n        content: b,\n        "": "outer" + a\n      }, function (c, d) {\n        n.fn[d] = function (d, e) {\n          var f = arguments.length && (c || "boolean" != typeof d),\n              g = c || (d === !0 || e === !0 ? "margin" : "border");\n          return K(this, function (b, c, d) {\n            var e;\n            return n.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? n.css(b, c, g) : n.style(b, c, d, g);\n          }, b, f ? d : void 0, f, null);\n        };\n      });\n    }), n.fn.extend({\n      bind: function bind(a, b, c) {\n        return this.on(a, null, b, c);\n      },\n      unbind: function unbind(a, b) {\n        return this.off(a, null, b);\n      },\n      delegate: function delegate(a, b, c, d) {\n        return this.on(b, a, c, d);\n      },\n      undelegate: function undelegate(a, b, c) {\n        return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);\n      },\n      size: function size() {\n        return this.length;\n      }\n    }), n.fn.andSelf = n.fn.addBack, "function" == typeof define && __webpack_require__(/*! !webpack amd options */ "../node_modules/webpack/buildin/amd-options.js") && define("jquery", [], function () {\n      return n;\n    });\n    var Nb = a.jQuery,\n        Ob = a.$;\n    return n.noConflict = function (b) {\n      return a.$ === n && (a.$ = Ob), b && a.jQuery === n && (a.jQuery = Nb), n;\n    }, b || (a.jQuery = a.$ = n), n;\n  });\n};\n\n/* harmony default export */ __webpack_exports__["default"] = (jquery());\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ "../node_modules/webpack/buildin/harmony-module.js")(module)))\n\n//# sourceURL=webpack:///./js/vendor/jquery.js?')},"./js/vendor/swiper.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {var _this = undefined;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar swiper = function swiper() {\n  /**\n   * Swiper 5.3.6\n   * Most modern mobile touch slider and framework with hardware accelerated transitions\n   * http://swiperjs.com\n   *\n   * Copyright 2014-2020 Vladimir Kharlampidi\n   *\n   * Released under the MIT License\n   *\n   * Released on: February 29, 2020\n   */\n  (function (global, factory) {\n    (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && __webpack_require__(/*! !webpack amd options */ \"../node_modules/webpack/buildin/amd-options.js\") ? define(factory) : (global = global || self, global.Swiper = factory());\n  })(_this, function () {\n    'use strict';\n    /**\n     * SSR Window 1.0.1\n     * Better handling for window object in SSR environment\n     * https://github.com/nolimits4web/ssr-window\n     *\n     * Copyright 2018, Vladimir Kharlampidi\n     *\n     * Licensed under MIT\n     *\n     * Released on: July 18, 2018\n     */\n\n    var doc = typeof document === 'undefined' ? {\n      body: {},\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {},\n      activeElement: {\n        blur: function blur() {},\n        nodeName: ''\n      },\n      querySelector: function querySelector() {\n        return null;\n      },\n      querySelectorAll: function querySelectorAll() {\n        return [];\n      },\n      getElementById: function getElementById() {\n        return null;\n      },\n      createEvent: function createEvent() {\n        return {\n          initEvent: function initEvent() {}\n        };\n      },\n      createElement: function createElement() {\n        return {\n          children: [],\n          childNodes: [],\n          style: {},\n          setAttribute: function setAttribute() {},\n          getElementsByTagName: function getElementsByTagName() {\n            return [];\n          }\n        };\n      },\n      location: {\n        hash: ''\n      }\n    } : document; // eslint-disable-line\n\n    var win = typeof window === 'undefined' ? {\n      document: doc,\n      navigator: {\n        userAgent: ''\n      },\n      location: {},\n      history: {},\n      CustomEvent: function CustomEvent() {\n        return this;\n      },\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {},\n      getComputedStyle: function getComputedStyle() {\n        return {\n          getPropertyValue: function getPropertyValue() {\n            return '';\n          }\n        };\n      },\n      Image: function Image() {},\n      Date: function Date() {},\n      screen: {},\n      setTimeout: function setTimeout() {},\n      clearTimeout: function clearTimeout() {}\n    } : window; // eslint-disable-line\n\n    /**\n     * Dom7 2.1.3\n     * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n     * http://framework7.io/docs/dom.html\n     *\n     * Copyright 2019, Vladimir Kharlampidi\n     * The iDangero.us\n     * http://www.idangero.us/\n     *\n     * Licensed under MIT\n     *\n     * Released on: February 11, 2019\n     */\n\n    var Dom7 = function Dom7(arr) {\n      var self = this; // Create array-like object\n\n      for (var i = 0; i < arr.length; i += 1) {\n        self[i] = arr[i];\n      }\n\n      self.length = arr.length; // Return collection with methods\n\n      return this;\n    };\n\n    function $(selector, context) {\n      var arr = [];\n      var i = 0;\n\n      if (selector && !context) {\n        if (selector instanceof Dom7) {\n          return selector;\n        }\n      }\n\n      if (selector) {\n        // String\n        if (typeof selector === 'string') {\n          var els;\n          var tempParent;\n          var html = selector.trim();\n\n          if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n            var toCreate = 'div';\n\n            if (html.indexOf('<li') === 0) {\n              toCreate = 'ul';\n            }\n\n            if (html.indexOf('<tr') === 0) {\n              toCreate = 'tbody';\n            }\n\n            if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\n              toCreate = 'tr';\n            }\n\n            if (html.indexOf('<tbody') === 0) {\n              toCreate = 'table';\n            }\n\n            if (html.indexOf('<option') === 0) {\n              toCreate = 'select';\n            }\n\n            tempParent = doc.createElement(toCreate);\n            tempParent.innerHTML = html;\n\n            for (i = 0; i < tempParent.childNodes.length; i += 1) {\n              arr.push(tempParent.childNodes[i]);\n            }\n          } else {\n            if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n              // Pure ID selector\n              els = [doc.getElementById(selector.trim().split('#')[1])];\n            } else {\n              // Other selectors\n              els = (context || doc).querySelectorAll(selector.trim());\n            }\n\n            for (i = 0; i < els.length; i += 1) {\n              if (els[i]) {\n                arr.push(els[i]);\n              }\n            }\n          }\n        } else if (selector.nodeType || selector === win || selector === doc) {\n          // Node/element\n          arr.push(selector);\n        } else if (selector.length > 0 && selector[0].nodeType) {\n          // Array of elements or instance of Dom\n          for (i = 0; i < selector.length; i += 1) {\n            arr.push(selector[i]);\n          }\n        }\n      }\n\n      return new Dom7(arr);\n    }\n\n    $.fn = Dom7.prototype;\n    $.Class = Dom7;\n    $.Dom7 = Dom7;\n\n    function unique(arr) {\n      var uniqueArray = [];\n\n      for (var i = 0; i < arr.length; i += 1) {\n        if (uniqueArray.indexOf(arr[i]) === -1) {\n          uniqueArray.push(arr[i]);\n        }\n      }\n\n      return uniqueArray;\n    } // Classes and attributes\n\n\n    function addClass(className) {\n      if (typeof className === 'undefined') {\n        return this;\n      }\n\n      var classes = className.split(' ');\n\n      for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n          if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n            this[j].classList.add(classes[i]);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function removeClass(className) {\n      var classes = className.split(' ');\n\n      for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n          if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n            this[j].classList.remove(classes[i]);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function hasClass(className) {\n      if (!this[0]) {\n        return false;\n      }\n\n      return this[0].classList.contains(className);\n    }\n\n    function toggleClass(className) {\n      var classes = className.split(' ');\n\n      for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n          if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n            this[j].classList.toggle(classes[i]);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function attr(attrs, value) {\n      var arguments$1 = arguments;\n\n      if (arguments.length === 1 && typeof attrs === 'string') {\n        // Get attr\n        if (this[0]) {\n          return this[0].getAttribute(attrs);\n        }\n\n        return undefined;\n      } // Set attrs\n\n\n      for (var i = 0; i < this.length; i += 1) {\n        if (arguments$1.length === 2) {\n          // String\n          this[i].setAttribute(attrs, value);\n        } else {\n          // Object\n          // eslint-disable-next-line\n          for (var attrName in attrs) {\n            this[i][attrName] = attrs[attrName];\n            this[i].setAttribute(attrName, attrs[attrName]);\n          }\n        }\n      }\n\n      return this;\n    } // eslint-disable-next-line\n\n\n    function removeAttr(attr) {\n      for (var i = 0; i < this.length; i += 1) {\n        this[i].removeAttribute(attr);\n      }\n\n      return this;\n    }\n\n    function data(key, value) {\n      var el;\n\n      if (typeof value === 'undefined') {\n        el = this[0]; // Get value\n\n        if (el) {\n          if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n            return el.dom7ElementDataStorage[key];\n          }\n\n          var dataKey = el.getAttribute(\"data-\" + key);\n\n          if (dataKey) {\n            return dataKey;\n          }\n\n          return undefined;\n        }\n\n        return undefined;\n      } // Set value\n\n\n      for (var i = 0; i < this.length; i += 1) {\n        el = this[i];\n\n        if (!el.dom7ElementDataStorage) {\n          el.dom7ElementDataStorage = {};\n        }\n\n        el.dom7ElementDataStorage[key] = value;\n      }\n\n      return this;\n    } // Transforms\n    // eslint-disable-next-line\n\n\n    function transform(transform) {\n      for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransform = transform;\n        elStyle.transform = transform;\n      }\n\n      return this;\n    }\n\n    function transition(duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + \"ms\"; // eslint-disable-line\n      }\n\n      for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransitionDuration = duration;\n        elStyle.transitionDuration = duration;\n      }\n\n      return this;\n    } // Events\n\n\n    function on() {\n      var assign;\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      var eventType = args[0];\n      var targetSelector = args[1];\n      var listener = args[2];\n      var capture = args[3];\n\n      if (typeof args[1] === 'function') {\n        assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];\n        targetSelector = undefined;\n      }\n\n      if (!capture) {\n        capture = false;\n      }\n\n      function handleLiveEvent(e) {\n        var target = e.target;\n\n        if (!target) {\n          return;\n        }\n\n        var eventData = e.target.dom7EventData || [];\n\n        if (eventData.indexOf(e) < 0) {\n          eventData.unshift(e);\n        }\n\n        if ($(target).is(targetSelector)) {\n          listener.apply(target, eventData);\n        } else {\n          var parents = $(target).parents(); // eslint-disable-line\n\n          for (var k = 0; k < parents.length; k += 1) {\n            if ($(parents[k]).is(targetSelector)) {\n              listener.apply(parents[k], eventData);\n            }\n          }\n        }\n      }\n\n      function handleEvent(e) {\n        var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n        if (eventData.indexOf(e) < 0) {\n          eventData.unshift(e);\n        }\n\n        listener.apply(this, eventData);\n      }\n\n      var events = eventType.split(' ');\n      var j;\n\n      for (var i = 0; i < this.length; i += 1) {\n        var el = this[i];\n\n        if (!targetSelector) {\n          for (j = 0; j < events.length; j += 1) {\n            var event = events[j];\n\n            if (!el.dom7Listeners) {\n              el.dom7Listeners = {};\n            }\n\n            if (!el.dom7Listeners[event]) {\n              el.dom7Listeners[event] = [];\n            }\n\n            el.dom7Listeners[event].push({\n              listener: listener,\n              proxyListener: handleEvent\n            });\n            el.addEventListener(event, handleEvent, capture);\n          }\n        } else {\n          // Live events\n          for (j = 0; j < events.length; j += 1) {\n            var event$1 = events[j];\n\n            if (!el.dom7LiveListeners) {\n              el.dom7LiveListeners = {};\n            }\n\n            if (!el.dom7LiveListeners[event$1]) {\n              el.dom7LiveListeners[event$1] = [];\n            }\n\n            el.dom7LiveListeners[event$1].push({\n              listener: listener,\n              proxyListener: handleLiveEvent\n            });\n            el.addEventListener(event$1, handleLiveEvent, capture);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function off() {\n      var assign;\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      var eventType = args[0];\n      var targetSelector = args[1];\n      var listener = args[2];\n      var capture = args[3];\n\n      if (typeof args[1] === 'function') {\n        assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];\n        targetSelector = undefined;\n      }\n\n      if (!capture) {\n        capture = false;\n      }\n\n      var events = eventType.split(' ');\n\n      for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n\n        for (var j = 0; j < this.length; j += 1) {\n          var el = this[j];\n          var handlers = void 0;\n\n          if (!targetSelector && el.dom7Listeners) {\n            handlers = el.dom7Listeners[event];\n          } else if (targetSelector && el.dom7LiveListeners) {\n            handlers = el.dom7LiveListeners[event];\n          }\n\n          if (handlers && handlers.length) {\n            for (var k = handlers.length - 1; k >= 0; k -= 1) {\n              var handler = handlers[k];\n\n              if (listener && handler.listener === listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              } else if (!listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              }\n            }\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function trigger() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      var events = args[0].split(' ');\n      var eventData = args[1];\n\n      for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n\n        for (var j = 0; j < this.length; j += 1) {\n          var el = this[j];\n          var evt = void 0;\n\n          try {\n            evt = new win.CustomEvent(event, {\n              detail: eventData,\n              bubbles: true,\n              cancelable: true\n            });\n          } catch (e) {\n            evt = doc.createEvent('Event');\n            evt.initEvent(event, true, true);\n            evt.detail = eventData;\n          } // eslint-disable-next-line\n\n\n          el.dom7EventData = args.filter(function (data, dataIndex) {\n            return dataIndex > 0;\n          });\n          el.dispatchEvent(evt);\n          el.dom7EventData = [];\n          delete el.dom7EventData;\n        }\n      }\n\n      return this;\n    }\n\n    function transitionEnd(callback) {\n      var events = ['webkitTransitionEnd', 'transitionend'];\n      var dom = this;\n      var i;\n\n      function fireCallBack(e) {\n        /* jshint validthis:true */\n        if (e.target !== this) {\n          return;\n        }\n\n        callback.call(this, e);\n\n        for (i = 0; i < events.length; i += 1) {\n          dom.off(events[i], fireCallBack);\n        }\n      }\n\n      if (callback) {\n        for (i = 0; i < events.length; i += 1) {\n          dom.on(events[i], fireCallBack);\n        }\n      }\n\n      return this;\n    }\n\n    function outerWidth(includeMargins) {\n      if (this.length > 0) {\n        if (includeMargins) {\n          // eslint-disable-next-line\n          var styles = this.styles();\n          return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n        }\n\n        return this[0].offsetWidth;\n      }\n\n      return null;\n    }\n\n    function outerHeight(includeMargins) {\n      if (this.length > 0) {\n        if (includeMargins) {\n          // eslint-disable-next-line\n          var styles = this.styles();\n          return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n        }\n\n        return this[0].offsetHeight;\n      }\n\n      return null;\n    }\n\n    function offset() {\n      if (this.length > 0) {\n        var el = this[0];\n        var box = el.getBoundingClientRect();\n        var body = doc.body;\n        var clientTop = el.clientTop || body.clientTop || 0;\n        var clientLeft = el.clientLeft || body.clientLeft || 0;\n        var scrollTop = el === win ? win.scrollY : el.scrollTop;\n        var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n        return {\n          top: box.top + scrollTop - clientTop,\n          left: box.left + scrollLeft - clientLeft\n        };\n      }\n\n      return null;\n    }\n\n    function styles() {\n      if (this[0]) {\n        return win.getComputedStyle(this[0], null);\n      }\n\n      return {};\n    }\n\n    function css(props, value) {\n      var i;\n\n      if (arguments.length === 1) {\n        if (typeof props === 'string') {\n          if (this[0]) {\n            return win.getComputedStyle(this[0], null).getPropertyValue(props);\n          }\n        } else {\n          for (i = 0; i < this.length; i += 1) {\n            // eslint-disable-next-line\n            for (var prop in props) {\n              this[i].style[prop] = props[prop];\n            }\n          }\n\n          return this;\n        }\n      }\n\n      if (arguments.length === 2 && typeof props === 'string') {\n        for (i = 0; i < this.length; i += 1) {\n          this[i].style[props] = value;\n        }\n\n        return this;\n      }\n\n      return this;\n    } // Iterate over the collection passing elements to `callback`\n\n\n    function each(callback) {\n      // Don't bother continuing without a callback\n      if (!callback) {\n        return this;\n      } // Iterate over the current collection\n\n\n      for (var i = 0; i < this.length; i += 1) {\n        // If the callback returns false\n        if (callback.call(this[i], i, this[i]) === false) {\n          // End the loop early\n          return this;\n        }\n      } // Return `this` to allow chained DOM operations\n\n\n      return this;\n    }\n\n    function filter(callback) {\n      var matchedItems = [];\n      var dom = this;\n\n      for (var i = 0; i < dom.length; i += 1) {\n        if (callback.call(dom[i], i, dom[i])) {\n          matchedItems.push(dom[i]);\n        }\n      }\n\n      return new Dom7(matchedItems);\n    } // eslint-disable-next-line\n\n\n    function html(html) {\n      if (typeof html === 'undefined') {\n        return this[0] ? this[0].innerHTML : undefined;\n      }\n\n      for (var i = 0; i < this.length; i += 1) {\n        this[i].innerHTML = html;\n      }\n\n      return this;\n    } // eslint-disable-next-line\n\n\n    function text(text) {\n      if (typeof text === 'undefined') {\n        if (this[0]) {\n          return this[0].textContent.trim();\n        }\n\n        return null;\n      }\n\n      for (var i = 0; i < this.length; i += 1) {\n        this[i].textContent = text;\n      }\n\n      return this;\n    }\n\n    function is(selector) {\n      var el = this[0];\n      var compareWith;\n      var i;\n\n      if (!el || typeof selector === 'undefined') {\n        return false;\n      }\n\n      if (typeof selector === 'string') {\n        if (el.matches) {\n          return el.matches(selector);\n        } else if (el.webkitMatchesSelector) {\n          return el.webkitMatchesSelector(selector);\n        } else if (el.msMatchesSelector) {\n          return el.msMatchesSelector(selector);\n        }\n\n        compareWith = $(selector);\n\n        for (i = 0; i < compareWith.length; i += 1) {\n          if (compareWith[i] === el) {\n            return true;\n          }\n        }\n\n        return false;\n      } else if (selector === doc) {\n        return el === doc;\n      } else if (selector === win) {\n        return el === win;\n      }\n\n      if (selector.nodeType || selector instanceof Dom7) {\n        compareWith = selector.nodeType ? [selector] : selector;\n\n        for (i = 0; i < compareWith.length; i += 1) {\n          if (compareWith[i] === el) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return false;\n    }\n\n    function index() {\n      var child = this[0];\n      var i;\n\n      if (child) {\n        i = 0; // eslint-disable-next-line\n\n        while ((child = child.previousSibling) !== null) {\n          if (child.nodeType === 1) {\n            i += 1;\n          }\n        }\n\n        return i;\n      }\n\n      return undefined;\n    } // eslint-disable-next-line\n\n\n    function eq(index) {\n      if (typeof index === 'undefined') {\n        return this;\n      }\n\n      var length = this.length;\n      var returnIndex;\n\n      if (index > length - 1) {\n        return new Dom7([]);\n      }\n\n      if (index < 0) {\n        returnIndex = length + index;\n\n        if (returnIndex < 0) {\n          return new Dom7([]);\n        }\n\n        return new Dom7([this[returnIndex]]);\n      }\n\n      return new Dom7([this[index]]);\n    }\n\n    function append() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      var newChild;\n\n      for (var k = 0; k < args.length; k += 1) {\n        newChild = args[k];\n\n        for (var i = 0; i < this.length; i += 1) {\n          if (typeof newChild === 'string') {\n            var tempDiv = doc.createElement('div');\n            tempDiv.innerHTML = newChild;\n\n            while (tempDiv.firstChild) {\n              this[i].appendChild(tempDiv.firstChild);\n            }\n          } else if (newChild instanceof Dom7) {\n            for (var j = 0; j < newChild.length; j += 1) {\n              this[i].appendChild(newChild[j]);\n            }\n          } else {\n            this[i].appendChild(newChild);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    function prepend(newChild) {\n      var i;\n      var j;\n\n      for (i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (j = 0; j < newChild.length; j += 1) {\n            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n          }\n        } else {\n          this[i].insertBefore(newChild, this[i].childNodes[0]);\n        }\n      }\n\n      return this;\n    }\n\n    function next(selector) {\n      if (this.length > 0) {\n        if (selector) {\n          if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n            return new Dom7([this[0].nextElementSibling]);\n          }\n\n          return new Dom7([]);\n        }\n\n        if (this[0].nextElementSibling) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n\n        return new Dom7([]);\n      }\n\n      return new Dom7([]);\n    }\n\n    function nextAll(selector) {\n      var nextEls = [];\n      var el = this[0];\n\n      if (!el) {\n        return new Dom7([]);\n      }\n\n      while (el.nextElementSibling) {\n        var next = el.nextElementSibling; // eslint-disable-line\n\n        if (selector) {\n          if ($(next).is(selector)) {\n            nextEls.push(next);\n          }\n        } else {\n          nextEls.push(next);\n        }\n\n        el = next;\n      }\n\n      return new Dom7(nextEls);\n    }\n\n    function prev(selector) {\n      if (this.length > 0) {\n        var el = this[0];\n\n        if (selector) {\n          if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n            return new Dom7([el.previousElementSibling]);\n          }\n\n          return new Dom7([]);\n        }\n\n        if (el.previousElementSibling) {\n          return new Dom7([el.previousElementSibling]);\n        }\n\n        return new Dom7([]);\n      }\n\n      return new Dom7([]);\n    }\n\n    function prevAll(selector) {\n      var prevEls = [];\n      var el = this[0];\n\n      if (!el) {\n        return new Dom7([]);\n      }\n\n      while (el.previousElementSibling) {\n        var prev = el.previousElementSibling; // eslint-disable-line\n\n        if (selector) {\n          if ($(prev).is(selector)) {\n            prevEls.push(prev);\n          }\n        } else {\n          prevEls.push(prev);\n        }\n\n        el = prev;\n      }\n\n      return new Dom7(prevEls);\n    }\n\n    function parent(selector) {\n      var parents = []; // eslint-disable-line\n\n      for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode !== null) {\n          if (selector) {\n            if ($(this[i].parentNode).is(selector)) {\n              parents.push(this[i].parentNode);\n            }\n          } else {\n            parents.push(this[i].parentNode);\n          }\n        }\n      }\n\n      return $(unique(parents));\n    }\n\n    function parents(selector) {\n      var parents = []; // eslint-disable-line\n\n      for (var i = 0; i < this.length; i += 1) {\n        var parent = this[i].parentNode; // eslint-disable-line\n\n        while (parent) {\n          if (selector) {\n            if ($(parent).is(selector)) {\n              parents.push(parent);\n            }\n          } else {\n            parents.push(parent);\n          }\n\n          parent = parent.parentNode;\n        }\n      }\n\n      return $(unique(parents));\n    }\n\n    function closest(selector) {\n      var closest = this; // eslint-disable-line\n\n      if (typeof selector === 'undefined') {\n        return new Dom7([]);\n      }\n\n      if (!closest.is(selector)) {\n        closest = closest.parents(selector).eq(0);\n      }\n\n      return closest;\n    }\n\n    function find(selector) {\n      var foundElements = [];\n\n      for (var i = 0; i < this.length; i += 1) {\n        var found = this[i].querySelectorAll(selector);\n\n        for (var j = 0; j < found.length; j += 1) {\n          foundElements.push(found[j]);\n        }\n      }\n\n      return new Dom7(foundElements);\n    }\n\n    function children(selector) {\n      var children = []; // eslint-disable-line\n\n      for (var i = 0; i < this.length; i += 1) {\n        var childNodes = this[i].childNodes;\n\n        for (var j = 0; j < childNodes.length; j += 1) {\n          if (!selector) {\n            if (childNodes[j].nodeType === 1) {\n              children.push(childNodes[j]);\n            }\n          } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n            children.push(childNodes[j]);\n          }\n        }\n      }\n\n      return new Dom7(unique(children));\n    }\n\n    function remove() {\n      for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode) {\n          this[i].parentNode.removeChild(this[i]);\n        }\n      }\n\n      return this;\n    }\n\n    function add() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      var dom = this;\n      var i;\n      var j;\n\n      for (i = 0; i < args.length; i += 1) {\n        var toAdd = $(args[i]);\n\n        for (j = 0; j < toAdd.length; j += 1) {\n          dom[dom.length] = toAdd[j];\n          dom.length += 1;\n        }\n      }\n\n      return dom;\n    }\n\n    var Methods = {\n      addClass: addClass,\n      removeClass: removeClass,\n      hasClass: hasClass,\n      toggleClass: toggleClass,\n      attr: attr,\n      removeAttr: removeAttr,\n      data: data,\n      transform: transform,\n      transition: transition,\n      on: on,\n      off: off,\n      trigger: trigger,\n      transitionEnd: transitionEnd,\n      outerWidth: outerWidth,\n      outerHeight: outerHeight,\n      offset: offset,\n      css: css,\n      each: each,\n      html: html,\n      text: text,\n      is: is,\n      index: index,\n      eq: eq,\n      append: append,\n      prepend: prepend,\n      next: next,\n      nextAll: nextAll,\n      prev: prev,\n      prevAll: prevAll,\n      parent: parent,\n      parents: parents,\n      closest: closest,\n      find: find,\n      children: children,\n      filter: filter,\n      remove: remove,\n      add: add,\n      styles: styles\n    };\n    Object.keys(Methods).forEach(function (methodName) {\n      $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n    });\n    var Utils = {\n      deleteProps: function deleteProps(obj) {\n        var object = obj;\n        Object.keys(object).forEach(function (key) {\n          try {\n            object[key] = null;\n          } catch (e) {// no getter for object\n          }\n\n          try {\n            delete object[key];\n          } catch (e) {// something got wrong\n          }\n        });\n      },\n      nextTick: function nextTick(callback, delay) {\n        if (delay === void 0) delay = 0;\n        return setTimeout(callback, delay);\n      },\n      now: function now() {\n        return Date.now();\n      },\n      getTranslate: function getTranslate(el, axis) {\n        if (axis === void 0) axis = 'x';\n        var matrix;\n        var curTransform;\n        var transformMatrix;\n        var curStyle = win.getComputedStyle(el, null);\n\n        if (win.WebKitCSSMatrix) {\n          curTransform = curStyle.transform || curStyle.webkitTransform;\n\n          if (curTransform.split(',').length > 6) {\n            curTransform = curTransform.split(', ').map(function (a) {\n              return a.replace(',', '.');\n            }).join(', ');\n          } // Some old versions of Webkit choke when 'none' is passed; pass\n          // empty string instead in this case\n\n\n          transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n        } else {\n          transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n          matrix = transformMatrix.toString().split(',');\n        }\n\n        if (axis === 'x') {\n          // Latest Chrome and webkits Fix\n          if (win.WebKitCSSMatrix) {\n            curTransform = transformMatrix.m41;\n          } // Crazy IE10 Matrix\n          else if (matrix.length === 16) {\n              curTransform = parseFloat(matrix[12]);\n            } // Normal Browsers\n            else {\n                curTransform = parseFloat(matrix[4]);\n              }\n        }\n\n        if (axis === 'y') {\n          // Latest Chrome and webkits Fix\n          if (win.WebKitCSSMatrix) {\n            curTransform = transformMatrix.m42;\n          } // Crazy IE10 Matrix\n          else if (matrix.length === 16) {\n              curTransform = parseFloat(matrix[13]);\n            } // Normal Browsers\n            else {\n                curTransform = parseFloat(matrix[5]);\n              }\n        }\n\n        return curTransform || 0;\n      },\n      parseUrlQuery: function parseUrlQuery(url) {\n        var query = {};\n        var urlToParse = url || win.location.href;\n        var i;\n        var params;\n        var param;\n        var length;\n\n        if (typeof urlToParse === 'string' && urlToParse.length) {\n          urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n          params = urlToParse.split('&').filter(function (paramsPart) {\n            return paramsPart !== '';\n          });\n          length = params.length;\n\n          for (i = 0; i < length; i += 1) {\n            param = params[i].replace(/#\\S+/g, '').split('=');\n            query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n          }\n        }\n\n        return query;\n      },\n      isObject: function isObject(o) {\n        return _typeof(o) === 'object' && o !== null && o.constructor && o.constructor === Object;\n      },\n      extend: function extend() {\n        var args = [],\n            len$1 = arguments.length;\n\n        while (len$1--) {\n          args[len$1] = arguments[len$1];\n        }\n\n        var to = Object(args[0]);\n\n        for (var i = 1; i < args.length; i += 1) {\n          var nextSource = args[i];\n\n          if (nextSource !== undefined && nextSource !== null) {\n            var keysArray = Object.keys(Object(nextSource));\n\n            for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n              var nextKey = keysArray[nextIndex];\n              var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n              if (desc !== undefined && desc.enumerable) {\n                if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                  Utils.extend(to[nextKey], nextSource[nextKey]);\n                } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                  to[nextKey] = {};\n                  Utils.extend(to[nextKey], nextSource[nextKey]);\n                } else {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n        }\n\n        return to;\n      }\n    };\n\n    var Support = function Support() {\n      return {\n        touch: win.Modernizr && win.Modernizr.touch === true || function checkTouch() {\n          return !!(win.navigator.maxTouchPoints > 0 || 'ontouchstart' in win || win.DocumentTouch && doc instanceof win.DocumentTouch);\n        }(),\n        pointerEvents: !!win.PointerEvent && 'maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0,\n        observer: function checkObserver() {\n          return 'MutationObserver' in win || 'WebkitMutationObserver' in win;\n        }(),\n        passiveListener: function checkPassiveListener() {\n          var supportsPassive = false;\n\n          try {\n            var opts = Object.defineProperty({}, 'passive', {\n              // eslint-disable-next-line\n              get: function get() {\n                supportsPassive = true;\n              }\n            });\n            win.addEventListener('testPassiveListener', null, opts);\n          } catch (e) {// No support\n          }\n\n          return supportsPassive;\n        }(),\n        gestures: function checkGestures() {\n          return 'ongesturestart' in win;\n        }()\n      };\n    }();\n\n    var SwiperClass = function SwiperClass(params) {\n      if (params === void 0) params = {};\n      var self = this;\n      self.params = params; // Events\n\n      self.eventsListeners = {};\n\n      if (self.params && self.params.on) {\n        Object.keys(self.params.on).forEach(function (eventName) {\n          self.on(eventName, self.params.on[eventName]);\n        });\n      }\n    };\n\n    var staticAccessors = {\n      components: {\n        configurable: true\n      }\n    };\n\n    SwiperClass.prototype.on = function on(events, handler, priority) {\n      var self = this;\n\n      if (typeof handler !== 'function') {\n        return self;\n      }\n\n      var method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(function (event) {\n        if (!self.eventsListeners[event]) {\n          self.eventsListeners[event] = [];\n        }\n\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    };\n\n    SwiperClass.prototype.once = function once(events, handler, priority) {\n      var self = this;\n\n      if (typeof handler !== 'function') {\n        return self;\n      }\n\n      function onceHandler() {\n        var args = [],\n            len = arguments.length;\n\n        while (len--) {\n          args[len] = arguments[len];\n        }\n\n        self.off(events, onceHandler);\n\n        if (onceHandler.f7proxy) {\n          delete onceHandler.f7proxy;\n        }\n\n        handler.apply(self, args);\n      }\n\n      onceHandler.f7proxy = handler;\n      return self.on(events, onceHandler, priority);\n    };\n\n    SwiperClass.prototype.off = function off(events, handler) {\n      var self = this;\n\n      if (!self.eventsListeners) {\n        return self;\n      }\n\n      events.split(' ').forEach(function (event) {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n          self.eventsListeners[event].forEach(function (eventHandler, index) {\n            if (eventHandler === handler || eventHandler.f7proxy && eventHandler.f7proxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    };\n\n    SwiperClass.prototype.emit = function emit() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      var self = this;\n\n      if (!self.eventsListeners) {\n        return self;\n      }\n\n      var events;\n      var data;\n      var context;\n\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n\n      var eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(function (event) {\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          var handlers = [];\n          self.eventsListeners[event].forEach(function (eventHandler) {\n            handlers.push(eventHandler);\n          });\n          handlers.forEach(function (eventHandler) {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    };\n\n    SwiperClass.prototype.useModulesParams = function useModulesParams(instanceParams) {\n      var instance = this;\n\n      if (!instance.modules) {\n        return;\n      }\n\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName]; // Extend params\n\n        if (module.params) {\n          Utils.extend(instanceParams, module.params);\n        }\n      });\n    };\n\n    SwiperClass.prototype.useModules = function useModules(modulesParams) {\n      if (modulesParams === void 0) modulesParams = {};\n      var instance = this;\n\n      if (!instance.modules) {\n        return;\n      }\n\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName];\n        var moduleParams = modulesParams[moduleName] || {}; // Extend instance methods and props\n\n        if (module.instance) {\n          Object.keys(module.instance).forEach(function (modulePropName) {\n            var moduleProp = module.instance[modulePropName];\n\n            if (typeof moduleProp === 'function') {\n              instance[modulePropName] = moduleProp.bind(instance);\n            } else {\n              instance[modulePropName] = moduleProp;\n            }\n          });\n        } // Add event listeners\n\n\n        if (module.on && instance.on) {\n          Object.keys(module.on).forEach(function (moduleEventName) {\n            instance.on(moduleEventName, module.on[moduleEventName]);\n          });\n        } // Module create callback\n\n\n        if (module.create) {\n          module.create.bind(instance)(moduleParams);\n        }\n      });\n    };\n\n    staticAccessors.components.set = function (components) {\n      var Class = this;\n\n      if (!Class.use) {\n        return;\n      }\n\n      Class.use(components);\n    };\n\n    SwiperClass.installModule = function installModule(module) {\n      var params = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        params[len] = arguments[len + 1];\n      }\n\n      var Class = this;\n\n      if (!Class.prototype.modules) {\n        Class.prototype.modules = {};\n      }\n\n      var name = module.name || Object.keys(Class.prototype.modules).length + \"_\" + Utils.now();\n      Class.prototype.modules[name] = module; // Prototype\n\n      if (module.proto) {\n        Object.keys(module.proto).forEach(function (key) {\n          Class.prototype[key] = module.proto[key];\n        });\n      } // Class\n\n\n      if (module.static) {\n        Object.keys(module.static).forEach(function (key) {\n          Class[key] = module.static[key];\n        });\n      } // Callback\n\n\n      if (module.install) {\n        module.install.apply(Class, params);\n      }\n\n      return Class;\n    };\n\n    SwiperClass.use = function use(module) {\n      var params = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) {\n        params[len] = arguments[len + 1];\n      }\n\n      var Class = this;\n\n      if (Array.isArray(module)) {\n        module.forEach(function (m) {\n          return Class.installModule(m);\n        });\n        return Class;\n      }\n\n      return Class.installModule.apply(Class, [module].concat(params));\n    };\n\n    Object.defineProperties(SwiperClass, staticAccessors);\n\n    function updateSize() {\n      var swiper = this;\n      var width;\n      var height;\n      var $el = swiper.$el;\n\n      if (typeof swiper.params.width !== 'undefined') {\n        width = swiper.params.width;\n      } else {\n        width = $el[0].clientWidth;\n      }\n\n      if (typeof swiper.params.height !== 'undefined') {\n        height = swiper.params.height;\n      } else {\n        height = $el[0].clientHeight;\n      }\n\n      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n        return;\n      } // Subtract paddings\n\n\n      width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n      height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n      Utils.extend(swiper, {\n        width: width,\n        height: height,\n        size: swiper.isHorizontal() ? width : height\n      });\n    }\n\n    function updateSlides() {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperSize = swiper.size;\n      var rtl = swiper.rtlTranslate;\n      var wrongRTL = swiper.wrongRTL;\n      var isVirtual = swiper.virtual && params.virtual.enabled;\n      var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n      var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n      var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n      var snapGrid = [];\n      var slidesGrid = [];\n      var slidesSizesGrid = [];\n\n      function slidesForMargin(slideIndex) {\n        if (!params.cssMode) {\n          return true;\n        }\n\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n\n        return true;\n      }\n\n      var offsetBefore = params.slidesOffsetBefore;\n\n      if (typeof offsetBefore === 'function') {\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\n      }\n\n      var offsetAfter = params.slidesOffsetAfter;\n\n      if (typeof offsetAfter === 'function') {\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\n      }\n\n      var previousSnapGridLength = swiper.snapGrid.length;\n      var previousSlidesGridLength = swiper.snapGrid.length;\n      var spaceBetween = params.spaceBetween;\n      var slidePosition = -offsetBefore;\n      var prevSlideSize = 0;\n      var index = 0;\n\n      if (typeof swiperSize === 'undefined') {\n        return;\n      }\n\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n      }\n\n      swiper.virtualSize = -spaceBetween; // reset margins\n\n      if (rtl) {\n        slides.css({\n          marginLeft: '',\n          marginTop: ''\n        });\n      } else {\n        slides.css({\n          marginRight: '',\n          marginBottom: ''\n        });\n      }\n\n      var slidesNumberEvenToRows;\n\n      if (params.slidesPerColumn > 1) {\n        if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n          slidesNumberEvenToRows = slidesLength;\n        } else {\n          slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n        }\n\n        if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n        }\n      } // Calc slides\n\n\n      var slideSize;\n      var slidesPerColumn = params.slidesPerColumn;\n      var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n      var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n      for (var i = 0; i < slidesLength; i += 1) {\n        slideSize = 0;\n        var slide = slides.eq(i);\n\n        if (params.slidesPerColumn > 1) {\n          // Set slides order\n          var newSlideOrderIndex = void 0;\n          var column = void 0;\n          var row = void 0;\n\n          if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n            var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n            var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n            var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n            row = Math.floor(slideIndexInGroup / columnsInGroup);\n            column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n            newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n            slide.css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex\n            });\n          } else if (params.slidesPerColumnFill === 'column') {\n            column = Math.floor(i / slidesPerColumn);\n            row = i - column * slidesPerColumn;\n\n            if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n              row += 1;\n\n              if (row >= slidesPerColumn) {\n                row = 0;\n                column += 1;\n              }\n            }\n          } else {\n            row = Math.floor(i / slidesPerRow);\n            column = i - row * slidesPerRow;\n          }\n\n          slide.css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n        }\n\n        if (slide.css('display') === 'none') {\n          continue;\n        } // eslint-disable-line\n\n\n        if (params.slidesPerView === 'auto') {\n          var slideStyles = win.getComputedStyle(slide[0], null);\n          var currentTransform = slide[0].style.transform;\n          var currentWebKitTransform = slide[0].style.webkitTransform;\n\n          if (currentTransform) {\n            slide[0].style.transform = 'none';\n          }\n\n          if (currentWebKitTransform) {\n            slide[0].style.webkitTransform = 'none';\n          }\n\n          if (params.roundLengths) {\n            slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n          } else {\n            // eslint-disable-next-line\n            if (swiper.isHorizontal()) {\n              var width = parseFloat(slideStyles.getPropertyValue('width'));\n              var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n              var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n              var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n              var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n              var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n              if (boxSizing && boxSizing === 'border-box') {\n                slideSize = width + marginLeft + marginRight;\n              } else {\n                slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n              }\n            } else {\n              var height = parseFloat(slideStyles.getPropertyValue('height'));\n              var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n              var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n              var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n              var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n              var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n\n              if (boxSizing$1 && boxSizing$1 === 'border-box') {\n                slideSize = height + marginTop + marginBottom;\n              } else {\n                slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n              }\n            }\n          }\n\n          if (currentTransform) {\n            slide[0].style.transform = currentTransform;\n          }\n\n          if (currentWebKitTransform) {\n            slide[0].style.webkitTransform = currentWebKitTransform;\n          }\n\n          if (params.roundLengths) {\n            slideSize = Math.floor(slideSize);\n          }\n        } else {\n          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n\n          if (params.roundLengths) {\n            slideSize = Math.floor(slideSize);\n          }\n\n          if (slides[i]) {\n            if (swiper.isHorizontal()) {\n              slides[i].style.width = slideSize + \"px\";\n            } else {\n              slides[i].style.height = slideSize + \"px\";\n            }\n          }\n        }\n\n        if (slides[i]) {\n          slides[i].swiperSlideSize = slideSize;\n        }\n\n        slidesSizesGrid.push(slideSize);\n\n        if (params.centeredSlides) {\n          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n\n          if (prevSlideSize === 0 && i !== 0) {\n            slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          }\n\n          if (i === 0) {\n            slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          }\n\n          if (Math.abs(slidePosition) < 1 / 1000) {\n            slidePosition = 0;\n          }\n\n          if (params.roundLengths) {\n            slidePosition = Math.floor(slidePosition);\n          }\n\n          if (index % params.slidesPerGroup === 0) {\n            snapGrid.push(slidePosition);\n          }\n\n          slidesGrid.push(slidePosition);\n        } else {\n          if (params.roundLengths) {\n            slidePosition = Math.floor(slidePosition);\n          }\n\n          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) {\n            snapGrid.push(slidePosition);\n          }\n\n          slidesGrid.push(slidePosition);\n          slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index += 1;\n      }\n\n      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n      var newSlidesGrid;\n\n      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n        $wrapperEl.css({\n          width: swiper.virtualSize + params.spaceBetween + \"px\"\n        });\n      }\n\n      if (params.setWrapperSize) {\n        if (swiper.isHorizontal()) {\n          $wrapperEl.css({\n            width: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        } else {\n          $wrapperEl.css({\n            height: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        }\n      }\n\n      if (params.slidesPerColumn > 1) {\n        swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n\n        if (swiper.isHorizontal()) {\n          $wrapperEl.css({\n            width: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        } else {\n          $wrapperEl.css({\n            height: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        }\n\n        if (params.centeredSlides) {\n          newSlidesGrid = [];\n\n          for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n            var slidesGridItem = snapGrid[i$1];\n\n            if (params.roundLengths) {\n              slidesGridItem = Math.floor(slidesGridItem);\n            }\n\n            if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) {\n              newSlidesGrid.push(slidesGridItem);\n            }\n          }\n\n          snapGrid = newSlidesGrid;\n        }\n      } // Remove last grid elements depending on width\n\n\n      if (!params.centeredSlides) {\n        newSlidesGrid = [];\n\n        for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n          var slidesGridItem$1 = snapGrid[i$2];\n\n          if (params.roundLengths) {\n            slidesGridItem$1 = Math.floor(slidesGridItem$1);\n          }\n\n          if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n            newSlidesGrid.push(slidesGridItem$1);\n          }\n        }\n\n        snapGrid = newSlidesGrid;\n\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n          snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n      }\n\n      if (snapGrid.length === 0) {\n        snapGrid = [0];\n      }\n\n      if (params.spaceBetween !== 0) {\n        if (swiper.isHorizontal()) {\n          if (rtl) {\n            slides.filter(slidesForMargin).css({\n              marginLeft: spaceBetween + \"px\"\n            });\n          } else {\n            slides.filter(slidesForMargin).css({\n              marginRight: spaceBetween + \"px\"\n            });\n          }\n        } else {\n          slides.filter(slidesForMargin).css({\n            marginBottom: spaceBetween + \"px\"\n          });\n        }\n      }\n\n      if (params.centeredSlides && params.centeredSlidesBounds) {\n        var allSlidesSize = 0;\n        slidesSizesGrid.forEach(function (slideSizeValue) {\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize -= params.spaceBetween;\n        var maxSnap = allSlidesSize - swiperSize;\n        snapGrid = snapGrid.map(function (snap) {\n          if (snap < 0) {\n            return -offsetBefore;\n          }\n\n          if (snap > maxSnap) {\n            return maxSnap + offsetAfter;\n          }\n\n          return snap;\n        });\n      }\n\n      if (params.centerInsufficientSlides) {\n        var allSlidesSize$1 = 0;\n        slidesSizesGrid.forEach(function (slideSizeValue) {\n          allSlidesSize$1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize$1 -= params.spaceBetween;\n\n        if (allSlidesSize$1 < swiperSize) {\n          var allSlidesOffset = (swiperSize - allSlidesSize$1) / 2;\n          snapGrid.forEach(function (snap, snapIndex) {\n            snapGrid[snapIndex] = snap - allSlidesOffset;\n          });\n          slidesGrid.forEach(function (snap, snapIndex) {\n            slidesGrid[snapIndex] = snap + allSlidesOffset;\n          });\n        }\n      }\n\n      Utils.extend(swiper, {\n        slides: slides,\n        snapGrid: snapGrid,\n        slidesGrid: slidesGrid,\n        slidesSizesGrid: slidesSizesGrid\n      });\n\n      if (slidesLength !== previousSlidesLength) {\n        swiper.emit('slidesLengthChange');\n      }\n\n      if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow) {\n          swiper.checkOverflow();\n        }\n\n        swiper.emit('snapGridLengthChange');\n      }\n\n      if (slidesGrid.length !== previousSlidesGridLength) {\n        swiper.emit('slidesGridLengthChange');\n      }\n\n      if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateSlidesOffset();\n      }\n    }\n\n    function updateAutoHeight(speed) {\n      var swiper = this;\n      var activeSlides = [];\n      var newHeight = 0;\n      var i;\n\n      if (typeof speed === 'number') {\n        swiper.setTransition(speed);\n      } else if (speed === true) {\n        swiper.setTransition(swiper.params.speed);\n      } // Find slides currently in view\n\n\n      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n        if (swiper.params.centeredSlides) {\n          activeSlides.push.apply(activeSlides, swiper.visibleSlides);\n        } else {\n          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n            var index = swiper.activeIndex + i;\n\n            if (index > swiper.slides.length) {\n              break;\n            }\n\n            activeSlides.push(swiper.slides.eq(index)[0]);\n          }\n        }\n      } else {\n        activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n      } // Find new height from highest slide in view\n\n\n      for (i = 0; i < activeSlides.length; i += 1) {\n        if (typeof activeSlides[i] !== 'undefined') {\n          var height = activeSlides[i].offsetHeight;\n          newHeight = height > newHeight ? height : newHeight;\n        }\n      } // Update Height\n\n\n      if (newHeight) {\n        swiper.$wrapperEl.css('height', newHeight + \"px\");\n      }\n    }\n\n    function updateSlidesOffset() {\n      var swiper = this;\n      var slides = swiper.slides;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n      }\n    }\n\n    function updateSlidesProgress(translate) {\n      if (translate === void 0) translate = this && this.translate || 0;\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n\n      if (slides.length === 0) {\n        return;\n      }\n\n      if (typeof slides[0].swiperSlideOffset === 'undefined') {\n        swiper.updateSlidesOffset();\n      }\n\n      var offsetCenter = -translate;\n\n      if (rtl) {\n        offsetCenter = translate;\n      } // Visible Slides\n\n\n      slides.removeClass(params.slideVisibleClass);\n      swiper.visibleSlidesIndexes = [];\n      swiper.visibleSlides = [];\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var slide = slides[i];\n        var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n\n        if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n          var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n          var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n          var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n          if (isVisible) {\n            swiper.visibleSlides.push(slide);\n            swiper.visibleSlidesIndexes.push(i);\n            slides.eq(i).addClass(params.slideVisibleClass);\n          }\n        }\n\n        slide.progress = rtl ? -slideProgress : slideProgress;\n      }\n\n      swiper.visibleSlides = $(swiper.visibleSlides);\n    }\n\n    function updateProgress(translate) {\n      var swiper = this;\n\n      if (typeof translate === 'undefined') {\n        var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n      }\n\n      var params = swiper.params;\n      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      var progress = swiper.progress;\n      var isBeginning = swiper.isBeginning;\n      var isEnd = swiper.isEnd;\n      var wasBeginning = isBeginning;\n      var wasEnd = isEnd;\n\n      if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n      } else {\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\n        isBeginning = progress <= 0;\n        isEnd = progress >= 1;\n      }\n\n      Utils.extend(swiper, {\n        progress: progress,\n        isBeginning: isBeginning,\n        isEnd: isEnd\n      });\n\n      if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n        swiper.updateSlidesProgress(translate);\n      }\n\n      if (isBeginning && !wasBeginning) {\n        swiper.emit('reachBeginning toEdge');\n      }\n\n      if (isEnd && !wasEnd) {\n        swiper.emit('reachEnd toEdge');\n      }\n\n      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n        swiper.emit('fromEdge');\n      }\n\n      swiper.emit('progress', progress);\n    }\n\n    function updateSlidesClasses() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var activeIndex = swiper.activeIndex;\n      var realIndex = swiper.realIndex;\n      var isVirtual = swiper.virtual && params.virtual.enabled;\n      slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n      var activeSlide;\n\n      if (isVirtual) {\n        activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n      } else {\n        activeSlide = slides.eq(activeIndex);\n      } // Active classes\n\n\n      activeSlide.addClass(params.slideActiveClass);\n\n      if (params.loop) {\n        // Duplicate to all looped slides\n        if (activeSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n        } else {\n          $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n        }\n      } // Next Slide\n\n\n      var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n\n      if (params.loop && nextSlide.length === 0) {\n        nextSlide = slides.eq(0);\n        nextSlide.addClass(params.slideNextClass);\n      } // Prev Slide\n\n\n      var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n\n      if (params.loop && prevSlide.length === 0) {\n        prevSlide = slides.eq(-1);\n        prevSlide.addClass(params.slidePrevClass);\n      }\n\n      if (params.loop) {\n        // Duplicate to all looped slides\n        if (nextSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n        } else {\n          $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n        }\n\n        if (prevSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n        } else {\n          $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n        }\n      }\n    }\n\n    function updateActiveIndex(newActiveIndex) {\n      var swiper = this;\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      var slidesGrid = swiper.slidesGrid;\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      var previousIndex = swiper.activeIndex;\n      var previousRealIndex = swiper.realIndex;\n      var previousSnapIndex = swiper.snapIndex;\n      var activeIndex = newActiveIndex;\n      var snapIndex;\n\n      if (typeof activeIndex === 'undefined') {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\n            if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n              activeIndex = i;\n            } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n              activeIndex = i + 1;\n            }\n          } else if (translate >= slidesGrid[i]) {\n            activeIndex = i;\n          }\n        } // Normalize slideIndex\n\n\n        if (params.normalizeSlideIndex) {\n          if (activeIndex < 0 || typeof activeIndex === 'undefined') {\n            activeIndex = 0;\n          }\n        }\n      }\n\n      if (snapGrid.indexOf(translate) >= 0) {\n        snapIndex = snapGrid.indexOf(translate);\n      } else {\n        var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n      }\n\n      if (snapIndex >= snapGrid.length) {\n        snapIndex = snapGrid.length - 1;\n      }\n\n      if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n          swiper.snapIndex = snapIndex;\n          swiper.emit('snapIndexChange');\n        }\n\n        return;\n      } // Get real index\n\n\n      var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n      Utils.extend(swiper, {\n        snapIndex: snapIndex,\n        realIndex: realIndex,\n        previousIndex: previousIndex,\n        activeIndex: activeIndex\n      });\n      swiper.emit('activeIndexChange');\n      swiper.emit('snapIndexChange');\n\n      if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n      }\n\n      if (swiper.initialized || swiper.runCallbacksOnInit) {\n        swiper.emit('slideChange');\n      }\n    }\n\n    function updateClickedSlide(e) {\n      var swiper = this;\n      var params = swiper.params;\n      var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n      var slideFound = false;\n\n      if (slide) {\n        for (var i = 0; i < swiper.slides.length; i += 1) {\n          if (swiper.slides[i] === slide) {\n            slideFound = true;\n          }\n        }\n      }\n\n      if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n        } else {\n          swiper.clickedIndex = $(slide).index();\n        }\n      } else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n      }\n\n      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n        swiper.slideToClickedSlide();\n      }\n    }\n\n    var update = {\n      updateSize: updateSize,\n      updateSlides: updateSlides,\n      updateAutoHeight: updateAutoHeight,\n      updateSlidesOffset: updateSlidesOffset,\n      updateSlidesProgress: updateSlidesProgress,\n      updateProgress: updateProgress,\n      updateSlidesClasses: updateSlidesClasses,\n      updateActiveIndex: updateActiveIndex,\n      updateClickedSlide: updateClickedSlide\n    };\n\n    function getTranslate(axis) {\n      if (axis === void 0) axis = this.isHorizontal() ? 'x' : 'y';\n      var swiper = this;\n      var params = swiper.params;\n      var rtl = swiper.rtlTranslate;\n      var translate = swiper.translate;\n      var $wrapperEl = swiper.$wrapperEl;\n\n      if (params.virtualTranslate) {\n        return rtl ? -translate : translate;\n      }\n\n      if (params.cssMode) {\n        return translate;\n      }\n\n      var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n\n      if (rtl) {\n        currentTranslate = -currentTranslate;\n      }\n\n      return currentTranslate || 0;\n    }\n\n    function setTranslate(translate, byController) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var wrapperEl = swiper.wrapperEl;\n      var progress = swiper.progress;\n      var x = 0;\n      var y = 0;\n      var z = 0;\n\n      if (swiper.isHorizontal()) {\n        x = rtl ? -translate : translate;\n      } else {\n        y = translate;\n      }\n\n      if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n      }\n\n      if (params.cssMode) {\n        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n      } else if (!params.virtualTranslate) {\n        $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n      }\n\n      swiper.previousTranslate = swiper.translate;\n      swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n      var newProgress;\n      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n      }\n\n      if (newProgress !== progress) {\n        swiper.updateProgress(translate);\n      }\n\n      swiper.emit('setTranslate', swiper.translate, byController);\n    }\n\n    function minTranslate() {\n      return -this.snapGrid[0];\n    }\n\n    function maxTranslate() {\n      return -this.snapGrid[this.snapGrid.length - 1];\n    }\n\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n      var obj;\n      if (translate === void 0) translate = 0;\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      if (translateBounds === void 0) translateBounds = true;\n      var swiper = this;\n      var params = swiper.params;\n      var wrapperEl = swiper.wrapperEl;\n\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n      }\n\n      var minTranslate = swiper.minTranslate();\n      var maxTranslate = swiper.maxTranslate();\n      var newTranslate;\n\n      if (translateBounds && translate > minTranslate) {\n        newTranslate = minTranslate;\n      } else if (translateBounds && translate < maxTranslate) {\n        newTranslate = maxTranslate;\n      } else {\n        newTranslate = translate;\n      } // Update progress\n\n\n      swiper.updateProgress(newTranslate);\n\n      if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n\n        if (speed === 0) {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        } else {\n          // eslint-disable-next-line\n          if (wrapperEl.scrollTo) {\n            wrapperEl.scrollTo((obj = {}, obj[isH ? 'left' : 'top'] = -newTranslate, obj.behavior = 'smooth', obj));\n          } else {\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n          }\n        }\n\n        return true;\n      }\n\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(newTranslate);\n\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionEnd');\n        }\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(newTranslate);\n\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionStart');\n        }\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n\n          if (!swiper.onTranslateToWrapperTransitionEnd) {\n            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) {\n                return;\n              }\n\n              if (e.target !== this) {\n                return;\n              }\n\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.onTranslateToWrapperTransitionEnd = null;\n              delete swiper.onTranslateToWrapperTransitionEnd;\n\n              if (runCallbacks) {\n                swiper.emit('transitionEnd');\n              }\n            };\n          }\n\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n        }\n      }\n\n      return true;\n    }\n\n    var translate = {\n      getTranslate: getTranslate,\n      setTranslate: setTranslate,\n      minTranslate: minTranslate,\n      maxTranslate: maxTranslate,\n      translateTo: translateTo\n    };\n\n    function setTransition(duration, byController) {\n      var swiper = this;\n\n      if (!swiper.params.cssMode) {\n        swiper.$wrapperEl.transition(duration);\n      }\n\n      swiper.emit('setTransition', duration, byController);\n    }\n\n    function transitionStart(runCallbacks, direction) {\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var params = swiper.params;\n      var previousIndex = swiper.previousIndex;\n\n      if (params.cssMode) {\n        return;\n      }\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      var dir = direction;\n\n      if (!dir) {\n        if (activeIndex > previousIndex) {\n          dir = 'next';\n        } else if (activeIndex < previousIndex) {\n          dir = 'prev';\n        } else {\n          dir = 'reset';\n        }\n      }\n\n      swiper.emit('transitionStart');\n\n      if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n          swiper.emit('slideResetTransitionStart');\n          return;\n        }\n\n        swiper.emit('slideChangeTransitionStart');\n\n        if (dir === 'next') {\n          swiper.emit('slideNextTransitionStart');\n        } else {\n          swiper.emit('slidePrevTransitionStart');\n        }\n      }\n    }\n\n    function transitionEnd$1(runCallbacks, direction) {\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var previousIndex = swiper.previousIndex;\n      var params = swiper.params;\n      swiper.animating = false;\n\n      if (params.cssMode) {\n        return;\n      }\n\n      swiper.setTransition(0);\n      var dir = direction;\n\n      if (!dir) {\n        if (activeIndex > previousIndex) {\n          dir = 'next';\n        } else if (activeIndex < previousIndex) {\n          dir = 'prev';\n        } else {\n          dir = 'reset';\n        }\n      }\n\n      swiper.emit('transitionEnd');\n\n      if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n          swiper.emit('slideResetTransitionEnd');\n          return;\n        }\n\n        swiper.emit('slideChangeTransitionEnd');\n\n        if (dir === 'next') {\n          swiper.emit('slideNextTransitionEnd');\n        } else {\n          swiper.emit('slidePrevTransitionEnd');\n        }\n      }\n    }\n\n    var transition$1 = {\n      setTransition: setTransition,\n      transitionStart: transitionStart,\n      transitionEnd: transitionEnd$1\n    };\n\n    function slideTo(index, speed, runCallbacks, internal) {\n      var obj;\n      if (index === void 0) index = 0;\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var slideIndex = index;\n\n      if (slideIndex < 0) {\n        slideIndex = 0;\n      }\n\n      var params = swiper.params;\n      var snapGrid = swiper.snapGrid;\n      var slidesGrid = swiper.slidesGrid;\n      var previousIndex = swiper.previousIndex;\n      var activeIndex = swiper.activeIndex;\n      var rtl = swiper.rtlTranslate;\n      var wrapperEl = swiper.wrapperEl;\n\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n      }\n\n      var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n      var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n\n      if (snapIndex >= snapGrid.length) {\n        snapIndex = snapGrid.length - 1;\n      }\n\n      if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n        swiper.emit('beforeSlideChangeStart');\n      }\n\n      var translate = -snapGrid[snapIndex]; // Update progress\n\n      swiper.updateProgress(translate); // Normalize slideIndex\n\n      if (params.normalizeSlideIndex) {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n          if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n            slideIndex = i;\n          }\n        }\n      } // Directions locks\n\n\n      if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n          return false;\n        }\n\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n          if ((activeIndex || 0) !== slideIndex) {\n            return false;\n          }\n        }\n      }\n\n      var direction;\n\n      if (slideIndex > activeIndex) {\n        direction = 'next';\n      } else if (slideIndex < activeIndex) {\n        direction = 'prev';\n      } else {\n        direction = 'reset';\n      } // Update Index\n\n\n      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n        swiper.updateActiveIndex(slideIndex); // Update Height\n\n        if (params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n\n        swiper.updateSlidesClasses();\n\n        if (params.effect !== 'slide') {\n          swiper.setTranslate(translate);\n        }\n\n        if (direction !== 'reset') {\n          swiper.transitionStart(runCallbacks, direction);\n          swiper.transitionEnd(runCallbacks, direction);\n        }\n\n        return false;\n      }\n\n      if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n\n        if (speed === 0) {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n        } else {\n          // eslint-disable-next-line\n          if (wrapperEl.scrollTo) {\n            wrapperEl.scrollTo((obj = {}, obj[isH ? 'left' : 'top'] = -translate, obj.behavior = 'smooth', obj));\n          } else {\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n          }\n        }\n\n        return true;\n      }\n\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n\n          if (!swiper.onSlideToWrapperTransitionEnd) {\n            swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) {\n                return;\n              }\n\n              if (e.target !== this) {\n                return;\n              }\n\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n              swiper.onSlideToWrapperTransitionEnd = null;\n              delete swiper.onSlideToWrapperTransitionEnd;\n              swiper.transitionEnd(runCallbacks, direction);\n            };\n          }\n\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        }\n      }\n\n      return true;\n    }\n\n    function slideToLoop(index, speed, runCallbacks, internal) {\n      if (index === void 0) index = 0;\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var newIndex = index;\n\n      if (swiper.params.loop) {\n        newIndex += swiper.loopedSlides;\n      }\n\n      return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */\n\n\n    function slideNext(speed, runCallbacks, internal) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var params = swiper.params;\n      var animating = swiper.animating;\n      var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n\n      if (params.loop) {\n        if (animating) {\n          return false;\n        }\n\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      }\n\n      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */\n\n\n    function slidePrev(speed, runCallbacks, internal) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var params = swiper.params;\n      var animating = swiper.animating;\n      var snapGrid = swiper.snapGrid;\n      var slidesGrid = swiper.slidesGrid;\n      var rtlTranslate = swiper.rtlTranslate;\n\n      if (params.loop) {\n        if (animating) {\n          return false;\n        }\n\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      }\n\n      var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n      function normalize(val) {\n        if (val < 0) {\n          return -Math.floor(Math.abs(val));\n        }\n\n        return Math.floor(val);\n      }\n\n      var normalizedTranslate = normalize(translate);\n      var normalizedSnapGrid = snapGrid.map(function (val) {\n        return normalize(val);\n      });\n      var normalizedSlidesGrid = slidesGrid.map(function (val) {\n        return normalize(val);\n      });\n      var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n      var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n      if (typeof prevSnap === 'undefined' && params.cssMode) {\n        snapGrid.forEach(function (snap) {\n          if (!prevSnap && normalizedTranslate >= snap) {\n            prevSnap = snap;\n          }\n        });\n      }\n\n      var prevIndex;\n\n      if (typeof prevSnap !== 'undefined') {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n\n        if (prevIndex < 0) {\n          prevIndex = swiper.activeIndex - 1;\n        }\n      }\n\n      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */\n\n\n    function slideReset(speed, runCallbacks, internal) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n    }\n    /* eslint no-unused-vars: \"off\" */\n\n\n    function slideToClosest(speed, runCallbacks, internal, threshold) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      if (threshold === void 0) threshold = 0.5;\n      var swiper = this;\n      var index = swiper.activeIndex;\n      var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n      var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      if (translate >= swiper.snapGrid[snapIndex]) {\n        // The current translate is on or after the current snap index, so the choice\n        // is between the current index and the one after it.\n        var currentSnap = swiper.snapGrid[snapIndex];\n        var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n          index += swiper.params.slidesPerGroup;\n        }\n      } else {\n        // The current translate is before the current snap index, so the choice\n        // is between the current index and the one before it.\n        var prevSnap = swiper.snapGrid[snapIndex - 1];\n        var currentSnap$1 = swiper.snapGrid[snapIndex];\n\n        if (translate - prevSnap <= (currentSnap$1 - prevSnap) * threshold) {\n          index -= swiper.params.slidesPerGroup;\n        }\n      }\n\n      index = Math.max(index, 0);\n      index = Math.min(index, swiper.slidesGrid.length - 1);\n      return swiper.slideTo(index, speed, runCallbacks, internal);\n    }\n\n    function slideToClickedSlide() {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n      var slideToIndex = swiper.clickedIndex;\n      var realIndex;\n\n      if (params.loop) {\n        if (swiper.animating) {\n          return;\n        }\n\n        realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n        if (params.centeredSlides) {\n          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n            swiper.loopFix();\n            slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n            Utils.nextTick(function () {\n              swiper.slideTo(slideToIndex);\n            });\n          } else {\n            swiper.slideTo(slideToIndex);\n          }\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    }\n\n    var slide = {\n      slideTo: slideTo,\n      slideToLoop: slideToLoop,\n      slideNext: slideNext,\n      slidePrev: slidePrev,\n      slideReset: slideReset,\n      slideToClosest: slideToClosest,\n      slideToClickedSlide: slideToClickedSlide\n    };\n\n    function loopCreate() {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\n\n      $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n      var slides = $wrapperEl.children(\".\" + params.slideClass);\n\n      if (params.loopFillGroupWithBlank) {\n        var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n        if (blankSlidesNum !== params.slidesPerGroup) {\n          for (var i = 0; i < blankSlidesNum; i += 1) {\n            var blankNode = $(doc.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n            $wrapperEl.append(blankNode);\n          }\n\n          slides = $wrapperEl.children(\".\" + params.slideClass);\n        }\n      }\n\n      if (params.slidesPerView === 'auto' && !params.loopedSlides) {\n        params.loopedSlides = slides.length;\n      }\n\n      swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n      swiper.loopedSlides += params.loopAdditionalSlides;\n\n      if (swiper.loopedSlides > slides.length) {\n        swiper.loopedSlides = slides.length;\n      }\n\n      var prependSlides = [];\n      var appendSlides = [];\n      slides.each(function (index, el) {\n        var slide = $(el);\n\n        if (index < swiper.loopedSlides) {\n          appendSlides.push(el);\n        }\n\n        if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n          prependSlides.push(el);\n        }\n\n        slide.attr('data-swiper-slide-index', index);\n      });\n\n      for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n        $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n      }\n\n      for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n        $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n      }\n    }\n\n    function loopFix() {\n      var swiper = this;\n      swiper.emit('beforeLoopFix');\n      var activeIndex = swiper.activeIndex;\n      var slides = swiper.slides;\n      var loopedSlides = swiper.loopedSlides;\n      var allowSlidePrev = swiper.allowSlidePrev;\n      var allowSlideNext = swiper.allowSlideNext;\n      var snapGrid = swiper.snapGrid;\n      var rtl = swiper.rtlTranslate;\n      var newIndex;\n      swiper.allowSlidePrev = true;\n      swiper.allowSlideNext = true;\n      var snapTranslate = -snapGrid[activeIndex];\n      var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n      if (activeIndex < loopedSlides) {\n        newIndex = slides.length - loopedSlides * 3 + activeIndex;\n        newIndex += loopedSlides;\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n        if (slideChanged && diff !== 0) {\n          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n      } else if (activeIndex >= slides.length - loopedSlides) {\n        // Fix For Positive Oversliding\n        newIndex = -slides.length + activeIndex + loopedSlides;\n        newIndex += loopedSlides;\n        var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n\n        if (slideChanged$1 && diff !== 0) {\n          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n      }\n\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      swiper.emit('loopFix');\n    }\n\n    function loopDestroy() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n      slides.removeAttr('data-swiper-slide-index');\n    }\n\n    var loop = {\n      loopCreate: loopCreate,\n      loopFix: loopFix,\n      loopDestroy: loopDestroy\n    };\n\n    function setGrabCursor(moving) {\n      var swiper = this;\n\n      if (Support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n        return;\n      }\n\n      var el = swiper.el;\n      el.style.cursor = 'move';\n      el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n      el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n      el.style.cursor = moving ? 'grabbing' : 'grab';\n    }\n\n    function unsetGrabCursor() {\n      var swiper = this;\n\n      if (Support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n        return;\n      }\n\n      swiper.el.style.cursor = '';\n    }\n\n    var grabCursor = {\n      setGrabCursor: setGrabCursor,\n      unsetGrabCursor: unsetGrabCursor\n    };\n\n    function appendSlide(slides) {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var params = swiper.params;\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      if (_typeof(slides) === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) {\n            $wrapperEl.append(slides[i]);\n          }\n        }\n      } else {\n        $wrapperEl.append(slides);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n    }\n\n    function prependSlide(slides) {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var activeIndex = swiper.activeIndex;\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      var newActiveIndex = activeIndex + 1;\n\n      if (_typeof(slides) === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) {\n            $wrapperEl.prepend(slides[i]);\n          }\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n      } else {\n        $wrapperEl.prepend(slides);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n\n    function addSlide(index, slides) {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var params = swiper.params;\n      var activeIndex = swiper.activeIndex;\n      var activeIndexBuffer = activeIndex;\n\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n\n      var baseLength = swiper.slides.length;\n\n      if (index <= 0) {\n        swiper.prependSlide(slides);\n        return;\n      }\n\n      if (index >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n      }\n\n      var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n      var slidesBuffer = [];\n\n      for (var i = baseLength - 1; i >= index; i -= 1) {\n        var currentSlide = swiper.slides.eq(i);\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n      }\n\n      if (_typeof(slides) === 'object' && 'length' in slides) {\n        for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n          if (slides[i$1]) {\n            $wrapperEl.append(slides[i$1]);\n          }\n        }\n\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n      } else {\n        $wrapperEl.append(slides);\n      }\n\n      for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n        $wrapperEl.append(slidesBuffer[i$2]);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeSlide(slidesIndexes) {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var activeIndex = swiper.activeIndex;\n      var activeIndexBuffer = activeIndex;\n\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n\n      var newActiveIndex = activeIndexBuffer;\n      var indexToRemove;\n\n      if (_typeof(slidesIndexes) === 'object' && 'length' in slidesIndexes) {\n        for (var i = 0; i < slidesIndexes.length; i += 1) {\n          indexToRemove = slidesIndexes[i];\n\n          if (swiper.slides[indexToRemove]) {\n            swiper.slides.eq(indexToRemove).remove();\n          }\n\n          if (indexToRemove < newActiveIndex) {\n            newActiveIndex -= 1;\n          }\n        }\n\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      } else {\n        indexToRemove = slidesIndexes;\n\n        if (swiper.slides[indexToRemove]) {\n          swiper.slides.eq(indexToRemove).remove();\n        }\n\n        if (indexToRemove < newActiveIndex) {\n          newActiveIndex -= 1;\n        }\n\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      }\n\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeAllSlides() {\n      var swiper = this;\n      var slidesIndexes = [];\n\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        slidesIndexes.push(i);\n      }\n\n      swiper.removeSlide(slidesIndexes);\n    }\n\n    var manipulation = {\n      appendSlide: appendSlide,\n      prependSlide: prependSlide,\n      addSlide: addSlide,\n      removeSlide: removeSlide,\n      removeAllSlides: removeAllSlides\n    };\n\n    var Device = function Device() {\n      var platform = win.navigator.platform;\n      var ua = win.navigator.userAgent;\n      var device = {\n        ios: false,\n        android: false,\n        androidChrome: false,\n        desktop: false,\n        iphone: false,\n        ipod: false,\n        ipad: false,\n        edge: false,\n        ie: false,\n        firefox: false,\n        macos: false,\n        windows: false,\n        cordova: !!(win.cordova || win.phonegap),\n        phonegap: !!(win.cordova || win.phonegap),\n        electron: false\n      };\n      var screenWidth = win.screen.width;\n      var screenHeight = win.screen.height;\n      var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n      var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n      var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n      var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n      var ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n      var edge = ua.indexOf('Edge/') >= 0;\n      var firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n      var windows = platform === 'Win32';\n      var electron = ua.toLowerCase().indexOf('electron') >= 0;\n      var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n      if (!ipad && macos && Support.touch && (screenWidth === 1024 && screenHeight === 1366 || // Pro 12.9\n      screenWidth === 834 && screenHeight === 1194 // Pro 11\n      || screenWidth === 834 && screenHeight === 1112 // Pro 10.5\n      || screenWidth === 768 && screenHeight === 1024 // other\n      )) {\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\n        macos = false;\n      }\n\n      device.ie = ie;\n      device.edge = edge;\n      device.firefox = firefox; // Android\n\n      if (android && !windows) {\n        device.os = 'android';\n        device.osVersion = android[2];\n        device.android = true;\n        device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n      }\n\n      if (ipad || iphone || ipod) {\n        device.os = 'ios';\n        device.ios = true;\n      } // iOS\n\n\n      if (iphone && !ipod) {\n        device.osVersion = iphone[2].replace(/_/g, '.');\n        device.iphone = true;\n      }\n\n      if (ipad) {\n        device.osVersion = ipad[2].replace(/_/g, '.');\n        device.ipad = true;\n      }\n\n      if (ipod) {\n        device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        device.ipod = true;\n      } // iOS 8+ changed UA\n\n\n      if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n        if (device.osVersion.split('.')[0] === '10') {\n          device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n        }\n      } // Webview\n\n\n      device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || win.navigator.standalone)) || win.matchMedia && win.matchMedia('(display-mode: standalone)').matches;\n      device.webview = device.webView;\n      device.standalone = device.webView; // Desktop\n\n      device.desktop = !(device.ios || device.android) || electron;\n\n      if (device.desktop) {\n        device.electron = electron;\n        device.macos = macos;\n        device.windows = windows;\n\n        if (device.macos) {\n          device.os = 'macos';\n        }\n\n        if (device.windows) {\n          device.os = 'windows';\n        }\n      } // Pixel Ratio\n\n\n      device.pixelRatio = win.devicePixelRatio || 1; // Export object\n\n      return device;\n    }();\n\n    function onTouchStart(event) {\n      var swiper = this;\n      var data = swiper.touchEventsData;\n      var params = swiper.params;\n      var touches = swiper.touches;\n\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return;\n      }\n\n      var e = event;\n\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n\n      var $targetEl = $(e.target);\n\n      if (params.touchEventsTarget === 'wrapper') {\n        if (!$targetEl.closest(swiper.wrapperEl).length) {\n          return;\n        }\n      }\n\n      data.isTouchEvent = e.type === 'touchstart';\n\n      if (!data.isTouchEvent && 'which' in e && e.which === 3) {\n        return;\n      }\n\n      if (!data.isTouchEvent && 'button' in e && e.button > 0) {\n        return;\n      }\n\n      if (data.isTouched && data.isMoved) {\n        return;\n      }\n\n      if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\n        swiper.allowClick = true;\n        return;\n      }\n\n      if (params.swipeHandler) {\n        if (!$targetEl.closest(params.swipeHandler)[0]) {\n          return;\n        }\n      }\n\n      touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      var startX = touches.currentX;\n      var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n      var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n      var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= win.screen.width - edgeSwipeThreshold)) {\n        return;\n      }\n\n      Utils.extend(data, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined\n      });\n      touches.startX = startX;\n      touches.startY = startY;\n      data.touchStartTime = Utils.now();\n      swiper.allowClick = true;\n      swiper.updateSize();\n      swiper.swipeDirection = undefined;\n\n      if (params.threshold > 0) {\n        data.allowThresholdMove = false;\n      }\n\n      if (e.type !== 'touchstart') {\n        var preventDefault = true;\n\n        if ($targetEl.is(data.formElements)) {\n          preventDefault = false;\n        }\n\n        if (doc.activeElement && $(doc.activeElement).is(data.formElements) && doc.activeElement !== $targetEl[0]) {\n          doc.activeElement.blur();\n        }\n\n        var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n        if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n          e.preventDefault();\n        }\n      }\n\n      swiper.emit('touchStart', e);\n    }\n\n    function onTouchMove(event) {\n      var swiper = this;\n      var data = swiper.touchEventsData;\n      var params = swiper.params;\n      var touches = swiper.touches;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n\n      if (!data.isTouched) {\n        if (data.startMoving && data.isScrolling) {\n          swiper.emit('touchMoveOpposite', e);\n        }\n\n        return;\n      }\n\n      if (data.isTouchEvent && e.type === 'mousemove') {\n        return;\n      }\n\n      var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n      var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n      var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n      if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n      }\n\n      if (!swiper.allowTouchMove) {\n        // isMoved = true;\n        swiper.allowClick = false;\n\n        if (data.isTouched) {\n          Utils.extend(touches, {\n            startX: pageX,\n            startY: pageY,\n            currentX: pageX,\n            currentY: pageY\n          });\n          data.touchStartTime = Utils.now();\n        }\n\n        return;\n      }\n\n      if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) {\n          // Vertical\n          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n            data.isTouched = false;\n            data.isMoved = false;\n            return;\n          }\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n          return;\n        }\n      }\n\n      if (data.isTouchEvent && doc.activeElement) {\n        if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n          data.isMoved = true;\n          swiper.allowClick = false;\n          return;\n        }\n      }\n\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchMove', e);\n      }\n\n      if (e.targetTouches && e.targetTouches.length > 1) {\n        return;\n      }\n\n      touches.currentX = pageX;\n      touches.currentY = pageY;\n      var diffX = touches.currentX - touches.startX;\n      var diffY = touches.currentY - touches.startY;\n\n      if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) {\n        return;\n      }\n\n      if (typeof data.isScrolling === 'undefined') {\n        var touchAngle;\n\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n          data.isScrolling = false;\n        } else {\n          // eslint-disable-next-line\n          if (diffX * diffX + diffY * diffY >= 25) {\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n          }\n        }\n      }\n\n      if (data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      if (typeof data.startMoving === 'undefined') {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n          data.startMoving = true;\n        }\n      }\n\n      if (data.isScrolling) {\n        data.isTouched = false;\n        return;\n      }\n\n      if (!data.startMoving) {\n        return;\n      }\n\n      swiper.allowClick = false;\n\n      if (!params.cssMode) {\n        e.preventDefault();\n      }\n\n      if (params.touchMoveStopPropagation && !params.nested) {\n        e.stopPropagation();\n      }\n\n      if (!data.isMoved) {\n        if (params.loop) {\n          swiper.loopFix();\n        }\n\n        data.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n\n        if (swiper.animating) {\n          swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n        }\n\n        data.allowMomentumBounce = false; // Grab Cursor\n\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n          swiper.setGrabCursor(true);\n        }\n\n        swiper.emit('sliderFirstMove', e);\n      }\n\n      swiper.emit('sliderMove', e);\n      data.isMoved = true;\n      var diff = swiper.isHorizontal() ? diffX : diffY;\n      touches.diff = diff;\n      diff *= params.touchRatio;\n\n      if (rtl) {\n        diff = -diff;\n      }\n\n      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n      data.currentTranslate = diff + data.startTranslate;\n      var disableParentSwiper = true;\n      var resistanceRatio = params.resistanceRatio;\n\n      if (params.touchReleaseOnEdges) {\n        resistanceRatio = 0;\n      }\n\n      if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n        disableParentSwiper = false;\n\n        if (params.resistance) {\n          data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n        }\n      } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n        disableParentSwiper = false;\n\n        if (params.resistance) {\n          data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n        }\n      }\n\n      if (disableParentSwiper) {\n        e.preventedByNestedSwiper = true;\n      } // Directions locks\n\n\n      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n\n      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      } // Threshold\n\n\n      if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n          if (!data.allowThresholdMove) {\n            data.allowThresholdMove = true;\n            touches.startX = touches.currentX;\n            touches.startY = touches.currentY;\n            data.currentTranslate = data.startTranslate;\n            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n            return;\n          }\n        } else {\n          data.currentTranslate = data.startTranslate;\n          return;\n        }\n      }\n\n      if (!params.followFinger || params.cssMode) {\n        return;\n      } // Update active index in free mode\n\n\n      if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      if (params.freeMode) {\n        // Velocity\n        if (data.velocities.length === 0) {\n          data.velocities.push({\n            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n            time: data.touchStartTime\n          });\n        }\n\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n          time: Utils.now()\n        });\n      } // Update progress\n\n\n      swiper.updateProgress(data.currentTranslate); // Update translate\n\n      swiper.setTranslate(data.currentTranslate);\n    }\n\n    function onTouchEnd(event) {\n      var swiper = this;\n      var data = swiper.touchEventsData;\n      var params = swiper.params;\n      var touches = swiper.touches;\n      var rtl = swiper.rtlTranslate;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesGrid = swiper.slidesGrid;\n      var snapGrid = swiper.snapGrid;\n      var e = event;\n\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchEnd', e);\n      }\n\n      data.allowTouchCallbacks = false;\n\n      if (!data.isTouched) {\n        if (data.isMoved && params.grabCursor) {\n          swiper.setGrabCursor(false);\n        }\n\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      } // Return Grab Cursor\n\n\n      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(false);\n      } // Time diff\n\n\n      var touchEndTime = Utils.now();\n      var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n      if (swiper.allowClick) {\n        swiper.updateClickedSlide(e);\n        swiper.emit('tap click', e);\n\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n          swiper.emit('doubleTap doubleClick', e);\n        }\n      }\n\n      data.lastClickTime = Utils.now();\n      Utils.nextTick(function () {\n        if (!swiper.destroyed) {\n          swiper.allowClick = true;\n        }\n      });\n\n      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      var currentPos;\n\n      if (params.followFinger) {\n        currentPos = rtl ? swiper.translate : -swiper.translate;\n      } else {\n        currentPos = -data.currentTranslate;\n      }\n\n      if (params.cssMode) {\n        return;\n      }\n\n      if (params.freeMode) {\n        if (currentPos < -swiper.minTranslate()) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n\n        if (currentPos > -swiper.maxTranslate()) {\n          if (swiper.slides.length < snapGrid.length) {\n            swiper.slideTo(snapGrid.length - 1);\n          } else {\n            swiper.slideTo(swiper.slides.length - 1);\n          }\n\n          return;\n        }\n\n        if (params.freeModeMomentum) {\n          if (data.velocities.length > 1) {\n            var lastMoveEvent = data.velocities.pop();\n            var velocityEvent = data.velocities.pop();\n            var distance = lastMoveEvent.position - velocityEvent.position;\n            var time = lastMoveEvent.time - velocityEvent.time;\n            swiper.velocity = distance / time;\n            swiper.velocity /= 2;\n\n            if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n              swiper.velocity = 0;\n            } // this implies that the user stopped moving a finger then released.\n            // There would be no events with distance zero, so the last event is stale.\n\n\n            if (time > 150 || Utils.now() - lastMoveEvent.time > 300) {\n              swiper.velocity = 0;\n            }\n          } else {\n            swiper.velocity = 0;\n          }\n\n          swiper.velocity *= params.freeModeMomentumVelocityRatio;\n          data.velocities.length = 0;\n          var momentumDuration = 1000 * params.freeModeMomentumRatio;\n          var momentumDistance = swiper.velocity * momentumDuration;\n          var newPosition = swiper.translate + momentumDistance;\n\n          if (rtl) {\n            newPosition = -newPosition;\n          }\n\n          var doBounce = false;\n          var afterBouncePosition;\n          var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n          var needsLoopFix;\n\n          if (newPosition < swiper.maxTranslate()) {\n            if (params.freeModeMomentumBounce) {\n              if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n                newPosition = swiper.maxTranslate() - bounceAmount;\n              }\n\n              afterBouncePosition = swiper.maxTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.maxTranslate();\n            }\n\n            if (params.loop && params.centeredSlides) {\n              needsLoopFix = true;\n            }\n          } else if (newPosition > swiper.minTranslate()) {\n            if (params.freeModeMomentumBounce) {\n              if (newPosition - swiper.minTranslate() > bounceAmount) {\n                newPosition = swiper.minTranslate() + bounceAmount;\n              }\n\n              afterBouncePosition = swiper.minTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.minTranslate();\n            }\n\n            if (params.loop && params.centeredSlides) {\n              needsLoopFix = true;\n            }\n          } else if (params.freeModeSticky) {\n            var nextSlide;\n\n            for (var j = 0; j < snapGrid.length; j += 1) {\n              if (snapGrid[j] > -newPosition) {\n                nextSlide = j;\n                break;\n              }\n            }\n\n            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n              newPosition = snapGrid[nextSlide];\n            } else {\n              newPosition = snapGrid[nextSlide - 1];\n            }\n\n            newPosition = -newPosition;\n          }\n\n          if (needsLoopFix) {\n            swiper.once('transitionEnd', function () {\n              swiper.loopFix();\n            });\n          } // Fix duration\n\n\n          if (swiper.velocity !== 0) {\n            if (rtl) {\n              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n            } else {\n              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n            }\n\n            if (params.freeModeSticky) {\n              // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n              // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n              // It's easy to see this when simulating touch with mouse events. To fix this,\n              // limit single-slide swipes to the default slide duration. This also has the\n              // nice side effect of matching slide speed if the user stopped moving before\n              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n              // For faster swipes, also apply limits (albeit higher ones).\n              var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n              var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n              if (moveDistance < currentSlideSize) {\n                momentumDuration = params.speed;\n              } else if (moveDistance < 2 * currentSlideSize) {\n                momentumDuration = params.speed * 1.5;\n              } else {\n                momentumDuration = params.speed * 2.5;\n              }\n            }\n          } else if (params.freeModeSticky) {\n            swiper.slideToClosest();\n            return;\n          }\n\n          if (params.freeModeMomentumBounce && doBounce) {\n            swiper.updateProgress(afterBouncePosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) {\n                return;\n              }\n\n              swiper.emit('momentumBounce');\n              swiper.setTransition(params.speed);\n              swiper.setTranslate(afterBouncePosition);\n              $wrapperEl.transitionEnd(function () {\n                if (!swiper || swiper.destroyed) {\n                  return;\n                }\n\n                swiper.transitionEnd();\n              });\n            });\n          } else if (swiper.velocity) {\n            swiper.updateProgress(newPosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n\n            if (!swiper.animating) {\n              swiper.animating = true;\n              $wrapperEl.transitionEnd(function () {\n                if (!swiper || swiper.destroyed) {\n                  return;\n                }\n\n                swiper.transitionEnd();\n              });\n            }\n          } else {\n            swiper.updateProgress(newPosition);\n          }\n\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n\n        return;\n      } // Find current slide\n\n\n      var stopIndex = 0;\n      var groupSize = swiper.slidesSizesGrid[0];\n\n      for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n        var increment$1 = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n        if (typeof slidesGrid[i + increment$1] !== 'undefined') {\n          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment$1]) {\n            stopIndex = i;\n            groupSize = slidesGrid[i + increment$1] - slidesGrid[i];\n          }\n        } else if (currentPos >= slidesGrid[i]) {\n          stopIndex = i;\n          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n      } // Find current slide size\n\n\n      var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n      var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n\n        if (swiper.swipeDirection === 'next') {\n          if (ratio >= params.longSwipesRatio) {\n            swiper.slideTo(stopIndex + increment);\n          } else {\n            swiper.slideTo(stopIndex);\n          }\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          if (ratio > 1 - params.longSwipesRatio) {\n            swiper.slideTo(stopIndex + increment);\n          } else {\n            swiper.slideTo(stopIndex);\n          }\n        }\n      } else {\n        // Short swipes\n        if (!params.shortSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n\n        var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n        if (!isNavButtonTarget) {\n          if (swiper.swipeDirection === 'next') {\n            swiper.slideTo(stopIndex + increment);\n          }\n\n          if (swiper.swipeDirection === 'prev') {\n            swiper.slideTo(stopIndex);\n          }\n        } else if (e.target === swiper.navigation.nextEl) {\n          swiper.slideTo(stopIndex + increment);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n    }\n\n    function onResize() {\n      var swiper = this;\n      var params = swiper.params;\n      var el = swiper.el;\n\n      if (el && el.offsetWidth === 0) {\n        return;\n      } // Breakpoints\n\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Save locks\n\n\n      var allowSlideNext = swiper.allowSlideNext;\n      var allowSlidePrev = swiper.allowSlidePrev;\n      var snapGrid = swiper.snapGrid; // Disable locks on resize\n\n      swiper.allowSlideNext = true;\n      swiper.allowSlidePrev = true;\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateSlidesClasses();\n\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.run();\n      } // Return locks after resize\n\n\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n\n      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n    }\n\n    function onClick(e) {\n      var swiper = this;\n\n      if (!swiper.allowClick) {\n        if (swiper.params.preventClicks) {\n          e.preventDefault();\n        }\n\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }\n      }\n    }\n\n    function onScroll() {\n      var swiper = this;\n      var wrapperEl = swiper.wrapperEl;\n      swiper.previousTranslate = swiper.translate;\n      swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop; // eslint-disable-next-line\n\n      if (swiper.translate === -0) {\n        swiper.translate = 0;\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n      var newProgress;\n      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n      }\n\n      if (newProgress !== swiper.progress) {\n        swiper.updateProgress(swiper.translate);\n      }\n\n      swiper.emit('setTranslate', swiper.translate, false);\n    }\n\n    var dummyEventAttached = false;\n\n    function dummyEventListener() {}\n\n    function attachEvents() {\n      var swiper = this;\n      var params = swiper.params;\n      var touchEvents = swiper.touchEvents;\n      var el = swiper.el;\n      var wrapperEl = swiper.wrapperEl;\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n      if (params.cssMode) {\n        swiper.onScroll = onScroll.bind(swiper);\n      }\n\n      swiper.onClick = onClick.bind(swiper);\n      var capture = !!params.nested; // Touch Events\n\n      if (!Support.touch && Support.pointerEvents) {\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? {\n            passive: true,\n            capture: false\n          } : false;\n          el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? {\n            passive: false,\n            capture: capture\n          } : capture);\n          el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n          if (touchEvents.cancel) {\n            el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n          }\n\n          if (!dummyEventAttached) {\n            doc.addEventListener('touchstart', dummyEventListener);\n            dummyEventAttached = true;\n          }\n        }\n\n        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {\n          el.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      } // Prevent Links Clicks\n\n\n      if (params.preventClicks || params.preventClicksPropagation) {\n        el.addEventListener('click', swiper.onClick, true);\n      }\n\n      if (params.cssMode) {\n        wrapperEl.addEventListener('scroll', swiper.onScroll);\n      } // Resize handler\n\n\n      if (params.updateOnWindowResize) {\n        swiper.on(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n      } else {\n        swiper.on('observerUpdate', onResize, true);\n      }\n    }\n\n    function detachEvents() {\n      var swiper = this;\n      var params = swiper.params;\n      var touchEvents = swiper.touchEvents;\n      var el = swiper.el;\n      var wrapperEl = swiper.wrapperEl;\n      var capture = !!params.nested; // Touch Events\n\n      if (!Support.touch && Support.pointerEvents) {\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? {\n            passive: true,\n            capture: false\n          } : false;\n          el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n          if (touchEvents.cancel) {\n            el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n          }\n        }\n\n        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {\n          el.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      } // Prevent Links Clicks\n\n\n      if (params.preventClicks || params.preventClicksPropagation) {\n        el.removeEventListener('click', swiper.onClick, true);\n      }\n\n      if (params.cssMode) {\n        wrapperEl.removeEventListener('scroll', swiper.onScroll);\n      } // Resize handler\n\n\n      swiper.off(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);\n    }\n\n    var events = {\n      attachEvents: attachEvents,\n      detachEvents: detachEvents\n    };\n\n    function setBreakpoint() {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var initialized = swiper.initialized;\n      var loopedSlides = swiper.loopedSlides;\n      if (loopedSlides === void 0) loopedSlides = 0;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var breakpoints = params.breakpoints;\n\n      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) {\n        return;\n      } // Get breakpoint for window width and update parameters\n\n\n      var breakpoint = swiper.getBreakpoint(breakpoints);\n\n      if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n        var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n        if (breakpointOnlyParams) {\n          ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n            var paramValue = breakpointOnlyParams[param];\n\n            if (typeof paramValue === 'undefined') {\n              return;\n            }\n\n            if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n              breakpointOnlyParams[param] = 'auto';\n            } else if (param === 'slidesPerView') {\n              breakpointOnlyParams[param] = parseFloat(paramValue);\n            } else {\n              breakpointOnlyParams[param] = parseInt(paramValue, 10);\n            }\n          });\n        }\n\n        var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n        var wasMultiRow = params.slidesPerColumn > 1;\n        var isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n        if (wasMultiRow && !isMultiRow) {\n          $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n        } else if (!wasMultiRow && isMultiRow) {\n          $el.addClass(params.containerModifierClass + \"multirow\");\n\n          if (breakpointParams.slidesPerColumnFill === 'column') {\n            $el.addClass(params.containerModifierClass + \"multirow-column\");\n          }\n        }\n\n        var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n        var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n        if (directionChanged && initialized) {\n          swiper.changeDirection();\n        }\n\n        Utils.extend(swiper.params, breakpointParams);\n        Utils.extend(swiper, {\n          allowTouchMove: swiper.params.allowTouchMove,\n          allowSlideNext: swiper.params.allowSlideNext,\n          allowSlidePrev: swiper.params.allowSlidePrev\n        });\n        swiper.currentBreakpoint = breakpoint;\n\n        if (needsReLoop && initialized) {\n          swiper.loopDestroy();\n          swiper.loopCreate();\n          swiper.updateSlides();\n          swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n        }\n\n        swiper.emit('breakpoint', breakpointParams);\n      }\n    }\n\n    function getBreakpoint(breakpoints) {\n      // Get breakpoint for window width\n      if (!breakpoints) {\n        return undefined;\n      }\n\n      var breakpoint = false;\n      var points = Object.keys(breakpoints).map(function (point) {\n        if (typeof point === 'string' && point.indexOf('@') === 0) {\n          var minRatio = parseFloat(point.substr(1));\n          var value = win.innerHeight * minRatio;\n          return {\n            value: value,\n            point: point\n          };\n        }\n\n        return {\n          value: point,\n          point: point\n        };\n      });\n      points.sort(function (a, b) {\n        return parseInt(a.value, 10) - parseInt(b.value, 10);\n      });\n\n      for (var i = 0; i < points.length; i += 1) {\n        var ref = points[i];\n        var point = ref.point;\n        var value = ref.value;\n\n        if (value <= win.innerWidth) {\n          breakpoint = point;\n        }\n      }\n\n      return breakpoint || 'max';\n    }\n\n    var breakpoints = {\n      setBreakpoint: setBreakpoint,\n      getBreakpoint: getBreakpoint\n    };\n\n    function addClasses() {\n      var swiper = this;\n      var classNames = swiper.classNames;\n      var params = swiper.params;\n      var rtl = swiper.rtl;\n      var $el = swiper.$el;\n      var suffixes = [];\n      suffixes.push('initialized');\n      suffixes.push(params.direction);\n\n      if (params.freeMode) {\n        suffixes.push('free-mode');\n      }\n\n      if (params.autoHeight) {\n        suffixes.push('autoheight');\n      }\n\n      if (rtl) {\n        suffixes.push('rtl');\n      }\n\n      if (params.slidesPerColumn > 1) {\n        suffixes.push('multirow');\n\n        if (params.slidesPerColumnFill === 'column') {\n          suffixes.push('multirow-column');\n        }\n      }\n\n      if (Device.android) {\n        suffixes.push('android');\n      }\n\n      if (Device.ios) {\n        suffixes.push('ios');\n      }\n\n      if (params.cssMode) {\n        suffixes.push('css-mode');\n      }\n\n      suffixes.forEach(function (suffix) {\n        classNames.push(params.containerModifierClass + suffix);\n      });\n      $el.addClass(classNames.join(' '));\n    }\n\n    function removeClasses() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var classNames = swiper.classNames;\n      $el.removeClass(classNames.join(' '));\n    }\n\n    var classes = {\n      addClasses: addClasses,\n      removeClasses: removeClasses\n    };\n\n    function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n      var image;\n\n      function onReady() {\n        if (callback) {\n          callback();\n        }\n      }\n\n      if (!imageEl.complete || !checkForComplete) {\n        if (src) {\n          image = new win.Image();\n          image.onload = onReady;\n          image.onerror = onReady;\n\n          if (sizes) {\n            image.sizes = sizes;\n          }\n\n          if (srcset) {\n            image.srcset = srcset;\n          }\n\n          if (src) {\n            image.src = src;\n          }\n        } else {\n          onReady();\n        }\n      } else {\n        // image already loaded...\n        onReady();\n      }\n    }\n\n    function preloadImages() {\n      var swiper = this;\n      swiper.imagesToLoad = swiper.$el.find('img');\n\n      function onReady() {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) {\n          return;\n        }\n\n        if (swiper.imagesLoaded !== undefined) {\n          swiper.imagesLoaded += 1;\n        }\n\n        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n          if (swiper.params.updateOnImagesReady) {\n            swiper.update();\n          }\n\n          swiper.emit('imagesReady');\n        }\n      }\n\n      for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n        var imageEl = swiper.imagesToLoad[i];\n        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n      }\n    }\n\n    var images = {\n      loadImage: loadImage,\n      preloadImages: preloadImages\n    };\n\n    function checkOverflow() {\n      var swiper = this;\n      var params = swiper.params;\n      var wasLocked = swiper.isLocked;\n      var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n\n      if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n        swiper.isLocked = lastSlidePosition <= swiper.size;\n      } else {\n        swiper.isLocked = swiper.snapGrid.length === 1;\n      }\n\n      swiper.allowSlideNext = !swiper.isLocked;\n      swiper.allowSlidePrev = !swiper.isLocked; // events\n\n      if (wasLocked !== swiper.isLocked) {\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n      }\n\n      if (wasLocked && wasLocked !== swiper.isLocked) {\n        swiper.isEnd = false;\n        swiper.navigation.update();\n      }\n    }\n\n    var checkOverflow$1 = {\n      checkOverflow: checkOverflow\n    };\n    var defaults = {\n      init: true,\n      direction: 'horizontal',\n      touchEventsTarget: 'container',\n      initialSlide: 0,\n      speed: 300,\n      cssMode: false,\n      updateOnWindowResize: true,\n      //\n      preventInteractionOnTransition: false,\n      // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n      edgeSwipeDetection: false,\n      edgeSwipeThreshold: 20,\n      // Free mode\n      freeMode: false,\n      freeModeMomentum: true,\n      freeModeMomentumRatio: 1,\n      freeModeMomentumBounce: true,\n      freeModeMomentumBounceRatio: 1,\n      freeModeMomentumVelocityRatio: 1,\n      freeModeSticky: false,\n      freeModeMinimumVelocity: 0.02,\n      // Autoheight\n      autoHeight: false,\n      // Set wrapper width\n      setWrapperSize: false,\n      // Virtual Translate\n      virtualTranslate: false,\n      // Effects\n      effect: 'slide',\n      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n      // Breakpoints\n      breakpoints: undefined,\n      // Slides grid\n      spaceBetween: 0,\n      slidesPerView: 1,\n      slidesPerColumn: 1,\n      slidesPerColumnFill: 'column',\n      slidesPerGroup: 1,\n      slidesPerGroupSkip: 0,\n      centeredSlides: false,\n      centeredSlidesBounds: false,\n      slidesOffsetBefore: 0,\n      // in px\n      slidesOffsetAfter: 0,\n      // in px\n      normalizeSlideIndex: true,\n      centerInsufficientSlides: false,\n      // Disable swiper and hide navigation when container not overflow\n      watchOverflow: false,\n      // Round length\n      roundLengths: false,\n      // Touches\n      touchRatio: 1,\n      touchAngle: 45,\n      simulateTouch: true,\n      shortSwipes: true,\n      longSwipes: true,\n      longSwipesRatio: 0.5,\n      longSwipesMs: 300,\n      followFinger: true,\n      allowTouchMove: true,\n      threshold: 0,\n      touchMoveStopPropagation: false,\n      touchStartPreventDefault: true,\n      touchStartForcePreventDefault: false,\n      touchReleaseOnEdges: false,\n      // Unique Navigation Elements\n      uniqueNavElements: true,\n      // Resistance\n      resistance: true,\n      resistanceRatio: 0.85,\n      // Progress\n      watchSlidesProgress: false,\n      watchSlidesVisibility: false,\n      // Cursor\n      grabCursor: false,\n      // Clicks\n      preventClicks: true,\n      preventClicksPropagation: true,\n      slideToClickedSlide: false,\n      // Images\n      preloadImages: true,\n      updateOnImagesReady: true,\n      // loop\n      loop: false,\n      loopAdditionalSlides: 0,\n      loopedSlides: null,\n      loopFillGroupWithBlank: false,\n      // Swiping/no swiping\n      allowSlidePrev: true,\n      allowSlideNext: true,\n      swipeHandler: null,\n      // '.swipe-handler',\n      noSwiping: true,\n      noSwipingClass: 'swiper-no-swiping',\n      noSwipingSelector: null,\n      // Passive Listeners\n      passiveListeners: true,\n      // NS\n      containerModifierClass: 'swiper-container-',\n      // NEW\n      slideClass: 'swiper-slide',\n      slideBlankClass: 'swiper-slide-invisible-blank',\n      slideActiveClass: 'swiper-slide-active',\n      slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n      slideVisibleClass: 'swiper-slide-visible',\n      slideDuplicateClass: 'swiper-slide-duplicate',\n      slideNextClass: 'swiper-slide-next',\n      slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n      slidePrevClass: 'swiper-slide-prev',\n      slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n      wrapperClass: 'swiper-wrapper',\n      // Callbacks\n      runCallbacksOnInit: true\n    };\n    /* eslint no-param-reassign: \"off\" */\n\n    var prototypes = {\n      update: update,\n      translate: translate,\n      transition: transition$1,\n      slide: slide,\n      loop: loop,\n      grabCursor: grabCursor,\n      manipulation: manipulation,\n      events: events,\n      breakpoints: breakpoints,\n      checkOverflow: checkOverflow$1,\n      classes: classes,\n      images: images\n    };\n    var extendedDefaults = {};\n\n    var Swiper = /*@__PURE__*/function (SwiperClass) {\n      function Swiper() {\n        var assign;\n        var args = [],\n            len = arguments.length;\n\n        while (len--) {\n          args[len] = arguments[len];\n        }\n\n        var el;\n        var params;\n\n        if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n          params = args[0];\n        } else {\n          assign = args, el = assign[0], params = assign[1];\n        }\n\n        if (!params) {\n          params = {};\n        }\n\n        params = Utils.extend({}, params);\n\n        if (el && !params.el) {\n          params.el = el;\n        }\n\n        SwiperClass.call(this, params);\n        Object.keys(prototypes).forEach(function (prototypeGroup) {\n          Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n            if (!Swiper.prototype[protoMethod]) {\n              Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n            }\n          });\n        }); // Swiper Instance\n\n        var swiper = this;\n\n        if (typeof swiper.modules === 'undefined') {\n          swiper.modules = {};\n        }\n\n        Object.keys(swiper.modules).forEach(function (moduleName) {\n          var module = swiper.modules[moduleName];\n\n          if (module.params) {\n            var moduleParamName = Object.keys(module.params)[0];\n            var moduleParams = module.params[moduleParamName];\n\n            if (_typeof(moduleParams) !== 'object' || moduleParams === null) {\n              return;\n            }\n\n            if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n              return;\n            }\n\n            if (params[moduleParamName] === true) {\n              params[moduleParamName] = {\n                enabled: true\n              };\n            }\n\n            if (_typeof(params[moduleParamName]) === 'object' && !('enabled' in params[moduleParamName])) {\n              params[moduleParamName].enabled = true;\n            }\n\n            if (!params[moduleParamName]) {\n              params[moduleParamName] = {\n                enabled: false\n              };\n            }\n          }\n        }); // Extend defaults with modules params\n\n        var swiperParams = Utils.extend({}, defaults);\n        swiper.useModulesParams(swiperParams); // Extend defaults with passed params\n\n        swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n        swiper.originalParams = Utils.extend({}, swiper.params);\n        swiper.passedParams = Utils.extend({}, params); // Save Dom lib\n\n        swiper.$ = $; // Find el\n\n        var $el = $(swiper.params.el);\n        el = $el[0];\n\n        if (!el) {\n          return undefined;\n        }\n\n        if ($el.length > 1) {\n          var swipers = [];\n          $el.each(function (index, containerEl) {\n            var newParams = Utils.extend({}, params, {\n              el: containerEl\n            });\n            swipers.push(new Swiper(newParams));\n          });\n          return swipers;\n        }\n\n        el.swiper = swiper;\n        $el.data('swiper', swiper); // Find Wrapper\n\n        var $wrapperEl;\n\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n          $wrapperEl = $(el.shadowRoot.querySelector(\".\" + swiper.params.wrapperClass)); // Children needs to return slot items\n\n          $wrapperEl.children = function (options) {\n            return $el.children(options);\n          };\n        } else {\n          $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\n        } // Extend Swiper\n\n\n        Utils.extend(swiper, {\n          $el: $el,\n          el: el,\n          $wrapperEl: $wrapperEl,\n          wrapperEl: $wrapperEl[0],\n          // Classes\n          classNames: [],\n          // Slides\n          slides: $(),\n          slidesGrid: [],\n          snapGrid: [],\n          slidesSizesGrid: [],\n          // isDirection\n          isHorizontal: function isHorizontal() {\n            return swiper.params.direction === 'horizontal';\n          },\n          isVertical: function isVertical() {\n            return swiper.params.direction === 'vertical';\n          },\n          // RTL\n          rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n          rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n          wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n          // Indexes\n          activeIndex: 0,\n          realIndex: 0,\n          //\n          isBeginning: true,\n          isEnd: false,\n          // Props\n          translate: 0,\n          previousTranslate: 0,\n          progress: 0,\n          velocity: 0,\n          animating: false,\n          // Locks\n          allowSlideNext: swiper.params.allowSlideNext,\n          allowSlidePrev: swiper.params.allowSlidePrev,\n          // Touch Events\n          touchEvents: function touchEvents() {\n            var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n            var desktop = ['mousedown', 'mousemove', 'mouseup'];\n\n            if (Support.pointerEvents) {\n              desktop = ['pointerdown', 'pointermove', 'pointerup'];\n            }\n\n            swiper.touchEventsTouch = {\n              start: touch[0],\n              move: touch[1],\n              end: touch[2],\n              cancel: touch[3]\n            };\n            swiper.touchEventsDesktop = {\n              start: desktop[0],\n              move: desktop[1],\n              end: desktop[2]\n            };\n            return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n          }(),\n          touchEventsData: {\n            isTouched: undefined,\n            isMoved: undefined,\n            allowTouchCallbacks: undefined,\n            touchStartTime: undefined,\n            isScrolling: undefined,\n            currentTranslate: undefined,\n            startTranslate: undefined,\n            allowThresholdMove: undefined,\n            // Form elements to match\n            formElements: 'input, select, option, textarea, button, video, label',\n            // Last click time\n            lastClickTime: Utils.now(),\n            clickTimeout: undefined,\n            // Velocities\n            velocities: [],\n            allowMomentumBounce: undefined,\n            isTouchEvent: undefined,\n            startMoving: undefined\n          },\n          // Clicks\n          allowClick: true,\n          // Touches\n          allowTouchMove: swiper.params.allowTouchMove,\n          touches: {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n          },\n          // Images\n          imagesToLoad: [],\n          imagesLoaded: 0\n        }); // Install Modules\n\n        swiper.useModules(); // Init\n\n        if (swiper.params.init) {\n          swiper.init();\n        } // Return app instance\n\n\n        return swiper;\n      }\n\n      if (SwiperClass) Swiper.__proto__ = SwiperClass;\n      Swiper.prototype = Object.create(SwiperClass && SwiperClass.prototype);\n      Swiper.prototype.constructor = Swiper;\n      var staticAccessors = {\n        extendedDefaults: {\n          configurable: true\n        },\n        defaults: {\n          configurable: true\n        },\n        Class: {\n          configurable: true\n        },\n        $: {\n          configurable: true\n        }\n      };\n\n      Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic() {\n        var swiper = this;\n        var params = swiper.params;\n        var slides = swiper.slides;\n        var slidesGrid = swiper.slidesGrid;\n        var swiperSize = swiper.size;\n        var activeIndex = swiper.activeIndex;\n        var spv = 1;\n\n        if (params.centeredSlides) {\n          var slideSize = slides[activeIndex].swiperSlideSize;\n          var breakLoop;\n\n          for (var i = activeIndex + 1; i < slides.length; i += 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n\n              if (slideSize > swiperSize) {\n                breakLoop = true;\n              }\n            }\n          }\n\n          for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n            if (slides[i$1] && !breakLoop) {\n              slideSize += slides[i$1].swiperSlideSize;\n              spv += 1;\n\n              if (slideSize > swiperSize) {\n                breakLoop = true;\n              }\n            }\n          }\n        } else {\n          for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n            if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n              spv += 1;\n            }\n          }\n        }\n\n        return spv;\n      };\n\n      Swiper.prototype.update = function update() {\n        var swiper = this;\n\n        if (!swiper || swiper.destroyed) {\n          return;\n        }\n\n        var snapGrid = swiper.snapGrid;\n        var params = swiper.params; // Breakpoints\n\n        if (params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        function setTranslate() {\n          var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n          var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n          swiper.setTranslate(newTranslate);\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n\n        var translated;\n\n        if (swiper.params.freeMode) {\n          setTranslate();\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        } else {\n          if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n            translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n          } else {\n            translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n          }\n\n          if (!translated) {\n            setTranslate();\n          }\n        }\n\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n          swiper.checkOverflow();\n        }\n\n        swiper.emit('update');\n      };\n\n      Swiper.prototype.changeDirection = function changeDirection(newDirection, needUpdate) {\n        if (needUpdate === void 0) needUpdate = true;\n        var swiper = this;\n        var currentDirection = swiper.params.direction;\n\n        if (!newDirection) {\n          // eslint-disable-next-line\n          newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n        }\n\n        if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n          return swiper;\n        }\n\n        swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\n        swiper.params.direction = newDirection;\n        swiper.slides.each(function (slideIndex, slideEl) {\n          if (newDirection === 'vertical') {\n            slideEl.style.width = '';\n          } else {\n            slideEl.style.height = '';\n          }\n        });\n        swiper.emit('changeDirection');\n\n        if (needUpdate) {\n          swiper.update();\n        }\n\n        return swiper;\n      };\n\n      Swiper.prototype.init = function init() {\n        var swiper = this;\n\n        if (swiper.initialized) {\n          return;\n        }\n\n        swiper.emit('beforeInit'); // Set breakpoint\n\n        if (swiper.params.breakpoints) {\n          swiper.setBreakpoint();\n        } // Add Classes\n\n\n        swiper.addClasses(); // Create loop\n\n        if (swiper.params.loop) {\n          swiper.loopCreate();\n        } // Update size\n\n\n        swiper.updateSize(); // Update slides\n\n        swiper.updateSlides();\n\n        if (swiper.params.watchOverflow) {\n          swiper.checkOverflow();\n        } // Set Grab Cursor\n\n\n        if (swiper.params.grabCursor) {\n          swiper.setGrabCursor();\n        }\n\n        if (swiper.params.preloadImages) {\n          swiper.preloadImages();\n        } // Slide To Initial Slide\n\n\n        if (swiper.params.loop) {\n          swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n        } else {\n          swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n        } // Attach events\n\n\n        swiper.attachEvents(); // Init Flag\n\n        swiper.initialized = true; // Emit\n\n        swiper.emit('init');\n      };\n\n      Swiper.prototype.destroy = function destroy(deleteInstance, cleanStyles) {\n        if (deleteInstance === void 0) deleteInstance = true;\n        if (cleanStyles === void 0) cleanStyles = true;\n        var swiper = this;\n        var params = swiper.params;\n        var $el = swiper.$el;\n        var $wrapperEl = swiper.$wrapperEl;\n        var slides = swiper.slides;\n\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n          return null;\n        }\n\n        swiper.emit('beforeDestroy'); // Init Flag\n\n        swiper.initialized = false; // Detach events\n\n        swiper.detachEvents(); // Destroy loop\n\n        if (params.loop) {\n          swiper.loopDestroy();\n        } // Cleanup styles\n\n\n        if (cleanStyles) {\n          swiper.removeClasses();\n          $el.removeAttr('style');\n          $wrapperEl.removeAttr('style');\n\n          if (slides && slides.length) {\n            slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n          }\n        }\n\n        swiper.emit('destroy'); // Detach emitter events\n\n        Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n          swiper.off(eventName);\n        });\n\n        if (deleteInstance !== false) {\n          swiper.$el[0].swiper = null;\n          swiper.$el.data('swiper', null);\n          Utils.deleteProps(swiper);\n        }\n\n        swiper.destroyed = true;\n        return null;\n      };\n\n      Swiper.extendDefaults = function extendDefaults(newDefaults) {\n        Utils.extend(extendedDefaults, newDefaults);\n      };\n\n      staticAccessors.extendedDefaults.get = function () {\n        return extendedDefaults;\n      };\n\n      staticAccessors.defaults.get = function () {\n        return defaults;\n      };\n\n      staticAccessors.Class.get = function () {\n        return SwiperClass;\n      };\n\n      staticAccessors.$.get = function () {\n        return $;\n      };\n\n      Object.defineProperties(Swiper, staticAccessors);\n      return Swiper;\n    }(SwiperClass);\n\n    var Device$1 = {\n      name: 'device',\n      proto: {\n        device: Device\n      },\n      static: {\n        device: Device\n      }\n    };\n    var Support$1 = {\n      name: 'support',\n      proto: {\n        support: Support\n      },\n      static: {\n        support: Support\n      }\n    };\n\n    var Browser = function Browser() {\n      function isSafari() {\n        var ua = win.navigator.userAgent.toLowerCase();\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n      }\n\n      return {\n        isEdge: !!win.navigator.userAgent.match(/Edge/g),\n        isSafari: isSafari(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent)\n      };\n    }();\n\n    var Browser$1 = {\n      name: 'browser',\n      proto: {\n        browser: Browser\n      },\n      static: {\n        browser: Browser\n      }\n    };\n    var Resize = {\n      name: 'resize',\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          resize: {\n            resizeHandler: function resizeHandler() {\n              if (!swiper || swiper.destroyed || !swiper.initialized) {\n                return;\n              }\n\n              swiper.emit('beforeResize');\n              swiper.emit('resize');\n            },\n            orientationChangeHandler: function orientationChangeHandler() {\n              if (!swiper || swiper.destroyed || !swiper.initialized) {\n                return;\n              }\n\n              swiper.emit('orientationchange');\n            }\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this; // Emit resize\n\n          win.addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange\n\n          win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          win.removeEventListener('resize', swiper.resize.resizeHandler);\n          win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        }\n      }\n    };\n    var Observer = {\n      func: win.MutationObserver || win.WebkitMutationObserver,\n      attach: function attach(target, options) {\n        if (options === void 0) options = {};\n        var swiper = this;\n        var ObserverFunc = Observer.func;\n        var observer = new ObserverFunc(function (mutations) {\n          // The observerUpdate event should only be triggered\n          // once despite the number of mutations.  Additional\n          // triggers are redundant and are very costly\n          if (mutations.length === 1) {\n            swiper.emit('observerUpdate', mutations[0]);\n            return;\n          }\n\n          var observerUpdate = function observerUpdate() {\n            swiper.emit('observerUpdate', mutations[0]);\n          };\n\n          if (win.requestAnimationFrame) {\n            win.requestAnimationFrame(observerUpdate);\n          } else {\n            win.setTimeout(observerUpdate, 0);\n          }\n        });\n        observer.observe(target, {\n          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n          childList: typeof options.childList === 'undefined' ? true : options.childList,\n          characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n        });\n        swiper.observer.observers.push(observer);\n      },\n      init: function init() {\n        var swiper = this;\n\n        if (!Support.observer || !swiper.params.observer) {\n          return;\n        }\n\n        if (swiper.params.observeParents) {\n          var containerParents = swiper.$el.parents();\n\n          for (var i = 0; i < containerParents.length; i += 1) {\n            swiper.observer.attach(containerParents[i]);\n          }\n        } // Observe container\n\n\n        swiper.observer.attach(swiper.$el[0], {\n          childList: swiper.params.observeSlideChildren\n        }); // Observe wrapper\n\n        swiper.observer.attach(swiper.$wrapperEl[0], {\n          attributes: false\n        });\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.observers.forEach(function (observer) {\n          observer.disconnect();\n        });\n        swiper.observer.observers = [];\n      }\n    };\n    var Observer$1 = {\n      name: 'observer',\n      params: {\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          observer: {\n            init: Observer.init.bind(swiper),\n            attach: Observer.attach.bind(swiper),\n            destroy: Observer.destroy.bind(swiper),\n            observers: []\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.observer.init();\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.observer.destroy();\n        }\n      }\n    };\n    var Virtual = {\n      update: function update(force) {\n        var swiper = this;\n        var ref = swiper.params;\n        var slidesPerView = ref.slidesPerView;\n        var slidesPerGroup = ref.slidesPerGroup;\n        var centeredSlides = ref.centeredSlides;\n        var ref$1 = swiper.params.virtual;\n        var addSlidesBefore = ref$1.addSlidesBefore;\n        var addSlidesAfter = ref$1.addSlidesAfter;\n        var ref$2 = swiper.virtual;\n        var previousFrom = ref$2.from;\n        var previousTo = ref$2.to;\n        var slides = ref$2.slides;\n        var previousSlidesGrid = ref$2.slidesGrid;\n        var renderSlide = ref$2.renderSlide;\n        var previousOffset = ref$2.offset;\n        swiper.updateActiveIndex();\n        var activeIndex = swiper.activeIndex || 0;\n        var offsetProp;\n\n        if (swiper.rtlTranslate) {\n          offsetProp = 'right';\n        } else {\n          offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n        }\n\n        var slidesAfter;\n        var slidesBefore;\n\n        if (centeredSlides) {\n          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n        } else {\n          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n          slidesBefore = slidesPerGroup + addSlidesAfter;\n        }\n\n        var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n        var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n        var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n        Utils.extend(swiper.virtual, {\n          from: from,\n          to: to,\n          offset: offset,\n          slidesGrid: swiper.slidesGrid\n        });\n\n        function onRendered() {\n          swiper.updateSlides();\n          swiper.updateProgress();\n          swiper.updateSlidesClasses();\n\n          if (swiper.lazy && swiper.params.lazy.enabled) {\n            swiper.lazy.load();\n          }\n        }\n\n        if (previousFrom === from && previousTo === to && !force) {\n          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n            swiper.slides.css(offsetProp, offset + \"px\");\n          }\n\n          swiper.updateProgress();\n          return;\n        }\n\n        if (swiper.params.virtual.renderExternal) {\n          swiper.params.virtual.renderExternal.call(swiper, {\n            offset: offset,\n            from: from,\n            to: to,\n            slides: function getSlides() {\n              var slidesToRender = [];\n\n              for (var i = from; i <= to; i += 1) {\n                slidesToRender.push(slides[i]);\n              }\n\n              return slidesToRender;\n            }()\n          });\n          onRendered();\n          return;\n        }\n\n        var prependIndexes = [];\n        var appendIndexes = [];\n\n        if (force) {\n          swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\n        } else {\n          for (var i = previousFrom; i <= previousTo; i += 1) {\n            if (i < from || i > to) {\n              swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\").remove();\n            }\n          }\n        }\n\n        for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n          if (i$1 >= from && i$1 <= to) {\n            if (typeof previousTo === 'undefined' || force) {\n              appendIndexes.push(i$1);\n            } else {\n              if (i$1 > previousTo) {\n                appendIndexes.push(i$1);\n              }\n\n              if (i$1 < previousFrom) {\n                prependIndexes.push(i$1);\n              }\n            }\n          }\n        }\n\n        appendIndexes.forEach(function (index) {\n          swiper.$wrapperEl.append(renderSlide(slides[index], index));\n        });\n        prependIndexes.sort(function (a, b) {\n          return b - a;\n        }).forEach(function (index) {\n          swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n        });\n        swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + \"px\");\n        onRendered();\n      },\n      renderSlide: function renderSlide(slide, index) {\n        var swiper = this;\n        var params = swiper.params.virtual;\n\n        if (params.cache && swiper.virtual.cache[index]) {\n          return swiper.virtual.cache[index];\n        }\n\n        var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(\"<div class=\\\"\" + swiper.params.slideClass + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\");\n\n        if (!$slideEl.attr('data-swiper-slide-index')) {\n          $slideEl.attr('data-swiper-slide-index', index);\n        }\n\n        if (params.cache) {\n          swiper.virtual.cache[index] = $slideEl;\n        }\n\n        return $slideEl;\n      },\n      appendSlide: function appendSlide(slides) {\n        var swiper = this;\n\n        if (_typeof(slides) === 'object' && 'length' in slides) {\n          for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i]) {\n              swiper.virtual.slides.push(slides[i]);\n            }\n          }\n        } else {\n          swiper.virtual.slides.push(slides);\n        }\n\n        swiper.virtual.update(true);\n      },\n      prependSlide: function prependSlide(slides) {\n        var swiper = this;\n        var activeIndex = swiper.activeIndex;\n        var newActiveIndex = activeIndex + 1;\n        var numberOfNewSlides = 1;\n\n        if (Array.isArray(slides)) {\n          for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i]) {\n              swiper.virtual.slides.unshift(slides[i]);\n            }\n          }\n\n          newActiveIndex = activeIndex + slides.length;\n          numberOfNewSlides = slides.length;\n        } else {\n          swiper.virtual.slides.unshift(slides);\n        }\n\n        if (swiper.params.virtual.cache) {\n          var cache = swiper.virtual.cache;\n          var newCache = {};\n          Object.keys(cache).forEach(function (cachedIndex) {\n            var $cachedEl = cache[cachedIndex];\n            var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n            if (cachedElIndex) {\n              $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n            }\n\n            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n          });\n          swiper.virtual.cache = newCache;\n        }\n\n        swiper.virtual.update(true);\n        swiper.slideTo(newActiveIndex, 0);\n      },\n      removeSlide: function removeSlide(slidesIndexes) {\n        var swiper = this;\n\n        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) {\n          return;\n        }\n\n        var activeIndex = swiper.activeIndex;\n\n        if (Array.isArray(slidesIndexes)) {\n          for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n            if (swiper.params.virtual.cache) {\n              delete swiper.virtual.cache[slidesIndexes[i]];\n            }\n\n            if (slidesIndexes[i] < activeIndex) {\n              activeIndex -= 1;\n            }\n\n            activeIndex = Math.max(activeIndex, 0);\n          }\n        } else {\n          swiper.virtual.slides.splice(slidesIndexes, 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes];\n          }\n\n          if (slidesIndexes < activeIndex) {\n            activeIndex -= 1;\n          }\n\n          activeIndex = Math.max(activeIndex, 0);\n        }\n\n        swiper.virtual.update(true);\n        swiper.slideTo(activeIndex, 0);\n      },\n      removeAllSlides: function removeAllSlides() {\n        var swiper = this;\n        swiper.virtual.slides = [];\n\n        if (swiper.params.virtual.cache) {\n          swiper.virtual.cache = {};\n        }\n\n        swiper.virtual.update(true);\n        swiper.slideTo(0, 0);\n      }\n    };\n    var Virtual$1 = {\n      name: 'virtual',\n      params: {\n        virtual: {\n          enabled: false,\n          slides: [],\n          cache: true,\n          renderSlide: null,\n          renderExternal: null,\n          addSlidesBefore: 0,\n          addSlidesAfter: 0\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          virtual: {\n            update: Virtual.update.bind(swiper),\n            appendSlide: Virtual.appendSlide.bind(swiper),\n            prependSlide: Virtual.prependSlide.bind(swiper),\n            removeSlide: Virtual.removeSlide.bind(swiper),\n            removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n            renderSlide: Virtual.renderSlide.bind(swiper),\n            slides: swiper.params.virtual.slides,\n            cache: {}\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n\n          if (!swiper.params.virtual.enabled) {\n            return;\n          }\n\n          swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\n          var overwriteParams = {\n            watchSlidesProgress: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n\n          if (!swiper.params.initialSlide) {\n            swiper.virtual.update();\n          }\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n\n          if (!swiper.params.virtual.enabled) {\n            return;\n          }\n\n          swiper.virtual.update();\n        }\n      }\n    };\n    var Keyboard = {\n      handle: function handle(event) {\n        var swiper = this;\n        var rtl = swiper.rtlTranslate;\n        var e = event;\n\n        if (e.originalEvent) {\n          e = e.originalEvent;\n        } // jquery fix\n\n\n        var kc = e.keyCode || e.charCode; // Directions locks\n\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && kc === 39 || swiper.isVertical() && kc === 40 || kc === 34)) {\n          return false;\n        }\n\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && kc === 37 || swiper.isVertical() && kc === 38 || kc === 33)) {\n          return false;\n        }\n\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n          return undefined;\n        }\n\n        if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n          return undefined;\n        }\n\n        if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n          var inView = false; // Check that swiper should be inside of visible area of window\n\n          if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) {\n            return undefined;\n          }\n\n          var windowWidth = win.innerWidth;\n          var windowHeight = win.innerHeight;\n          var swiperOffset = swiper.$el.offset();\n\n          if (rtl) {\n            swiperOffset.left -= swiper.$el[0].scrollLeft;\n          }\n\n          var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n          for (var i = 0; i < swiperCoord.length; i += 1) {\n            var point = swiperCoord[i];\n\n            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n              inView = true;\n            }\n          }\n\n          if (!inView) {\n            return undefined;\n          }\n        }\n\n        if (swiper.isHorizontal()) {\n          if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n            if (e.preventDefault) {\n              e.preventDefault();\n            } else {\n              e.returnValue = false;\n            }\n          }\n\n          if ((kc === 34 || kc === 39) && !rtl || (kc === 33 || kc === 37) && rtl) {\n            swiper.slideNext();\n          }\n\n          if ((kc === 33 || kc === 37) && !rtl || (kc === 34 || kc === 39) && rtl) {\n            swiper.slidePrev();\n          }\n        } else {\n          if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n            if (e.preventDefault) {\n              e.preventDefault();\n            } else {\n              e.returnValue = false;\n            }\n          }\n\n          if (kc === 34 || kc === 40) {\n            swiper.slideNext();\n          }\n\n          if (kc === 33 || kc === 38) {\n            swiper.slidePrev();\n          }\n        }\n\n        swiper.emit('keyPress', kc);\n        return undefined;\n      },\n      enable: function enable() {\n        var swiper = this;\n\n        if (swiper.keyboard.enabled) {\n          return;\n        }\n\n        $(doc).on('keydown', swiper.keyboard.handle);\n        swiper.keyboard.enabled = true;\n      },\n      disable: function disable() {\n        var swiper = this;\n\n        if (!swiper.keyboard.enabled) {\n          return;\n        }\n\n        $(doc).off('keydown', swiper.keyboard.handle);\n        swiper.keyboard.enabled = false;\n      }\n    };\n    var Keyboard$1 = {\n      name: 'keyboard',\n      params: {\n        keyboard: {\n          enabled: false,\n          onlyInViewport: true\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          keyboard: {\n            enabled: false,\n            enable: Keyboard.enable.bind(swiper),\n            disable: Keyboard.disable.bind(swiper),\n            handle: Keyboard.handle.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n\n          if (swiper.params.keyboard.enabled) {\n            swiper.keyboard.enable();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n\n          if (swiper.keyboard.enabled) {\n            swiper.keyboard.disable();\n          }\n        }\n      }\n    };\n\n    function isEventSupported() {\n      var eventName = 'onwheel';\n      var isSupported = (eventName in doc);\n\n      if (!isSupported) {\n        var element = doc.createElement('div');\n        element.setAttribute(eventName, 'return;');\n        isSupported = typeof element[eventName] === 'function';\n      }\n\n      if (!isSupported && doc.implementation && doc.implementation.hasFeature // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true) {\n        // This is the only way to test support for the `wheel` event in IE9+.\n        isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n      }\n\n      return isSupported;\n    }\n\n    var Mousewheel = {\n      lastScrollTime: Utils.now(),\n      lastEventBeforeSnap: undefined,\n      recentWheelEvents: [],\n      event: function event() {\n        if (win.navigator.userAgent.indexOf('firefox') > -1) {\n          return 'DOMMouseScroll';\n        }\n\n        return isEventSupported() ? 'wheel' : 'mousewheel';\n      },\n      normalize: function normalize(e) {\n        // Reasonable defaults\n        var PIXEL_STEP = 10;\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        var sX = 0;\n        var sY = 0; // spinX, spinY\n\n        var pX = 0;\n        var pY = 0; // pixelX, pixelY\n        // Legacy\n\n        if ('detail' in e) {\n          sY = e.detail;\n        }\n\n        if ('wheelDelta' in e) {\n          sY = -e.wheelDelta / 120;\n        }\n\n        if ('wheelDeltaY' in e) {\n          sY = -e.wheelDeltaY / 120;\n        }\n\n        if ('wheelDeltaX' in e) {\n          sX = -e.wheelDeltaX / 120;\n        } // side scrolling on FF with DOMMouseScroll\n\n\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n          sX = sY;\n          sY = 0;\n        }\n\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n\n        if ('deltaY' in e) {\n          pY = e.deltaY;\n        }\n\n        if ('deltaX' in e) {\n          pX = e.deltaX;\n        }\n\n        if (e.shiftKey && !pX) {\n          // if user scrolls with shift he wants horizontal scroll\n          pX = pY;\n          pY = 0;\n        }\n\n        if ((pX || pY) && e.deltaMode) {\n          if (e.deltaMode === 1) {\n            // delta in LINE units\n            pX *= LINE_HEIGHT;\n            pY *= LINE_HEIGHT;\n          } else {\n            // delta in PAGE units\n            pX *= PAGE_HEIGHT;\n            pY *= PAGE_HEIGHT;\n          }\n        } // Fall-back if spin cannot be determined\n\n\n        if (pX && !sX) {\n          sX = pX < 1 ? -1 : 1;\n        }\n\n        if (pY && !sY) {\n          sY = pY < 1 ? -1 : 1;\n        }\n\n        return {\n          spinX: sX,\n          spinY: sY,\n          pixelX: pX,\n          pixelY: pY\n        };\n      },\n      handleMouseEnter: function handleMouseEnter() {\n        var swiper = this;\n        swiper.mouseEntered = true;\n      },\n      handleMouseLeave: function handleMouseLeave() {\n        var swiper = this;\n        swiper.mouseEntered = false;\n      },\n      handle: function handle(event) {\n        var e = event;\n        var swiper = this;\n        var params = swiper.params.mousewheel;\n\n        if (swiper.params.cssMode) {\n          e.preventDefault();\n        }\n\n        var target = swiper.$el;\n\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarged);\n        }\n\n        if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) {\n          return true;\n        }\n\n        if (e.originalEvent) {\n          e = e.originalEvent;\n        } // jquery fix\n\n\n        var delta = 0;\n        var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        var data = Mousewheel.normalize(e);\n\n        if (params.forceToAxis) {\n          if (swiper.isHorizontal()) {\n            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) {\n              delta = data.pixelX * rtlFactor;\n            } else {\n              return true;\n            }\n          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) {\n            delta = data.pixelY;\n          } else {\n            return true;\n          }\n        } else {\n          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n        }\n\n        if (delta === 0) {\n          return true;\n        }\n\n        if (params.invert) {\n          delta = -delta;\n        }\n\n        if (!swiper.params.freeMode) {\n          // Register the new event in a variable which stores the relevant data\n          var newEvent = {\n            time: Utils.now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta),\n            raw: event\n          }; // Keep the most recent events\n\n          var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n          if (recentWheelEvents.length >= 2) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n          //   If direction has changed or\n          //   if the scroll is quicker than the previous one:\n          //     Animate the slider.\n          // Else (this is the first time the wheel is moved):\n          //     Animate the slider.\n\n          if (prevEvent) {\n            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n              swiper.mousewheel.animateSlider(newEvent);\n            }\n          } else {\n            swiper.mousewheel.animateSlider(newEvent);\n          } // If it's time to release the scroll:\n          //   Return now so you don't hit the preventDefault.\n\n\n          if (swiper.mousewheel.releaseScroll(newEvent)) {\n            return true;\n          }\n        } else {\n          // Freemode or scrollContainer:\n          // If we recently snapped after a momentum scroll, then ignore wheel events\n          // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n          // or if it's a new scroll (larger delta or inverse sign as last event before\n          // an end-of-momentum snap).\n          var newEvent$1 = {\n            time: Utils.now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta)\n          };\n          var ref = swiper.mousewheel;\n          var lastEventBeforeSnap = ref.lastEventBeforeSnap;\n          var ignoreWheelEvents = lastEventBeforeSnap && newEvent$1.time < lastEventBeforeSnap.time + 500 && newEvent$1.delta <= lastEventBeforeSnap.delta && newEvent$1.direction === lastEventBeforeSnap.direction;\n\n          if (!ignoreWheelEvents) {\n            swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n            if (swiper.params.loop) {\n              swiper.loopFix();\n            }\n\n            var position = swiper.getTranslate() + delta * params.sensitivity;\n            var wasBeginning = swiper.isBeginning;\n            var wasEnd = swiper.isEnd;\n\n            if (position >= swiper.minTranslate()) {\n              position = swiper.minTranslate();\n            }\n\n            if (position <= swiper.maxTranslate()) {\n              position = swiper.maxTranslate();\n            }\n\n            swiper.setTransition(0);\n            swiper.setTranslate(position);\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n\n            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n              swiper.updateSlidesClasses();\n            }\n\n            if (swiper.params.freeModeSticky) {\n              // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n              // the end of a momentum scroll by storing recent (N=15?) wheel events.\n              // 1. do all N events have decreasing or same (absolute value) delta?\n              // 2. did all N events arrive in the last M (M=500?) msecs?\n              // 3. does the earliest event have an (absolute value) delta that's\n              //    at least P (P=1?) larger than the most recent event's delta?\n              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n              // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n              // Snap immediately and ignore remaining wheel events in this scroll.\n              // See comment above for \"remaining wheel events in this scroll\" determination.\n              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n              clearTimeout(swiper.mousewheel.timeout);\n              swiper.mousewheel.timeout = undefined;\n              var recentWheelEvents$1 = swiper.mousewheel.recentWheelEvents;\n\n              if (recentWheelEvents$1.length >= 15) {\n                recentWheelEvents$1.shift(); // only store the last N events\n              }\n\n              var prevEvent$1 = recentWheelEvents$1.length ? recentWheelEvents$1[recentWheelEvents$1.length - 1] : undefined;\n              var firstEvent = recentWheelEvents$1[0];\n              recentWheelEvents$1.push(newEvent$1);\n\n              if (prevEvent$1 && (newEvent$1.delta > prevEvent$1.delta || newEvent$1.direction !== prevEvent$1.direction)) {\n                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                recentWheelEvents$1.splice(0);\n              } else if (recentWheelEvents$1.length >= 15 && newEvent$1.time - firstEvent.time < 500 && firstEvent.delta - newEvent$1.delta >= 1 && newEvent$1.delta <= 6) {\n                // We're at the end of the deceleration of a momentum scroll, so there's no need\n                // to wait for more events. Snap ASAP on the next tick.\n                // Also, because there's some remaining momentum we'll bias the snap in the\n                // direction of the ongoing scroll because it's better UX for the scroll to snap\n                // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                // if it's already scrolled more than 20% in the current direction, keep going.\n                var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                swiper.mousewheel.lastEventBeforeSnap = newEvent$1;\n                recentWheelEvents$1.splice(0);\n                swiper.mousewheel.timeout = Utils.nextTick(function () {\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 0); // no delay; move on next tick\n              }\n\n              if (!swiper.mousewheel.timeout) {\n                // if we get here, then we haven't detected the end of a momentum scroll, so\n                // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                // for 500ms.\n                swiper.mousewheel.timeout = Utils.nextTick(function () {\n                  var snapToThreshold = 0.5;\n                  swiper.mousewheel.lastEventBeforeSnap = newEvent$1;\n                  recentWheelEvents$1.splice(0);\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 500);\n              }\n            } // Emit event\n\n\n            if (!ignoreWheelEvents) {\n              swiper.emit('scroll', e);\n            } // Stop autoplay\n\n\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) {\n              swiper.autoplay.stop();\n            } // Return page scroll on edge positions\n\n\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) {\n              return true;\n            }\n          }\n        }\n\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n\n        return false;\n      },\n      animateSlider: function animateSlider(newEvent) {\n        var swiper = this; // If the movement is NOT big enough and\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n        //   Don't go any further (avoid insignificant scroll movement).\n\n        if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n          // Return false as a default\n          return true;\n        } // If user is scrolling towards the end:\n        //   If the slider hasn't hit the latest slide or\n        //   if the slider is a loop and\n        //   if the slider isn't moving right now:\n        //     Go to next slide and\n        //     emit a scroll event.\n        // Else (the user is scrolling towards the beginning) and\n        // if the slider hasn't hit the first slide or\n        // if the slider is a loop and\n        // if the slider isn't moving right now:\n        //   Go to prev slide and\n        //   emit a scroll event.\n\n\n        if (newEvent.direction < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', newEvent.raw);\n          }\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', newEvent.raw);\n        } // If you got here is because an animation has been triggered so store the current time\n\n\n        swiper.mousewheel.lastScrollTime = new win.Date().getTime(); // Return false as a default\n\n        return false;\n      },\n      releaseScroll: function releaseScroll(newEvent) {\n        var swiper = this;\n        var params = swiper.params.mousewheel;\n\n        if (newEvent.direction < 0) {\n          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n            // Return true to animate scroll on edges\n            return true;\n          }\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n\n        return false;\n      },\n      enable: function enable() {\n        var swiper = this;\n        var event = Mousewheel.event();\n\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n          return true;\n        }\n\n        if (!event) {\n          return false;\n        }\n\n        if (swiper.mousewheel.enabled) {\n          return false;\n        }\n\n        var target = swiper.$el;\n\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarged);\n        }\n\n        target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n        target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n        target.on(event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = true;\n        return true;\n      },\n      disable: function disable() {\n        var swiper = this;\n        var event = Mousewheel.event();\n\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n          return true;\n        }\n\n        if (!event) {\n          return false;\n        }\n\n        if (!swiper.mousewheel.enabled) {\n          return false;\n        }\n\n        var target = swiper.$el;\n\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarged);\n        }\n\n        target.off(event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = false;\n        return true;\n      }\n    };\n    var Mousewheel$1 = {\n      name: 'mousewheel',\n      params: {\n        mousewheel: {\n          enabled: false,\n          releaseOnEdges: false,\n          invert: false,\n          forceToAxis: false,\n          sensitivity: 1,\n          eventsTarged: 'container'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          mousewheel: {\n            enabled: false,\n            enable: Mousewheel.enable.bind(swiper),\n            disable: Mousewheel.disable.bind(swiper),\n            handle: Mousewheel.handle.bind(swiper),\n            handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n            handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n            animateSlider: Mousewheel.animateSlider.bind(swiper),\n            releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n            lastScrollTime: Utils.now(),\n            lastEventBeforeSnap: undefined,\n            recentWheelEvents: []\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n\n          if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n            swiper.mousewheel.disable();\n          }\n\n          if (swiper.params.mousewheel.enabled) {\n            swiper.mousewheel.enable();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n\n          if (swiper.params.cssMode) {\n            swiper.mousewheel.enable();\n          }\n\n          if (swiper.mousewheel.enabled) {\n            swiper.mousewheel.disable();\n          }\n        }\n      }\n    };\n    var Navigation = {\n      update: function update() {\n        // Update Navigation Buttons\n        var swiper = this;\n        var params = swiper.params.navigation;\n\n        if (swiper.params.loop) {\n          return;\n        }\n\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n\n        if ($prevEl && $prevEl.length > 0) {\n          if (swiper.isBeginning) {\n            $prevEl.addClass(params.disabledClass);\n          } else {\n            $prevEl.removeClass(params.disabledClass);\n          }\n\n          $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n\n        if ($nextEl && $nextEl.length > 0) {\n          if (swiper.isEnd) {\n            $nextEl.addClass(params.disabledClass);\n          } else {\n            $nextEl.removeClass(params.disabledClass);\n          }\n\n          $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n      },\n      onPrevClick: function onPrevClick(e) {\n        var swiper = this;\n        e.preventDefault();\n\n        if (swiper.isBeginning && !swiper.params.loop) {\n          return;\n        }\n\n        swiper.slidePrev();\n      },\n      onNextClick: function onNextClick(e) {\n        var swiper = this;\n        e.preventDefault();\n\n        if (swiper.isEnd && !swiper.params.loop) {\n          return;\n        }\n\n        swiper.slideNext();\n      },\n      init: function init() {\n        var swiper = this;\n        var params = swiper.params.navigation;\n\n        if (!(params.nextEl || params.prevEl)) {\n          return;\n        }\n\n        var $nextEl;\n        var $prevEl;\n\n        if (params.nextEl) {\n          $nextEl = $(params.nextEl);\n\n          if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n            $nextEl = swiper.$el.find(params.nextEl);\n          }\n        }\n\n        if (params.prevEl) {\n          $prevEl = $(params.prevEl);\n\n          if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n            $prevEl = swiper.$el.find(params.prevEl);\n          }\n        }\n\n        if ($nextEl && $nextEl.length > 0) {\n          $nextEl.on('click', swiper.navigation.onNextClick);\n        }\n\n        if ($prevEl && $prevEl.length > 0) {\n          $prevEl.on('click', swiper.navigation.onPrevClick);\n        }\n\n        Utils.extend(swiper.navigation, {\n          $nextEl: $nextEl,\n          nextEl: $nextEl && $nextEl[0],\n          $prevEl: $prevEl,\n          prevEl: $prevEl && $prevEl[0]\n        });\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n\n        if ($nextEl && $nextEl.length) {\n          $nextEl.off('click', swiper.navigation.onNextClick);\n          $nextEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n\n        if ($prevEl && $prevEl.length) {\n          $prevEl.off('click', swiper.navigation.onPrevClick);\n          $prevEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n      }\n    };\n    var Navigation$1 = {\n      name: 'navigation',\n      params: {\n        navigation: {\n          nextEl: null,\n          prevEl: null,\n          hideOnClick: false,\n          disabledClass: 'swiper-button-disabled',\n          hiddenClass: 'swiper-button-hidden',\n          lockClass: 'swiper-button-lock'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          navigation: {\n            init: Navigation.init.bind(swiper),\n            update: Navigation.update.bind(swiper),\n            destroy: Navigation.destroy.bind(swiper),\n            onNextClick: Navigation.onNextClick.bind(swiper),\n            onPrevClick: Navigation.onPrevClick.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.navigation.init();\n          swiper.navigation.update();\n        },\n        toEdge: function toEdge() {\n          var swiper = this;\n          swiper.navigation.update();\n        },\n        fromEdge: function fromEdge() {\n          var swiper = this;\n          swiper.navigation.update();\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.navigation.destroy();\n        },\n        click: function click(e) {\n          var swiper = this;\n          var ref = swiper.navigation;\n          var $nextEl = ref.$nextEl;\n          var $prevEl = ref.$prevEl;\n\n          if (swiper.params.navigation.hideOnClick && !$(e.target).is($prevEl) && !$(e.target).is($nextEl)) {\n            var isHidden;\n\n            if ($nextEl) {\n              isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n            } else if ($prevEl) {\n              isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n            }\n\n            if (isHidden === true) {\n              swiper.emit('navigationShow', swiper);\n            } else {\n              swiper.emit('navigationHide', swiper);\n            }\n\n            if ($nextEl) {\n              $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n            }\n\n            if ($prevEl) {\n              $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n            }\n          }\n        }\n      }\n    };\n    var Pagination = {\n      update: function update() {\n        // Render || Update Pagination bullets/items\n        var swiper = this;\n        var rtl = swiper.rtl;\n        var params = swiper.params.pagination;\n\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n          return;\n        }\n\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el; // Current/Total\n\n        var current;\n        var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        if (swiper.params.loop) {\n          current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n          if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n            current -= slidesLength - swiper.loopedSlides * 2;\n          }\n\n          if (current > total - 1) {\n            current -= total;\n          }\n\n          if (current < 0 && swiper.params.paginationType !== 'bullets') {\n            current = total + current;\n          }\n        } else if (typeof swiper.snapIndex !== 'undefined') {\n          current = swiper.snapIndex;\n        } else {\n          current = swiper.activeIndex || 0;\n        } // Types\n\n\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n          var bullets = swiper.pagination.bullets;\n          var firstIndex;\n          var lastIndex;\n          var midIndex;\n\n          if (params.dynamicBullets) {\n            swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n            $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n\n            if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n              swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n\n              if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\n                swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n              } else if (swiper.pagination.dynamicBulletIndex < 0) {\n                swiper.pagination.dynamicBulletIndex = 0;\n              }\n            }\n\n            firstIndex = current - swiper.pagination.dynamicBulletIndex;\n            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n            midIndex = (lastIndex + firstIndex) / 2;\n          }\n\n          bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n\n          if ($el.length > 1) {\n            bullets.each(function (index, bullet) {\n              var $bullet = $(bullet);\n              var bulletIndex = $bullet.index();\n\n              if (bulletIndex === current) {\n                $bullet.addClass(params.bulletActiveClass);\n              }\n\n              if (params.dynamicBullets) {\n                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                  $bullet.addClass(params.bulletActiveClass + \"-main\");\n                }\n\n                if (bulletIndex === firstIndex) {\n                  $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                }\n\n                if (bulletIndex === lastIndex) {\n                  $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n                }\n              }\n            });\n          } else {\n            var $bullet = bullets.eq(current);\n            var bulletIndex = $bullet.index();\n            $bullet.addClass(params.bulletActiveClass);\n\n            if (params.dynamicBullets) {\n              var $firstDisplayedBullet = bullets.eq(firstIndex);\n              var $lastDisplayedBullet = bullets.eq(lastIndex);\n\n              for (var i = firstIndex; i <= lastIndex; i += 1) {\n                bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n              }\n\n              if (swiper.params.loop) {\n                if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                  for (var i$1 = params.dynamicMainBullets; i$1 >= 0; i$1 -= 1) {\n                    bullets.eq(bullets.length - i$1).addClass(params.bulletActiveClass + \"-main\");\n                  }\n\n                  bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\n                } else {\n                  $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                  $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n                }\n              } else {\n                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            }\n          }\n\n          if (params.dynamicBullets) {\n            var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n            var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\n            var offsetProp = rtl ? 'right' : 'left';\n            bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n          }\n        }\n\n        if (params.type === 'fraction') {\n          $el.find(\".\" + params.currentClass).text(params.formatFractionCurrent(current + 1));\n          $el.find(\".\" + params.totalClass).text(params.formatFractionTotal(total));\n        }\n\n        if (params.type === 'progressbar') {\n          var progressbarDirection;\n\n          if (params.progressbarOpposite) {\n            progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n          } else {\n            progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n          }\n\n          var scale = (current + 1) / total;\n          var scaleX = 1;\n          var scaleY = 1;\n\n          if (progressbarDirection === 'horizontal') {\n            scaleX = scale;\n          } else {\n            scaleY = scale;\n          }\n\n          $el.find(\".\" + params.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n        }\n\n        if (params.type === 'custom' && params.renderCustom) {\n          $el.html(params.renderCustom(swiper, current + 1, total));\n          swiper.emit('paginationRender', swiper, $el[0]);\n        } else {\n          swiper.emit('paginationUpdate', swiper, $el[0]);\n        }\n\n        $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      },\n      render: function render() {\n        // Render Container\n        var swiper = this;\n        var params = swiper.params.pagination;\n\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n          return;\n        }\n\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        var paginationHTML = '';\n\n        if (params.type === 'bullets') {\n          var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n          for (var i = 0; i < numberOfBullets; i += 1) {\n            if (params.renderBullet) {\n              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n            } else {\n              paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n            }\n          }\n\n          $el.html(paginationHTML);\n          swiper.pagination.bullets = $el.find(\".\" + params.bulletClass);\n        }\n\n        if (params.type === 'fraction') {\n          if (params.renderFraction) {\n            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n          } else {\n            paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\" + ' / ' + \"<span class=\\\"\" + params.totalClass + \"\\\"></span>\";\n          }\n\n          $el.html(paginationHTML);\n        }\n\n        if (params.type === 'progressbar') {\n          if (params.renderProgressbar) {\n            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n          } else {\n            paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n          }\n\n          $el.html(paginationHTML);\n        }\n\n        if (params.type !== 'custom') {\n          swiper.emit('paginationRender', swiper.pagination.$el[0]);\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        var params = swiper.params.pagination;\n\n        if (!params.el) {\n          return;\n        }\n\n        var $el = $(params.el);\n\n        if ($el.length === 0) {\n          return;\n        }\n\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && swiper.$el.find(params.el).length === 1) {\n          $el = swiper.$el.find(params.el);\n        }\n\n        if (params.type === 'bullets' && params.clickable) {\n          $el.addClass(params.clickableClass);\n        }\n\n        $el.addClass(params.modifierClass + params.type);\n\n        if (params.type === 'bullets' && params.dynamicBullets) {\n          $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n          swiper.pagination.dynamicBulletIndex = 0;\n\n          if (params.dynamicMainBullets < 1) {\n            params.dynamicMainBullets = 1;\n          }\n        }\n\n        if (params.type === 'progressbar' && params.progressbarOpposite) {\n          $el.addClass(params.progressbarOppositeClass);\n        }\n\n        if (params.clickable) {\n          $el.on('click', \".\" + params.bulletClass, function onClick(e) {\n            e.preventDefault();\n            var index = $(this).index() * swiper.params.slidesPerGroup;\n\n            if (swiper.params.loop) {\n              index += swiper.loopedSlides;\n            }\n\n            swiper.slideTo(index);\n          });\n        }\n\n        Utils.extend(swiper.pagination, {\n          $el: $el,\n          el: $el[0]\n        });\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        var params = swiper.params.pagination;\n\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n          return;\n        }\n\n        var $el = swiper.pagination.$el;\n        $el.removeClass(params.hiddenClass);\n        $el.removeClass(params.modifierClass + params.type);\n\n        if (swiper.pagination.bullets) {\n          swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n        }\n\n        if (params.clickable) {\n          $el.off('click', \".\" + params.bulletClass);\n        }\n      }\n    };\n    var Pagination$1 = {\n      name: 'pagination',\n      params: {\n        pagination: {\n          el: null,\n          bulletElement: 'span',\n          clickable: false,\n          hideOnClick: false,\n          renderBullet: null,\n          renderProgressbar: null,\n          renderFraction: null,\n          renderCustom: null,\n          progressbarOpposite: false,\n          type: 'bullets',\n          // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n          dynamicBullets: false,\n          dynamicMainBullets: 1,\n          formatFractionCurrent: function formatFractionCurrent(number) {\n            return number;\n          },\n          formatFractionTotal: function formatFractionTotal(number) {\n            return number;\n          },\n          bulletClass: 'swiper-pagination-bullet',\n          bulletActiveClass: 'swiper-pagination-bullet-active',\n          modifierClass: 'swiper-pagination-',\n          // NEW\n          currentClass: 'swiper-pagination-current',\n          totalClass: 'swiper-pagination-total',\n          hiddenClass: 'swiper-pagination-hidden',\n          progressbarFillClass: 'swiper-pagination-progressbar-fill',\n          progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n          clickableClass: 'swiper-pagination-clickable',\n          // NEW\n          lockClass: 'swiper-pagination-lock'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          pagination: {\n            init: Pagination.init.bind(swiper),\n            render: Pagination.render.bind(swiper),\n            update: Pagination.update.bind(swiper),\n            destroy: Pagination.destroy.bind(swiper),\n            dynamicBulletIndex: 0\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.pagination.init();\n          swiper.pagination.render();\n          swiper.pagination.update();\n        },\n        activeIndexChange: function activeIndexChange() {\n          var swiper = this;\n\n          if (swiper.params.loop) {\n            swiper.pagination.update();\n          } else if (typeof swiper.snapIndex === 'undefined') {\n            swiper.pagination.update();\n          }\n        },\n        snapIndexChange: function snapIndexChange() {\n          var swiper = this;\n\n          if (!swiper.params.loop) {\n            swiper.pagination.update();\n          }\n        },\n        slidesLengthChange: function slidesLengthChange() {\n          var swiper = this;\n\n          if (swiper.params.loop) {\n            swiper.pagination.render();\n            swiper.pagination.update();\n          }\n        },\n        snapGridLengthChange: function snapGridLengthChange() {\n          var swiper = this;\n\n          if (!swiper.params.loop) {\n            swiper.pagination.render();\n            swiper.pagination.update();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.pagination.destroy();\n        },\n        click: function click(e) {\n          var swiper = this;\n\n          if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {\n            var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n\n            if (isHidden === true) {\n              swiper.emit('paginationShow', swiper);\n            } else {\n              swiper.emit('paginationHide', swiper);\n            }\n\n            swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n          }\n        }\n      }\n    };\n    var Scrollbar = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n          return;\n        }\n\n        var scrollbar = swiper.scrollbar;\n        var rtl = swiper.rtlTranslate;\n        var progress = swiper.progress;\n        var dragSize = scrollbar.dragSize;\n        var trackSize = scrollbar.trackSize;\n        var $dragEl = scrollbar.$dragEl;\n        var $el = scrollbar.$el;\n        var params = swiper.params.scrollbar;\n        var newSize = dragSize;\n        var newPos = (trackSize - dragSize) * progress;\n\n        if (rtl) {\n          newPos = -newPos;\n\n          if (newPos > 0) {\n            newSize = dragSize - newPos;\n            newPos = 0;\n          } else if (-newPos + dragSize > trackSize) {\n            newSize = trackSize + newPos;\n          }\n        } else if (newPos < 0) {\n          newSize = dragSize + newPos;\n          newPos = 0;\n        } else if (newPos + dragSize > trackSize) {\n          newSize = trackSize - newPos;\n        }\n\n        if (swiper.isHorizontal()) {\n          $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n          $dragEl[0].style.width = newSize + \"px\";\n        } else {\n          $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n          $dragEl[0].style.height = newSize + \"px\";\n        }\n\n        if (params.hide) {\n          clearTimeout(swiper.scrollbar.timeout);\n          $el[0].style.opacity = 1;\n          swiper.scrollbar.timeout = setTimeout(function () {\n            $el[0].style.opacity = 0;\n            $el.transition(400);\n          }, 1000);\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n          return;\n        }\n\n        swiper.scrollbar.$dragEl.transition(duration);\n      },\n      updateSize: function updateSize() {\n        var swiper = this;\n\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n          return;\n        }\n\n        var scrollbar = swiper.scrollbar;\n        var $dragEl = scrollbar.$dragEl;\n        var $el = scrollbar.$el;\n        $dragEl[0].style.width = '';\n        $dragEl[0].style.height = '';\n        var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n        var divider = swiper.size / swiper.virtualSize;\n        var moveDivider = divider * (trackSize / swiper.size);\n        var dragSize;\n\n        if (swiper.params.scrollbar.dragSize === 'auto') {\n          dragSize = trackSize * divider;\n        } else {\n          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        }\n\n        if (swiper.isHorizontal()) {\n          $dragEl[0].style.width = dragSize + \"px\";\n        } else {\n          $dragEl[0].style.height = dragSize + \"px\";\n        }\n\n        if (divider >= 1) {\n          $el[0].style.display = 'none';\n        } else {\n          $el[0].style.display = '';\n        }\n\n        if (swiper.params.scrollbar.hide) {\n          $el[0].style.opacity = 0;\n        }\n\n        Utils.extend(scrollbar, {\n          trackSize: trackSize,\n          divider: divider,\n          moveDivider: moveDivider,\n          dragSize: dragSize\n        });\n        scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n      },\n      getPointerPosition: function getPointerPosition(e) {\n        var swiper = this;\n\n        if (swiper.isHorizontal()) {\n          return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n        }\n\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n      },\n      setDragPosition: function setDragPosition(e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar;\n        var rtl = swiper.rtlTranslate;\n        var $el = scrollbar.$el;\n        var dragSize = scrollbar.dragSize;\n        var trackSize = scrollbar.trackSize;\n        var dragStartPos = scrollbar.dragStartPos;\n        var positionRatio;\n        positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n        if (rtl) {\n          positionRatio = 1 - positionRatio;\n        }\n\n        var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      },\n      onDragStart: function onDragStart(e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar;\n        var $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el;\n        var $dragEl = scrollbar.$dragEl;\n        swiper.scrollbar.isTouched = true;\n        swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n        e.preventDefault();\n        e.stopPropagation();\n        $wrapperEl.transition(100);\n        $dragEl.transition(100);\n        scrollbar.setDragPosition(e);\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        $el.transition(0);\n\n        if (params.hide) {\n          $el.css('opacity', 1);\n        }\n\n        if (swiper.params.cssMode) {\n          swiper.$wrapperEl.css('scroll-snap-type', 'none');\n        }\n\n        swiper.emit('scrollbarDragStart', e);\n      },\n      onDragMove: function onDragMove(e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar;\n        var $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el;\n        var $dragEl = scrollbar.$dragEl;\n\n        if (!swiper.scrollbar.isTouched) {\n          return;\n        }\n\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n\n        scrollbar.setDragPosition(e);\n        $wrapperEl.transition(0);\n        $el.transition(0);\n        $dragEl.transition(0);\n        swiper.emit('scrollbarDragMove', e);\n      },\n      onDragEnd: function onDragEnd(e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar;\n        var $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el;\n\n        if (!swiper.scrollbar.isTouched) {\n          return;\n        }\n\n        swiper.scrollbar.isTouched = false;\n\n        if (swiper.params.cssMode) {\n          swiper.$wrapperEl.css('scroll-snap-type', '');\n          $wrapperEl.transition('');\n        }\n\n        if (params.hide) {\n          clearTimeout(swiper.scrollbar.dragTimeout);\n          swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n            $el.css('opacity', 0);\n            $el.transition(400);\n          }, 1000);\n        }\n\n        swiper.emit('scrollbarDragEnd', e);\n\n        if (params.snapOnRelease) {\n          swiper.slideToClosest();\n        }\n      },\n      enableDraggable: function enableDraggable() {\n        var swiper = this;\n\n        if (!swiper.params.scrollbar.el) {\n          return;\n        }\n\n        var scrollbar = swiper.scrollbar;\n        var touchEventsTouch = swiper.touchEventsTouch;\n        var touchEventsDesktop = swiper.touchEventsDesktop;\n        var params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? {\n          passive: false,\n          capture: false\n        } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n\n        if (!Support.touch) {\n          target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n          doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n          doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        } else {\n          target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n          target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n          target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      },\n      disableDraggable: function disableDraggable() {\n        var swiper = this;\n\n        if (!swiper.params.scrollbar.el) {\n          return;\n        }\n\n        var scrollbar = swiper.scrollbar;\n        var touchEventsTouch = swiper.touchEventsTouch;\n        var touchEventsDesktop = swiper.touchEventsDesktop;\n        var params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? {\n          passive: false,\n          capture: false\n        } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n\n        if (!Support.touch) {\n          target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n          doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n          doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        } else {\n          target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n          target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n          target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      },\n      init: function init() {\n        var swiper = this;\n\n        if (!swiper.params.scrollbar.el) {\n          return;\n        }\n\n        var scrollbar = swiper.scrollbar;\n        var $swiperEl = swiper.$el;\n        var params = swiper.params.scrollbar;\n        var $el = $(params.el);\n\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n          $el = $swiperEl.find(params.el);\n        }\n\n        var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n\n        if ($dragEl.length === 0) {\n          $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n          $el.append($dragEl);\n        }\n\n        Utils.extend(scrollbar, {\n          $el: $el,\n          el: $el[0],\n          $dragEl: $dragEl,\n          dragEl: $dragEl[0]\n        });\n\n        if (params.draggable) {\n          scrollbar.enableDraggable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.disableDraggable();\n      }\n    };\n    var Scrollbar$1 = {\n      name: 'scrollbar',\n      params: {\n        scrollbar: {\n          el: null,\n          dragSize: 'auto',\n          hide: false,\n          draggable: false,\n          snapOnRelease: true,\n          lockClass: 'swiper-scrollbar-lock',\n          dragClass: 'swiper-scrollbar-drag'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          scrollbar: {\n            init: Scrollbar.init.bind(swiper),\n            destroy: Scrollbar.destroy.bind(swiper),\n            updateSize: Scrollbar.updateSize.bind(swiper),\n            setTranslate: Scrollbar.setTranslate.bind(swiper),\n            setTransition: Scrollbar.setTransition.bind(swiper),\n            enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n            disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n            setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n            getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n            onDragStart: Scrollbar.onDragStart.bind(swiper),\n            onDragMove: Scrollbar.onDragMove.bind(swiper),\n            onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n            isTouched: false,\n            timeout: null,\n            dragTimeout: null\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.scrollbar.init();\n          swiper.scrollbar.updateSize();\n          swiper.scrollbar.setTranslate();\n        },\n        update: function update() {\n          var swiper = this;\n          swiper.scrollbar.updateSize();\n        },\n        resize: function resize() {\n          var swiper = this;\n          swiper.scrollbar.updateSize();\n        },\n        observerUpdate: function observerUpdate() {\n          var swiper = this;\n          swiper.scrollbar.updateSize();\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          swiper.scrollbar.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          swiper.scrollbar.setTransition(duration);\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.scrollbar.destroy();\n        }\n      }\n    };\n    var Parallax = {\n      setTransform: function setTransform(el, progress) {\n        var swiper = this;\n        var rtl = swiper.rtl;\n        var $el = $(el);\n        var rtlFactor = rtl ? -1 : 1;\n        var p = $el.attr('data-swiper-parallax') || '0';\n        var x = $el.attr('data-swiper-parallax-x');\n        var y = $el.attr('data-swiper-parallax-y');\n        var scale = $el.attr('data-swiper-parallax-scale');\n        var opacity = $el.attr('data-swiper-parallax-opacity');\n\n        if (x || y) {\n          x = x || '0';\n          y = y || '0';\n        } else if (swiper.isHorizontal()) {\n          x = p;\n          y = '0';\n        } else {\n          y = p;\n          x = '0';\n        }\n\n        if (x.indexOf('%') >= 0) {\n          x = parseInt(x, 10) * progress * rtlFactor + \"%\";\n        } else {\n          x = x * progress * rtlFactor + \"px\";\n        }\n\n        if (y.indexOf('%') >= 0) {\n          y = parseInt(y, 10) * progress + \"%\";\n        } else {\n          y = y * progress + \"px\";\n        }\n\n        if (typeof opacity !== 'undefined' && opacity !== null) {\n          var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n          $el[0].style.opacity = currentOpacity;\n        }\n\n        if (typeof scale === 'undefined' || scale === null) {\n          $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\n        } else {\n          var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n          $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var $el = swiper.$el;\n        var slides = swiper.slides;\n        var progress = swiper.progress;\n        var snapGrid = swiper.snapGrid;\n        $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n        slides.each(function (slideIndex, slideEl) {\n          var slideProgress = slideEl.progress;\n\n          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n          }\n\n          slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n          $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n        });\n      },\n      setTransition: function setTransition(duration) {\n        if (duration === void 0) duration = this.params.speed;\n        var swiper = this;\n        var $el = swiper.$el;\n        $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n\n          if (duration === 0) {\n            parallaxDuration = 0;\n          }\n\n          $parallaxEl.transition(parallaxDuration);\n        });\n      }\n    };\n    var Parallax$1 = {\n      name: 'parallax',\n      params: {\n        parallax: {\n          enabled: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          parallax: {\n            setTransform: Parallax.setTransform.bind(swiper),\n            setTranslate: Parallax.setTranslate.bind(swiper),\n            setTransition: Parallax.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n\n          swiper.params.watchSlidesProgress = true;\n          swiper.originalParams.watchSlidesProgress = true;\n        },\n        init: function init() {\n          var swiper = this;\n\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n\n          swiper.parallax.setTranslate();\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n\n          swiper.parallax.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n\n          swiper.parallax.setTransition(duration);\n        }\n      }\n    };\n    var Zoom = {\n      // Calc Scale From Multi-touches\n      getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n        if (e.targetTouches.length < 2) {\n          return 1;\n        }\n\n        var x1 = e.targetTouches[0].pageX;\n        var y1 = e.targetTouches[0].pageY;\n        var x2 = e.targetTouches[1].pageX;\n        var y2 = e.targetTouches[1].pageY;\n        var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        return distance;\n      },\n      // Events\n      onGestureStart: function onGestureStart(e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n\n        if (!Support.gestures) {\n          if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n            return;\n          }\n\n          zoom.fakeGestureTouched = true;\n          gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n        }\n\n        if (!gesture.$slideEl || !gesture.$slideEl.length) {\n          gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n\n          if (gesture.$slideEl.length === 0) {\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          }\n\n          gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n          gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n          if (gesture.$imageWrapEl.length === 0) {\n            gesture.$imageEl = undefined;\n            return;\n          }\n        }\n\n        gesture.$imageEl.transition(0);\n        swiper.zoom.isScaling = true;\n      },\n      onGestureChange: function onGestureChange(e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n\n        if (!Support.gestures) {\n          if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n            return;\n          }\n\n          zoom.fakeGestureMoved = true;\n          gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n\n        if (Support.gestures) {\n          zoom.scale = e.scale * zoom.currentScale;\n        } else {\n          zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\n        }\n\n        if (zoom.scale > gesture.maxRatio) {\n          zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n        }\n\n        if (zoom.scale < params.minRatio) {\n          zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n        }\n\n        gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      },\n      onGestureEnd: function onGestureEnd(e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n\n        if (!Support.gestures) {\n          if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n            return;\n          }\n\n          if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android) {\n            return;\n          }\n\n          zoom.fakeGestureTouched = false;\n          zoom.fakeGestureMoved = false;\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n        zoom.currentScale = zoom.scale;\n        zoom.isScaling = false;\n\n        if (zoom.scale === 1) {\n          gesture.$slideEl = undefined;\n        }\n      },\n      onTouchStart: function onTouchStart(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n\n        if (image.isTouched) {\n          return;\n        }\n\n        if (Device.android) {\n          e.preventDefault();\n        }\n\n        image.isTouched = true;\n        image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      },\n      onTouchMove: function onTouchMove(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n        var velocity = zoom.velocity;\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n\n        swiper.allowClick = false;\n\n        if (!image.isTouched || !gesture.$slideEl) {\n          return;\n        }\n\n        if (!image.isMoved) {\n          image.width = gesture.$imageEl[0].offsetWidth;\n          image.height = gesture.$imageEl[0].offsetHeight;\n          image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n          image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n          gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n          gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n          gesture.$imageWrapEl.transition(0);\n\n          if (swiper.rtl) {\n            image.startX = -image.startX;\n            image.startY = -image.startY;\n          }\n        } // Define if we need image drag\n\n\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) {\n          return;\n        }\n\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n        if (!image.isMoved && !zoom.isScaling) {\n          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n            image.isTouched = false;\n            return;\n          }\n\n          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n            image.isTouched = false;\n            return;\n          }\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        image.isMoved = true;\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n        if (image.currentX < image.minX) {\n          image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n        }\n\n        if (image.currentX > image.maxX) {\n          image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n        }\n\n        if (image.currentY < image.minY) {\n          image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n        }\n\n        if (image.currentY > image.maxY) {\n          image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n        } // Velocity\n\n\n        if (!velocity.prevPositionX) {\n          velocity.prevPositionX = image.touchesCurrent.x;\n        }\n\n        if (!velocity.prevPositionY) {\n          velocity.prevPositionY = image.touchesCurrent.y;\n        }\n\n        if (!velocity.prevTime) {\n          velocity.prevTime = Date.now();\n        }\n\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) {\n          velocity.x = 0;\n        }\n\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) {\n          velocity.y = 0;\n        }\n\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n      },\n      onTouchEnd: function onTouchEnd() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n        var velocity = zoom.velocity;\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n\n        if (!image.isTouched || !image.isMoved) {\n          image.isTouched = false;\n          image.isMoved = false;\n          return;\n        }\n\n        image.isTouched = false;\n        image.isMoved = false;\n        var momentumDurationX = 300;\n        var momentumDurationY = 300;\n        var momentumDistanceX = velocity.x * momentumDurationX;\n        var newPositionX = image.currentX + momentumDistanceX;\n        var momentumDistanceY = velocity.y * momentumDurationY;\n        var newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n        if (velocity.x !== 0) {\n          momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        }\n\n        if (velocity.y !== 0) {\n          momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        }\n\n        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY; // Define if we need image drag\n\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n      },\n      onTransitionEnd: function onTransitionEnd() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n\n        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n          zoom.scale = 1;\n          zoom.currentScale = 1;\n          gesture.$slideEl = undefined;\n          gesture.$imageEl = undefined;\n          gesture.$imageWrapEl = undefined;\n        }\n      },\n      // Toggle Zoom\n      toggle: function toggle(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n\n        if (zoom.scale && zoom.scale !== 1) {\n          // Zoom Out\n          zoom.out();\n        } else {\n          // Zoom In\n          zoom.in(e);\n        }\n      },\n      in: function in$1(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n\n        if (!gesture.$slideEl) {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n\n        gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n        var touchX;\n        var touchY;\n        var offsetX;\n        var offsetY;\n        var diffX;\n        var diffY;\n        var translateX;\n        var translateY;\n        var imageWidth;\n        var imageHeight;\n        var scaledWidth;\n        var scaledHeight;\n        var translateMinX;\n        var translateMinY;\n        var translateMaxX;\n        var translateMaxY;\n        var slideWidth;\n        var slideHeight;\n\n        if (typeof image.touchesStart.x === 'undefined' && e) {\n          touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n          touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n        } else {\n          touchX = image.touchesStart.x;\n          touchY = image.touchesStart.y;\n        }\n\n        zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (e) {\n          slideWidth = gesture.$slideEl[0].offsetWidth;\n          slideHeight = gesture.$slideEl[0].offsetHeight;\n          offsetX = gesture.$slideEl.offset().left;\n          offsetY = gesture.$slideEl.offset().top;\n          diffX = offsetX + slideWidth / 2 - touchX;\n          diffY = offsetY + slideHeight / 2 - touchY;\n          imageWidth = gesture.$imageEl[0].offsetWidth;\n          imageHeight = gesture.$imageEl[0].offsetHeight;\n          scaledWidth = imageWidth * zoom.scale;\n          scaledHeight = imageHeight * zoom.scale;\n          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n          translateMaxX = -translateMinX;\n          translateMaxY = -translateMinY;\n          translateX = diffX * zoom.scale;\n          translateY = diffY * zoom.scale;\n\n          if (translateX < translateMinX) {\n            translateX = translateMinX;\n          }\n\n          if (translateX > translateMaxX) {\n            translateX = translateMaxX;\n          }\n\n          if (translateY < translateMinY) {\n            translateY = translateMinY;\n          }\n\n          if (translateY > translateMaxY) {\n            translateY = translateMaxY;\n          }\n        } else {\n          translateX = 0;\n          translateY = 0;\n        }\n\n        gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n        gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      },\n      out: function out() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture;\n\n        if (!gesture.$slideEl) {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n        gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n        gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n        gesture.$slideEl = undefined;\n      },\n      // Attach/Detach Events\n      enable: function enable() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n\n        if (zoom.enabled) {\n          return;\n        }\n\n        zoom.enabled = true;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        var activeListenerWithCapture = Support.passiveListener ? {\n          passive: false,\n          capture: true\n        } : true;\n        var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n\n        if (Support.gestures) {\n          swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n          swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n        } else if (swiper.touchEvents.start === 'touchstart') {\n          swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n          swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n          if (swiper.touchEvents.cancel) {\n            swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n          }\n        } // Move image\n\n\n        swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n      },\n      disable: function disable() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n\n        if (!zoom.enabled) {\n          return;\n        }\n\n        swiper.zoom.enabled = false;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        var activeListenerWithCapture = Support.passiveListener ? {\n          passive: false,\n          capture: true\n        } : true;\n        var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n\n        if (Support.gestures) {\n          swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n          swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n        } else if (swiper.touchEvents.start === 'touchstart') {\n          swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n          swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n          if (swiper.touchEvents.cancel) {\n            swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n          }\n        } // Move image\n\n\n        swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n      }\n    };\n    var Zoom$1 = {\n      name: 'zoom',\n      params: {\n        zoom: {\n          enabled: false,\n          maxRatio: 3,\n          minRatio: 1,\n          toggle: true,\n          containerClass: 'swiper-zoom-container',\n          zoomedSlideClass: 'swiper-slide-zoomed'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        var zoom = {\n          enabled: false,\n          scale: 1,\n          currentScale: 1,\n          isScaling: false,\n          gesture: {\n            $slideEl: undefined,\n            slideWidth: undefined,\n            slideHeight: undefined,\n            $imageEl: undefined,\n            $imageWrapEl: undefined,\n            maxRatio: 3\n          },\n          image: {\n            isTouched: undefined,\n            isMoved: undefined,\n            currentX: undefined,\n            currentY: undefined,\n            minX: undefined,\n            minY: undefined,\n            maxX: undefined,\n            maxY: undefined,\n            width: undefined,\n            height: undefined,\n            startX: undefined,\n            startY: undefined,\n            touchesStart: {},\n            touchesCurrent: {}\n          },\n          velocity: {\n            x: undefined,\n            y: undefined,\n            prevPositionX: undefined,\n            prevPositionY: undefined,\n            prevTime: undefined\n          }\n        };\n        'onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out'.split(' ').forEach(function (methodName) {\n          zoom[methodName] = Zoom[methodName].bind(swiper);\n        });\n        Utils.extend(swiper, {\n          zoom: zoom\n        });\n        var scale = 1;\n        Object.defineProperty(swiper.zoom, 'scale', {\n          get: function get() {\n            return scale;\n          },\n          set: function set(value) {\n            if (scale !== value) {\n              var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n              var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n              swiper.emit('zoomChange', value, imageEl, slideEl);\n            }\n\n            scale = value;\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n\n          if (swiper.params.zoom.enabled) {\n            swiper.zoom.enable();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.zoom.disable();\n        },\n        touchStart: function touchStart(e) {\n          var swiper = this;\n\n          if (!swiper.zoom.enabled) {\n            return;\n          }\n\n          swiper.zoom.onTouchStart(e);\n        },\n        touchEnd: function touchEnd(e) {\n          var swiper = this;\n\n          if (!swiper.zoom.enabled) {\n            return;\n          }\n\n          swiper.zoom.onTouchEnd(e);\n        },\n        doubleTap: function doubleTap(e) {\n          var swiper = this;\n\n          if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n            swiper.zoom.toggle(e);\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n\n          if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n            swiper.zoom.onTransitionEnd();\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n\n          if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n            swiper.zoom.onTransitionEnd();\n          }\n        }\n      }\n    };\n    var Lazy = {\n      loadInSlide: function loadInSlide(index, loadInDuplicate) {\n        if (loadInDuplicate === void 0) loadInDuplicate = true;\n        var swiper = this;\n        var params = swiper.params.lazy;\n\n        if (typeof index === 'undefined') {\n          return;\n        }\n\n        if (swiper.slides.length === 0) {\n          return;\n        }\n\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\") : swiper.slides.eq(index);\n        var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\n\n        if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n          $images = $images.add($slideEl[0]);\n        }\n\n        if ($images.length === 0) {\n          return;\n        }\n\n        $images.each(function (imageIndex, imageEl) {\n          var $imageEl = $(imageEl);\n          $imageEl.addClass(params.loadingClass);\n          var background = $imageEl.attr('data-background');\n          var src = $imageEl.attr('data-src');\n          var srcset = $imageEl.attr('data-srcset');\n          var sizes = $imageEl.attr('data-sizes');\n          swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {\n            if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) {\n              return;\n            }\n\n            if (background) {\n              $imageEl.css('background-image', \"url(\\\"\" + background + \"\\\")\");\n              $imageEl.removeAttr('data-background');\n            } else {\n              if (srcset) {\n                $imageEl.attr('srcset', srcset);\n                $imageEl.removeAttr('data-srcset');\n              }\n\n              if (sizes) {\n                $imageEl.attr('sizes', sizes);\n                $imageEl.removeAttr('data-sizes');\n              }\n\n              if (src) {\n                $imageEl.attr('src', src);\n                $imageEl.removeAttr('data-src');\n              }\n            }\n\n            $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n            $slideEl.find(\".\" + params.preloaderClass).remove();\n\n            if (swiper.params.loop && loadInDuplicate) {\n              var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n              if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n                var originalSlide = swiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + swiper.params.slideDuplicateClass + \")\");\n                swiper.lazy.loadInSlide(originalSlide.index(), false);\n              } else {\n                var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\");\n                swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n              }\n            }\n\n            swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n            if (swiper.params.autoHeight) {\n              swiper.updateAutoHeight();\n            }\n          });\n          swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n        });\n      },\n      load: function load() {\n        var swiper = this;\n        var $wrapperEl = swiper.$wrapperEl;\n        var swiperParams = swiper.params;\n        var slides = swiper.slides;\n        var activeIndex = swiper.activeIndex;\n        var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n        var params = swiperParams.lazy;\n        var slidesPerView = swiperParams.slidesPerView;\n\n        if (slidesPerView === 'auto') {\n          slidesPerView = 0;\n        }\n\n        function slideExist(index) {\n          if (isVirtual) {\n            if ($wrapperEl.children(\".\" + swiperParams.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\").length) {\n              return true;\n            }\n          } else if (slides[index]) {\n            return true;\n          }\n\n          return false;\n        }\n\n        function slideIndex(slideEl) {\n          if (isVirtual) {\n            return $(slideEl).attr('data-swiper-slide-index');\n          }\n\n          return $(slideEl).index();\n        }\n\n        if (!swiper.lazy.initialImageLoaded) {\n          swiper.lazy.initialImageLoaded = true;\n        }\n\n        if (swiper.params.watchSlidesVisibility) {\n          $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function (elIndex, slideEl) {\n            var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n            swiper.lazy.loadInSlide(index);\n          });\n        } else if (slidesPerView > 1) {\n          for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n            if (slideExist(i)) {\n              swiper.lazy.loadInSlide(i);\n            }\n          }\n        } else {\n          swiper.lazy.loadInSlide(activeIndex);\n        }\n\n        if (params.loadPrevNext) {\n          if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n            var amount = params.loadPrevNextAmount;\n            var spv = slidesPerView;\n            var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n            var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n            for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n              if (slideExist(i$1)) {\n                swiper.lazy.loadInSlide(i$1);\n              }\n            } // Prev Slides\n\n\n            for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n              if (slideExist(i$2)) {\n                swiper.lazy.loadInSlide(i$2);\n              }\n            }\n          } else {\n            var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\n\n            if (nextSlide.length > 0) {\n              swiper.lazy.loadInSlide(slideIndex(nextSlide));\n            }\n\n            var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\n\n            if (prevSlide.length > 0) {\n              swiper.lazy.loadInSlide(slideIndex(prevSlide));\n            }\n          }\n        }\n      }\n    };\n    var Lazy$1 = {\n      name: 'lazy',\n      params: {\n        lazy: {\n          enabled: false,\n          loadPrevNext: false,\n          loadPrevNextAmount: 1,\n          loadOnTransitionStart: false,\n          elementClass: 'swiper-lazy',\n          loadingClass: 'swiper-lazy-loading',\n          loadedClass: 'swiper-lazy-loaded',\n          preloaderClass: 'swiper-lazy-preloader'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          lazy: {\n            initialImageLoaded: false,\n            load: Lazy.load.bind(swiper),\n            loadInSlide: Lazy.loadInSlide.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n\n          if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n            swiper.params.preloadImages = false;\n          }\n        },\n        init: function init() {\n          var swiper = this;\n\n          if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n            swiper.lazy.load();\n          }\n        },\n        scroll: function scroll() {\n          var swiper = this;\n\n          if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n            swiper.lazy.load();\n          }\n        },\n        resize: function resize() {\n          var swiper = this;\n\n          if (swiper.params.lazy.enabled) {\n            swiper.lazy.load();\n          }\n        },\n        scrollbarDragMove: function scrollbarDragMove() {\n          var swiper = this;\n\n          if (swiper.params.lazy.enabled) {\n            swiper.lazy.load();\n          }\n        },\n        transitionStart: function transitionStart() {\n          var swiper = this;\n\n          if (swiper.params.lazy.enabled) {\n            if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {\n              swiper.lazy.load();\n            }\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n\n          if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n            swiper.lazy.load();\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n\n          if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n            swiper.lazy.load();\n          }\n        }\n      }\n    };\n    /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n    var Controller = {\n      LinearSpline: function LinearSpline(x, y) {\n        var binarySearch = function search() {\n          var maxIndex;\n          var minIndex;\n          var guess;\n          return function (array, val) {\n            minIndex = -1;\n            maxIndex = array.length;\n\n            while (maxIndex - minIndex > 1) {\n              guess = maxIndex + minIndex >> 1;\n\n              if (array[guess] <= val) {\n                minIndex = guess;\n              } else {\n                maxIndex = guess;\n              }\n            }\n\n            return maxIndex;\n          };\n        }();\n\n        this.x = x;\n        this.y = y;\n        this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n        // (x1,y1) is the known point before given value,\n        // (x3,y3) is the known point after given value.\n\n        var i1;\n        var i3;\n\n        this.interpolate = function interpolate(x2) {\n          if (!x2) {\n            return 0;\n          } // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n\n          i3 = binarySearch(this.x, x2);\n          i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n        };\n\n        return this;\n      },\n      // xxx: for now i will just save one spline function to to\n      getInterpolateFunction: function getInterpolateFunction(c) {\n        var swiper = this;\n\n        if (!swiper.controller.spline) {\n          swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n        }\n      },\n      setTranslate: function setTranslate(setTranslate$1, byController) {\n        var swiper = this;\n        var controlled = swiper.controller.control;\n        var multiplier;\n        var controlledTranslate;\n\n        function setControlledTranslate(c) {\n          // this will create an Interpolate function based on the snapGrids\n          // x is the Grid of the scrolled scroller and y will be the controlled scroller\n          // it makes sense to create this only once and recall it for the interpolation\n          // the function does a lot of value caching for performance\n          var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n          if (swiper.params.controller.by === 'slide') {\n            swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n            // but it did not work out\n\n            controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n          }\n\n          if (!controlledTranslate || swiper.params.controller.by === 'container') {\n            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n          }\n\n          if (swiper.params.controller.inverse) {\n            controlledTranslate = c.maxTranslate() - controlledTranslate;\n          }\n\n          c.updateProgress(controlledTranslate);\n          c.setTranslate(controlledTranslate, swiper);\n          c.updateActiveIndex();\n          c.updateSlidesClasses();\n        }\n\n        if (Array.isArray(controlled)) {\n          for (var i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTranslate(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTranslate(controlled);\n        }\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        var controlled = swiper.controller.control;\n        var i;\n\n        function setControlledTransition(c) {\n          c.setTransition(duration, swiper);\n\n          if (duration !== 0) {\n            c.transitionStart();\n\n            if (c.params.autoHeight) {\n              Utils.nextTick(function () {\n                c.updateAutoHeight();\n              });\n            }\n\n            c.$wrapperEl.transitionEnd(function () {\n              if (!controlled) {\n                return;\n              }\n\n              if (c.params.loop && swiper.params.controller.by === 'slide') {\n                c.loopFix();\n              }\n\n              c.transitionEnd();\n            });\n          }\n        }\n\n        if (Array.isArray(controlled)) {\n          for (i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTransition(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTransition(controlled);\n        }\n      }\n    };\n    var Controller$1 = {\n      name: 'controller',\n      params: {\n        controller: {\n          control: undefined,\n          inverse: false,\n          by: 'slide' // or 'container'\n\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          controller: {\n            control: swiper.params.controller.control,\n            getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n            setTranslate: Controller.setTranslate.bind(swiper),\n            setTransition: Controller.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        update: function update() {\n          var swiper = this;\n\n          if (!swiper.controller.control) {\n            return;\n          }\n\n          if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n          }\n        },\n        resize: function resize() {\n          var swiper = this;\n\n          if (!swiper.controller.control) {\n            return;\n          }\n\n          if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n          }\n        },\n        observerUpdate: function observerUpdate() {\n          var swiper = this;\n\n          if (!swiper.controller.control) {\n            return;\n          }\n\n          if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n          }\n        },\n        setTranslate: function setTranslate(translate, byController) {\n          var swiper = this;\n\n          if (!swiper.controller.control) {\n            return;\n          }\n\n          swiper.controller.setTranslate(translate, byController);\n        },\n        setTransition: function setTransition(duration, byController) {\n          var swiper = this;\n\n          if (!swiper.controller.control) {\n            return;\n          }\n\n          swiper.controller.setTransition(duration, byController);\n        }\n      }\n    };\n    var a11y = {\n      makeElFocusable: function makeElFocusable($el) {\n        $el.attr('tabIndex', '0');\n        return $el;\n      },\n      addElRole: function addElRole($el, role) {\n        $el.attr('role', role);\n        return $el;\n      },\n      addElLabel: function addElLabel($el, label) {\n        $el.attr('aria-label', label);\n        return $el;\n      },\n      disableEl: function disableEl($el) {\n        $el.attr('aria-disabled', true);\n        return $el;\n      },\n      enableEl: function enableEl($el) {\n        $el.attr('aria-disabled', false);\n        return $el;\n      },\n      onEnterKey: function onEnterKey(e) {\n        var swiper = this;\n        var params = swiper.params.a11y;\n\n        if (e.keyCode !== 13) {\n          return;\n        }\n\n        var $targetEl = $(e.target);\n\n        if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n          if (!(swiper.isEnd && !swiper.params.loop)) {\n            swiper.slideNext();\n          }\n\n          if (swiper.isEnd) {\n            swiper.a11y.notify(params.lastSlideMessage);\n          } else {\n            swiper.a11y.notify(params.nextSlideMessage);\n          }\n        }\n\n        if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n          if (!(swiper.isBeginning && !swiper.params.loop)) {\n            swiper.slidePrev();\n          }\n\n          if (swiper.isBeginning) {\n            swiper.a11y.notify(params.firstSlideMessage);\n          } else {\n            swiper.a11y.notify(params.prevSlideMessage);\n          }\n        }\n\n        if (swiper.pagination && $targetEl.is(\".\" + swiper.params.pagination.bulletClass)) {\n          $targetEl[0].click();\n        }\n      },\n      notify: function notify(message) {\n        var swiper = this;\n        var notification = swiper.a11y.liveRegion;\n\n        if (notification.length === 0) {\n          return;\n        }\n\n        notification.html('');\n        notification.html(message);\n      },\n      updateNavigation: function updateNavigation() {\n        var swiper = this;\n\n        if (swiper.params.loop || !swiper.navigation) {\n          return;\n        }\n\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n\n        if ($prevEl && $prevEl.length > 0) {\n          if (swiper.isBeginning) {\n            swiper.a11y.disableEl($prevEl);\n          } else {\n            swiper.a11y.enableEl($prevEl);\n          }\n        }\n\n        if ($nextEl && $nextEl.length > 0) {\n          if (swiper.isEnd) {\n            swiper.a11y.disableEl($nextEl);\n          } else {\n            swiper.a11y.enableEl($nextEl);\n          }\n        }\n      },\n      updatePagination: function updatePagination() {\n        var swiper = this;\n        var params = swiper.params.a11y;\n\n        if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n          swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n            var $bulletEl = $(bulletEl);\n            swiper.a11y.makeElFocusable($bulletEl);\n            swiper.a11y.addElRole($bulletEl, 'button');\n            swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n          });\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        swiper.$el.append(swiper.a11y.liveRegion); // Navigation\n\n        var params = swiper.params.a11y;\n        var $nextEl;\n        var $prevEl;\n\n        if (swiper.navigation && swiper.navigation.$nextEl) {\n          $nextEl = swiper.navigation.$nextEl;\n        }\n\n        if (swiper.navigation && swiper.navigation.$prevEl) {\n          $prevEl = swiper.navigation.$prevEl;\n        }\n\n        if ($nextEl) {\n          swiper.a11y.makeElFocusable($nextEl);\n          swiper.a11y.addElRole($nextEl, 'button');\n          swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n          $nextEl.on('keydown', swiper.a11y.onEnterKey);\n        }\n\n        if ($prevEl) {\n          swiper.a11y.makeElFocusable($prevEl);\n          swiper.a11y.addElRole($prevEl, 'button');\n          swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n          $prevEl.on('keydown', swiper.a11y.onEnterKey);\n        } // Pagination\n\n\n        if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n          swiper.pagination.$el.on('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) {\n          swiper.a11y.liveRegion.remove();\n        }\n\n        var $nextEl;\n        var $prevEl;\n\n        if (swiper.navigation && swiper.navigation.$nextEl) {\n          $nextEl = swiper.navigation.$nextEl;\n        }\n\n        if (swiper.navigation && swiper.navigation.$prevEl) {\n          $prevEl = swiper.navigation.$prevEl;\n        }\n\n        if ($nextEl) {\n          $nextEl.off('keydown', swiper.a11y.onEnterKey);\n        }\n\n        if ($prevEl) {\n          $prevEl.off('keydown', swiper.a11y.onEnterKey);\n        } // Pagination\n\n\n        if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n          swiper.pagination.$el.off('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\n        }\n      }\n    };\n    var A11y = {\n      name: 'a11y',\n      params: {\n        a11y: {\n          enabled: true,\n          notificationClass: 'swiper-notification',\n          prevSlideMessage: 'Previous slide',\n          nextSlideMessage: 'Next slide',\n          firstSlideMessage: 'This is the first slide',\n          lastSlideMessage: 'This is the last slide',\n          paginationBulletMessage: 'Go to slide {{index}}'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          a11y: {\n            liveRegion: $(\"<span class=\\\"\" + swiper.params.a11y.notificationClass + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")\n          }\n        });\n        Object.keys(a11y).forEach(function (methodName) {\n          swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n\n          swiper.a11y.init();\n          swiper.a11y.updateNavigation();\n        },\n        toEdge: function toEdge() {\n          var swiper = this;\n\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n\n          swiper.a11y.updateNavigation();\n        },\n        fromEdge: function fromEdge() {\n          var swiper = this;\n\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n\n          swiper.a11y.updateNavigation();\n        },\n        paginationUpdate: function paginationUpdate() {\n          var swiper = this;\n\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n\n          swiper.a11y.updatePagination();\n        },\n        destroy: function destroy() {\n          var swiper = this;\n\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n\n          swiper.a11y.destroy();\n        }\n      }\n    };\n    var History = {\n      init: function init() {\n        var swiper = this;\n\n        if (!swiper.params.history) {\n          return;\n        }\n\n        if (!win.history || !win.history.pushState) {\n          swiper.params.history.enabled = false;\n          swiper.params.hashNavigation.enabled = true;\n          return;\n        }\n\n        var history = swiper.history;\n        history.initialized = true;\n        history.paths = History.getPathValues();\n\n        if (!history.paths.key && !history.paths.value) {\n          return;\n        }\n\n        history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n\n        if (!swiper.params.history.replaceState) {\n          win.addEventListener('popstate', swiper.history.setHistoryPopState);\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (!swiper.params.history.replaceState) {\n          win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n        }\n      },\n      setHistoryPopState: function setHistoryPopState() {\n        var swiper = this;\n        swiper.history.paths = History.getPathValues();\n        swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n      },\n      getPathValues: function getPathValues() {\n        var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) {\n          return part !== '';\n        });\n        var total = pathArray.length;\n        var key = pathArray[total - 2];\n        var value = pathArray[total - 1];\n        return {\n          key: key,\n          value: value\n        };\n      },\n      setHistory: function setHistory(key, index) {\n        var swiper = this;\n\n        if (!swiper.history.initialized || !swiper.params.history.enabled) {\n          return;\n        }\n\n        var slide = swiper.slides.eq(index);\n        var value = History.slugify(slide.attr('data-history'));\n\n        if (!win.location.pathname.includes(key)) {\n          value = key + \"/\" + value;\n        }\n\n        var currentState = win.history.state;\n\n        if (currentState && currentState.value === value) {\n          return;\n        }\n\n        if (swiper.params.history.replaceState) {\n          win.history.replaceState({\n            value: value\n          }, null, value);\n        } else {\n          win.history.pushState({\n            value: value\n          }, null, value);\n        }\n      },\n      slugify: function slugify(text) {\n        return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n      },\n      scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n        var swiper = this;\n\n        if (value) {\n          for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n            var slide = swiper.slides.eq(i);\n            var slideHistory = History.slugify(slide.attr('data-history'));\n\n            if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n              var index = slide.index();\n              swiper.slideTo(index, speed, runCallbacks);\n            }\n          }\n        } else {\n          swiper.slideTo(0, speed, runCallbacks);\n        }\n      }\n    };\n    var History$1 = {\n      name: 'history',\n      params: {\n        history: {\n          enabled: false,\n          replaceState: false,\n          key: 'slides'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          history: {\n            init: History.init.bind(swiper),\n            setHistory: History.setHistory.bind(swiper),\n            setHistoryPopState: History.setHistoryPopState.bind(swiper),\n            scrollToSlide: History.scrollToSlide.bind(swiper),\n            destroy: History.destroy.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n\n          if (swiper.params.history.enabled) {\n            swiper.history.init();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n\n          if (swiper.params.history.enabled) {\n            swiper.history.destroy();\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n\n          if (swiper.history.initialized) {\n            swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n\n          if (swiper.history.initialized && swiper.params.cssMode) {\n            swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n          }\n        }\n      }\n    };\n    var HashNavigation = {\n      onHashCange: function onHashCange() {\n        var swiper = this;\n        var newHash = doc.location.hash.replace('#', '');\n        var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n        if (newHash !== activeSlideHash) {\n          var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-hash=\\\"\" + newHash + \"\\\"]\").index();\n\n          if (typeof newIndex === 'undefined') {\n            return;\n          }\n\n          swiper.slideTo(newIndex);\n        }\n      },\n      setHash: function setHash() {\n        var swiper = this;\n\n        if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) {\n          return;\n        }\n\n        if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n          win.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || false);\n        } else {\n          var slide = swiper.slides.eq(swiper.activeIndex);\n          var hash = slide.attr('data-hash') || slide.attr('data-history');\n          doc.location.hash = hash || '';\n        }\n      },\n      init: function init() {\n        var swiper = this;\n\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) {\n          return;\n        }\n\n        swiper.hashNavigation.initialized = true;\n        var hash = doc.location.hash.replace('#', '');\n\n        if (hash) {\n          var speed = 0;\n\n          for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n            var slide = swiper.slides.eq(i);\n            var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n            if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n              var index = slide.index();\n              swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n            }\n          }\n        }\n\n        if (swiper.params.hashNavigation.watchState) {\n          $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n\n        if (swiper.params.hashNavigation.watchState) {\n          $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n        }\n      }\n    };\n    var HashNavigation$1 = {\n      name: 'hash-navigation',\n      params: {\n        hashNavigation: {\n          enabled: false,\n          replaceState: false,\n          watchState: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          hashNavigation: {\n            initialized: false,\n            init: HashNavigation.init.bind(swiper),\n            destroy: HashNavigation.destroy.bind(swiper),\n            setHash: HashNavigation.setHash.bind(swiper),\n            onHashCange: HashNavigation.onHashCange.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n\n          if (swiper.params.hashNavigation.enabled) {\n            swiper.hashNavigation.init();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n\n          if (swiper.params.hashNavigation.enabled) {\n            swiper.hashNavigation.destroy();\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n\n          if (swiper.hashNavigation.initialized) {\n            swiper.hashNavigation.setHash();\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n\n          if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n            swiper.hashNavigation.setHash();\n          }\n        }\n      }\n    };\n    /* eslint no-underscore-dangle: \"off\" */\n\n    var Autoplay = {\n      run: function run() {\n        var swiper = this;\n        var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n        var delay = swiper.params.autoplay.delay;\n\n        if ($activeSlideEl.attr('data-swiper-autoplay')) {\n          delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n        }\n\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = Utils.nextTick(function () {\n          if (swiper.params.autoplay.reverseDirection) {\n            if (swiper.params.loop) {\n              swiper.loopFix();\n              swiper.slidePrev(swiper.params.speed, true, true);\n              swiper.emit('autoplay');\n            } else if (!swiper.isBeginning) {\n              swiper.slidePrev(swiper.params.speed, true, true);\n              swiper.emit('autoplay');\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n              swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n              swiper.emit('autoplay');\n            } else {\n              swiper.autoplay.stop();\n            }\n          } else if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slideNext(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isEnd) {\n            swiper.slideNext(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(0, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n\n          if (swiper.params.cssMode && swiper.autoplay.running) {\n            swiper.autoplay.run();\n          }\n        }, delay);\n      },\n      start: function start() {\n        var swiper = this;\n\n        if (typeof swiper.autoplay.timeout !== 'undefined') {\n          return false;\n        }\n\n        if (swiper.autoplay.running) {\n          return false;\n        }\n\n        swiper.autoplay.running = true;\n        swiper.emit('autoplayStart');\n        swiper.autoplay.run();\n        return true;\n      },\n      stop: function stop() {\n        var swiper = this;\n\n        if (!swiper.autoplay.running) {\n          return false;\n        }\n\n        if (typeof swiper.autoplay.timeout === 'undefined') {\n          return false;\n        }\n\n        if (swiper.autoplay.timeout) {\n          clearTimeout(swiper.autoplay.timeout);\n          swiper.autoplay.timeout = undefined;\n        }\n\n        swiper.autoplay.running = false;\n        swiper.emit('autoplayStop');\n        return true;\n      },\n      pause: function pause(speed) {\n        var swiper = this;\n\n        if (!swiper.autoplay.running) {\n          return;\n        }\n\n        if (swiper.autoplay.paused) {\n          return;\n        }\n\n        if (swiper.autoplay.timeout) {\n          clearTimeout(swiper.autoplay.timeout);\n        }\n\n        swiper.autoplay.paused = true;\n\n        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n          swiper.autoplay.paused = false;\n          swiper.autoplay.run();\n        } else {\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n        }\n      }\n    };\n    var Autoplay$1 = {\n      name: 'autoplay',\n      params: {\n        autoplay: {\n          enabled: false,\n          delay: 3000,\n          waitForTransition: true,\n          disableOnInteraction: true,\n          stopOnLastSlide: false,\n          reverseDirection: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          autoplay: {\n            running: false,\n            paused: false,\n            run: Autoplay.run.bind(swiper),\n            start: Autoplay.start.bind(swiper),\n            stop: Autoplay.stop.bind(swiper),\n            pause: Autoplay.pause.bind(swiper),\n            onVisibilityChange: function onVisibilityChange() {\n              if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n                swiper.autoplay.pause();\n              }\n\n              if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n                swiper.autoplay.run();\n                swiper.autoplay.paused = false;\n              }\n            },\n            onTransitionEnd: function onTransitionEnd(e) {\n              if (!swiper || swiper.destroyed || !swiper.$wrapperEl) {\n                return;\n              }\n\n              if (e.target !== this) {\n                return;\n              }\n\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n              swiper.autoplay.paused = false;\n\n              if (!swiper.autoplay.running) {\n                swiper.autoplay.stop();\n              } else {\n                swiper.autoplay.run();\n              }\n            }\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n\n          if (swiper.params.autoplay.enabled) {\n            swiper.autoplay.start();\n            document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n          }\n        },\n        beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n          var swiper = this;\n\n          if (swiper.autoplay.running) {\n            if (internal || !swiper.params.autoplay.disableOnInteraction) {\n              swiper.autoplay.pause(speed);\n            } else {\n              swiper.autoplay.stop();\n            }\n          }\n        },\n        sliderFirstMove: function sliderFirstMove() {\n          var swiper = this;\n\n          if (swiper.autoplay.running) {\n            if (swiper.params.autoplay.disableOnInteraction) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.pause();\n            }\n          }\n        },\n        touchEnd: function touchEnd() {\n          var swiper = this;\n\n          if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.run();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n\n          if (swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          }\n\n          document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        }\n      }\n    };\n    var Fade = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var slides = swiper.slides;\n\n        for (var i = 0; i < slides.length; i += 1) {\n          var $slideEl = swiper.slides.eq(i);\n          var offset = $slideEl[0].swiperSlideOffset;\n          var tx = -offset;\n\n          if (!swiper.params.virtualTranslate) {\n            tx -= swiper.translate;\n          }\n\n          var ty = 0;\n\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n          }\n\n          var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n          $slideEl.css({\n            opacity: slideOpacity\n          }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var slides = swiper.slides;\n        var $wrapperEl = swiper.$wrapperEl;\n        slides.transition(duration);\n\n        if (swiper.params.virtualTranslate && duration !== 0) {\n          var eventTriggered = false;\n          slides.transitionEnd(function () {\n            if (eventTriggered) {\n              return;\n            }\n\n            if (!swiper || swiper.destroyed) {\n              return;\n            }\n\n            eventTriggered = true;\n            swiper.animating = false;\n            var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n            for (var i = 0; i < triggerEvents.length; i += 1) {\n              $wrapperEl.trigger(triggerEvents[i]);\n            }\n          });\n        }\n      }\n    };\n    var EffectFade = {\n      name: 'effect-fade',\n      params: {\n        fadeEffect: {\n          crossFade: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          fadeEffect: {\n            setTranslate: Fade.setTranslate.bind(swiper),\n            setTransition: Fade.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'fade') {\n            return;\n          }\n\n          swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\n          var overwriteParams = {\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: true,\n            spaceBetween: 0,\n            virtualTranslate: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'fade') {\n            return;\n          }\n\n          swiper.fadeEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'fade') {\n            return;\n          }\n\n          swiper.fadeEffect.setTransition(duration);\n        }\n      }\n    };\n    var Cube = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var $el = swiper.$el;\n        var $wrapperEl = swiper.$wrapperEl;\n        var slides = swiper.slides;\n        var swiperWidth = swiper.width;\n        var swiperHeight = swiper.height;\n        var rtl = swiper.rtlTranslate;\n        var swiperSize = swiper.size;\n        var params = swiper.params.cubeEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var wrapperRotate = 0;\n        var $cubeShadowEl;\n\n        if (params.shadow) {\n          if (isHorizontal) {\n            $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n            if ($cubeShadowEl.length === 0) {\n              $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n              $wrapperEl.append($cubeShadowEl);\n            }\n\n            $cubeShadowEl.css({\n              height: swiperWidth + \"px\"\n            });\n          } else {\n            $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n            if ($cubeShadowEl.length === 0) {\n              $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n              $el.append($cubeShadowEl);\n            }\n          }\n        }\n\n        for (var i = 0; i < slides.length; i += 1) {\n          var $slideEl = slides.eq(i);\n          var slideIndex = i;\n\n          if (isVirtual) {\n            slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n          }\n\n          var slideAngle = slideIndex * 90;\n          var round = Math.floor(slideAngle / 360);\n\n          if (rtl) {\n            slideAngle = -slideAngle;\n            round = Math.floor(-slideAngle / 360);\n          }\n\n          var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n          var tx = 0;\n          var ty = 0;\n          var tz = 0;\n\n          if (slideIndex % 4 === 0) {\n            tx = -round * 4 * swiperSize;\n            tz = 0;\n          } else if ((slideIndex - 1) % 4 === 0) {\n            tx = 0;\n            tz = -round * 4 * swiperSize;\n          } else if ((slideIndex - 2) % 4 === 0) {\n            tx = swiperSize + round * 4 * swiperSize;\n            tz = swiperSize;\n          } else if ((slideIndex - 3) % 4 === 0) {\n            tx = -swiperSize;\n            tz = 3 * swiperSize + swiperSize * 4 * round;\n          }\n\n          if (rtl) {\n            tx = -tx;\n          }\n\n          if (!isHorizontal) {\n            ty = tx;\n            tx = 0;\n          }\n\n          var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n\n          if (progress <= 1 && progress > -1) {\n            wrapperRotate = slideIndex * 90 + progress * 90;\n\n            if (rtl) {\n              wrapperRotate = -slideIndex * 90 - progress * 90;\n            }\n          }\n\n          $slideEl.transform(transform);\n\n          if (params.slideShadows) {\n            // Set shadows\n            var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n            if (shadowBefore.length === 0) {\n              shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n              $slideEl.append(shadowBefore);\n            }\n\n            if (shadowAfter.length === 0) {\n              shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n              $slideEl.append(shadowAfter);\n            }\n\n            if (shadowBefore.length) {\n              shadowBefore[0].style.opacity = Math.max(-progress, 0);\n            }\n\n            if (shadowAfter.length) {\n              shadowAfter[0].style.opacity = Math.max(progress, 0);\n            }\n          }\n        }\n\n        $wrapperEl.css({\n          '-webkit-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n          '-moz-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n          '-ms-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n          'transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\"\n        });\n\n        if (params.shadow) {\n          if (isHorizontal) {\n            $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\n          } else {\n            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n            var scale1 = params.shadowScale;\n            var scale2 = params.shadowScale / multiplier;\n            var offset = params.shadowOffset;\n            $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\n          }\n        }\n\n        var zFactor = Browser.isSafari || Browser.isUiWebView ? -swiperSize / 2 : 0;\n        $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var $el = swiper.$el;\n        var slides = swiper.slides;\n        slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n          $el.find('.swiper-cube-shadow').transition(duration);\n        }\n      }\n    };\n    var EffectCube = {\n      name: 'effect-cube',\n      params: {\n        cubeEffect: {\n          slideShadows: true,\n          shadow: true,\n          shadowOffset: 20,\n          shadowScale: 0.94\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          cubeEffect: {\n            setTranslate: Cube.setTranslate.bind(swiper),\n            setTransition: Cube.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'cube') {\n            return;\n          }\n\n          swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\n          swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n          var overwriteParams = {\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: true,\n            resistanceRatio: 0,\n            spaceBetween: 0,\n            centeredSlides: false,\n            virtualTranslate: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'cube') {\n            return;\n          }\n\n          swiper.cubeEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'cube') {\n            return;\n          }\n\n          swiper.cubeEffect.setTransition(duration);\n        }\n      }\n    };\n    var Flip = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var slides = swiper.slides;\n        var rtl = swiper.rtlTranslate;\n\n        for (var i = 0; i < slides.length; i += 1) {\n          var $slideEl = slides.eq(i);\n          var progress = $slideEl[0].progress;\n\n          if (swiper.params.flipEffect.limitRotation) {\n            progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n          }\n\n          var offset = $slideEl[0].swiperSlideOffset;\n          var rotate = -180 * progress;\n          var rotateY = rotate;\n          var rotateX = 0;\n          var tx = -offset;\n          var ty = 0;\n\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n            rotateX = -rotateY;\n            rotateY = 0;\n          } else if (rtl) {\n            rotateY = -rotateY;\n          }\n\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n          if (swiper.params.flipEffect.slideShadows) {\n            // Set shadows\n            var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n            if (shadowBefore.length === 0) {\n              shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\");\n              $slideEl.append(shadowBefore);\n            }\n\n            if (shadowAfter.length === 0) {\n              shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\");\n              $slideEl.append(shadowAfter);\n            }\n\n            if (shadowBefore.length) {\n              shadowBefore[0].style.opacity = Math.max(-progress, 0);\n            }\n\n            if (shadowAfter.length) {\n              shadowAfter[0].style.opacity = Math.max(progress, 0);\n            }\n          }\n\n          $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var slides = swiper.slides;\n        var activeIndex = swiper.activeIndex;\n        var $wrapperEl = swiper.$wrapperEl;\n        slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n        if (swiper.params.virtualTranslate && duration !== 0) {\n          var eventTriggered = false; // eslint-disable-next-line\n\n          slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n            if (eventTriggered) {\n              return;\n            }\n\n            if (!swiper || swiper.destroyed) {\n              return;\n            } // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n\n\n            eventTriggered = true;\n            swiper.animating = false;\n            var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n            for (var i = 0; i < triggerEvents.length; i += 1) {\n              $wrapperEl.trigger(triggerEvents[i]);\n            }\n          });\n        }\n      }\n    };\n    var EffectFlip = {\n      name: 'effect-flip',\n      params: {\n        flipEffect: {\n          slideShadows: true,\n          limitRotation: true\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          flipEffect: {\n            setTranslate: Flip.setTranslate.bind(swiper),\n            setTransition: Flip.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'flip') {\n            return;\n          }\n\n          swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\n          swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n          var overwriteParams = {\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: true,\n            spaceBetween: 0,\n            virtualTranslate: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'flip') {\n            return;\n          }\n\n          swiper.flipEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'flip') {\n            return;\n          }\n\n          swiper.flipEffect.setTransition(duration);\n        }\n      }\n    };\n    var Coverflow = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var swiperWidth = swiper.width;\n        var swiperHeight = swiper.height;\n        var slides = swiper.slides;\n        var $wrapperEl = swiper.$wrapperEl;\n        var slidesSizesGrid = swiper.slidesSizesGrid;\n        var params = swiper.params.coverflowEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var transform = swiper.translate;\n        var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n        var rotate = isHorizontal ? params.rotate : -params.rotate;\n        var translate = params.depth; // Each slide offset from center\n\n        for (var i = 0, length = slides.length; i < length; i += 1) {\n          var $slideEl = slides.eq(i);\n          var slideSize = slidesSizesGrid[i];\n          var slideOffset = $slideEl[0].swiperSlideOffset;\n          var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n          var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n          var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n          var translateZ = -translate * Math.abs(offsetMultiplier);\n          var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n            stretch = parseFloat(params.stretch) / 100 * slideSize;\n          }\n\n          var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n          var translateX = isHorizontal ? stretch * offsetMultiplier : 0; // Fix for ultra small values\n\n          if (Math.abs(translateX) < 0.001) {\n            translateX = 0;\n          }\n\n          if (Math.abs(translateY) < 0.001) {\n            translateY = 0;\n          }\n\n          if (Math.abs(translateZ) < 0.001) {\n            translateZ = 0;\n          }\n\n          if (Math.abs(rotateY) < 0.001) {\n            rotateY = 0;\n          }\n\n          if (Math.abs(rotateX) < 0.001) {\n            rotateX = 0;\n          }\n\n          var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n          $slideEl.transform(slideTransform);\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n          if (params.slideShadows) {\n            // Set shadows\n            var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n            if ($shadowBeforeEl.length === 0) {\n              $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n              $slideEl.append($shadowBeforeEl);\n            }\n\n            if ($shadowAfterEl.length === 0) {\n              $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n              $slideEl.append($shadowAfterEl);\n            }\n\n            if ($shadowBeforeEl.length) {\n              $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n            }\n\n            if ($shadowAfterEl.length) {\n              $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n            }\n          }\n        } // Set correct perspective for IE10\n\n\n        if (Support.pointerEvents || Support.prefixedPointerEvents) {\n          var ws = $wrapperEl[0].style;\n          ws.perspectiveOrigin = center + \"px 50%\";\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n      }\n    };\n    var EffectCoverflow = {\n      name: 'effect-coverflow',\n      params: {\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          modifier: 1,\n          slideShadows: true\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          coverflowEffect: {\n            setTranslate: Coverflow.setTranslate.bind(swiper),\n            setTransition: Coverflow.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'coverflow') {\n            return;\n          }\n\n          swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n          swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n          swiper.params.watchSlidesProgress = true;\n          swiper.originalParams.watchSlidesProgress = true;\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'coverflow') {\n            return;\n          }\n\n          swiper.coverflowEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n\n          if (swiper.params.effect !== 'coverflow') {\n            return;\n          }\n\n          swiper.coverflowEffect.setTransition(duration);\n        }\n      }\n    };\n    var Thumbs = {\n      init: function init() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbsParams = ref.thumbs;\n        var SwiperClass = swiper.constructor;\n\n        if (thumbsParams.swiper instanceof SwiperClass) {\n          swiper.thumbs.swiper = thumbsParams.swiper;\n          Utils.extend(swiper.thumbs.swiper.originalParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          Utils.extend(swiper.thumbs.swiper.params, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n        } else if (Utils.isObject(thumbsParams.swiper)) {\n          swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n            watchSlidesVisibility: true,\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          }));\n          swiper.thumbs.swiperCreated = true;\n        }\n\n        swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n        swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n      },\n      onThumbClick: function onThumbClick() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n\n        if (!thumbsSwiper) {\n          return;\n        }\n\n        var clickedIndex = thumbsSwiper.clickedIndex;\n        var clickedSlide = thumbsSwiper.clickedSlide;\n\n        if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) {\n          return;\n        }\n\n        if (typeof clickedIndex === 'undefined' || clickedIndex === null) {\n          return;\n        }\n\n        var slideToIndex;\n\n        if (thumbsSwiper.params.loop) {\n          slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n        } else {\n          slideToIndex = clickedIndex;\n        }\n\n        if (swiper.params.loop) {\n          var currentIndex = swiper.activeIndex;\n\n          if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n            swiper.loopFix(); // eslint-disable-next-line\n\n            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n            currentIndex = swiper.activeIndex;\n          }\n\n          var prevIndex = swiper.slides.eq(currentIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n          var nextIndex = swiper.slides.eq(currentIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n\n          if (typeof prevIndex === 'undefined') {\n            slideToIndex = nextIndex;\n          } else if (typeof nextIndex === 'undefined') {\n            slideToIndex = prevIndex;\n          } else if (nextIndex - currentIndex < currentIndex - prevIndex) {\n            slideToIndex = nextIndex;\n          } else {\n            slideToIndex = prevIndex;\n          }\n        }\n\n        swiper.slideTo(slideToIndex);\n      },\n      update: function update(initial) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n\n        if (!thumbsSwiper) {\n          return;\n        }\n\n        var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n        if (swiper.realIndex !== thumbsSwiper.realIndex) {\n          var currentThumbsIndex = thumbsSwiper.activeIndex;\n          var newThumbsIndex;\n\n          if (thumbsSwiper.params.loop) {\n            if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n              thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n              thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n              currentThumbsIndex = thumbsSwiper.activeIndex;\n            } // Find actual thumbs index to slide to\n\n\n            var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n            var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n\n            if (typeof prevThumbsIndex === 'undefined') {\n              newThumbsIndex = nextThumbsIndex;\n            } else if (typeof nextThumbsIndex === 'undefined') {\n              newThumbsIndex = prevThumbsIndex;\n            } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n              newThumbsIndex = currentThumbsIndex;\n            } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n              newThumbsIndex = nextThumbsIndex;\n            } else {\n              newThumbsIndex = prevThumbsIndex;\n            }\n          } else {\n            newThumbsIndex = swiper.realIndex;\n          }\n\n          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n            if (thumbsSwiper.params.centeredSlides) {\n              if (newThumbsIndex > currentThumbsIndex) {\n                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n              } else {\n                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n              }\n            } else if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n            }\n\n            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n          }\n        } // Activate thumbs\n\n\n        var thumbsToActivate = 1;\n        var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n          thumbsToActivate = swiper.params.slidesPerView;\n        }\n\n        if (!swiper.params.thumbs.multipleActiveThumbs) {\n          thumbsToActivate = 1;\n        }\n\n        thumbsToActivate = Math.floor(thumbsToActivate);\n        thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n          for (var i = 0; i < thumbsToActivate; i += 1) {\n            thumbsSwiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\").addClass(thumbActiveClass);\n          }\n        } else {\n          for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n            thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n          }\n        }\n      }\n    };\n    var Thumbs$1 = {\n      name: 'thumbs',\n      params: {\n        thumbs: {\n          multipleActiveThumbs: true,\n          swiper: null,\n          slideThumbActiveClass: 'swiper-slide-thumb-active',\n          thumbsContainerClass: 'swiper-container-thumbs'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          thumbs: {\n            swiper: null,\n            init: Thumbs.init.bind(swiper),\n            update: Thumbs.update.bind(swiper),\n            onThumbClick: Thumbs.onThumbClick.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          var ref = swiper.params;\n          var thumbs = ref.thumbs;\n\n          if (!thumbs || !thumbs.swiper) {\n            return;\n          }\n\n          swiper.thumbs.init();\n          swiper.thumbs.update(true);\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n\n          swiper.thumbs.update();\n        },\n        update: function update() {\n          var swiper = this;\n\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n\n          swiper.thumbs.update();\n        },\n        resize: function resize() {\n          var swiper = this;\n\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n\n          swiper.thumbs.update();\n        },\n        observerUpdate: function observerUpdate() {\n          var swiper = this;\n\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n\n          swiper.thumbs.update();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          var thumbsSwiper = swiper.thumbs.swiper;\n\n          if (!thumbsSwiper) {\n            return;\n          }\n\n          thumbsSwiper.setTransition(duration);\n        },\n        beforeDestroy: function beforeDestroy() {\n          var swiper = this;\n          var thumbsSwiper = swiper.thumbs.swiper;\n\n          if (!thumbsSwiper) {\n            return;\n          }\n\n          if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n            thumbsSwiper.destroy();\n          }\n        }\n      }\n    }; // Swiper Class\n\n    var components = [Device$1, Support$1, Browser$1, Resize, Observer$1, Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];\n\n    if (typeof Swiper.use === 'undefined') {\n      Swiper.use = Swiper.Class.use;\n      Swiper.installModule = Swiper.Class.installModule;\n    }\n\n    Swiper.use(components);\n    return Swiper;\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (swiper());\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"../node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///./js/vendor/swiper.js?")}});